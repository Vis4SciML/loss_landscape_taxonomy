train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 4.9925e-01 (4.9925e-01)	Acc 0.323242 (0.323242)
Epoch: [0][ 50/616]	Loss 3.2109e+01 (2.9747e+01)	Acc 0.197266 (0.205519)
Epoch: [0][100/616]	Loss 3.1367e+01 (3.0785e+01)	Acc 0.215820 (0.204711)
Epoch: [0][150/616]	Loss 3.1562e+01 (3.1155e+01)	Acc 0.210938 (0.203979)
Epoch: [0][200/616]	Loss 3.1328e+01 (3.1333e+01)	Acc 0.216797 (0.203795)
Epoch: [0][250/616]	Loss 3.2500e+01 (3.1479e+01)	Acc 0.187500 (0.202701)
Epoch: [0][300/616]	Loss 3.1875e+01 (3.1559e+01)	Acc 0.203125 (0.202427)
Epoch: [0][350/616]	Loss 3.2227e+01 (3.1611e+01)	Acc 0.194336 (0.202332)
Epoch: [0][400/616]	Loss 3.2617e+01 (3.1655e+01)	Acc 0.184570 (0.202170)
Epoch: [0][450/616]	Loss 3.2617e+01 (3.1692e+01)	Acc 0.184570 (0.201947)
Epoch: [0][500/616]	Loss 3.2266e+01 (3.1716e+01)	Acc 0.193359 (0.201934)
Epoch: [0][550/616]	Loss 3.2539e+01 (3.1745e+01)	Acc 0.186523 (0.201673)
Epoch: [0][600/616]	Loss 3.1289e+01 (3.1763e+01)	Acc 0.217773 (0.201619)
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.200521 (0.201000)
Training Loss of Epoch 0: 31.76581464894419
Testing of Epoch 0: 0.201
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.1484e+01 (3.1484e+01)	Acc 0.212891 (0.212891)
Epoch: [1][ 50/616]	Loss 3.1484e+01 (3.1864e+01)	Acc 0.212891 (0.203393)
Epoch: [1][100/616]	Loss 3.2969e+01 (3.1925e+01)	Acc 0.175781 (0.201878)
Epoch: [1][150/616]	Loss 3.1914e+01 (3.1901e+01)	Acc 0.202148 (0.202485)
Epoch: [1][200/616]	Loss 3.2422e+01 (3.1939e+01)	Acc 0.189453 (0.201527)
Epoch: [1][250/616]	Loss 3.2109e+01 (3.1963e+01)	Acc 0.197266 (0.200915)
Epoch: [1][300/616]	Loss 3.2188e+01 (3.1947e+01)	Acc 0.195312 (0.201315)
Epoch: [1][350/616]	Loss 3.1484e+01 (3.1945e+01)	Acc 0.212891 (0.201383)
Epoch: [1][400/616]	Loss 3.1680e+01 (3.1956e+01)	Acc 0.208008 (0.201101)
Epoch: [1][450/616]	Loss 3.1562e+01 (3.1961e+01)	Acc 0.210938 (0.200973)
Epoch: [1][500/616]	Loss 3.1562e+01 (3.1952e+01)	Acc 0.210938 (0.201199)
Epoch: [1][550/616]	Loss 3.1484e+01 (3.1945e+01)	Acc 0.212891 (0.201376)
Epoch: [1][600/616]	Loss 3.2305e+01 (3.1948e+01)	Acc 0.192383 (0.201302)
Neglect the last epoch so that num samples/batch size = int
Testing
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
torch.Size([1024, 16])
tensor([ 1.2661, -0.7030, -1.2041, -0.8481, -1.0843, -0.6235,  0.2159,  0.2162,
         0.2159,  0.9274,  1.0034,  1.0907,  0.7300,  0.6850, -1.2692, -1.2411])
tensor([0., 1., 0., 0., 0.])
Epoch: [0][  0/616]	Loss 5.0051e-01 (5.0051e-01)	Acc 0.176758 (0.176758)
torch.Size([1024, 16])
tensor([-0.6615,  0.5406,  0.7299,  0.2771,  0.2652, -0.1822, -0.7643, -0.7881,
        -0.7643, -0.1587,  0.2585,  0.0195, -0.1977, -0.4381,  0.0819,  0.6963])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9274,  0.6251,  0.1273, -0.0459,  1.3988,  1.4402,  2.4152,  3.0624,
         2.4152,  0.9324,  0.3006, -0.0049,  1.3095,  1.2214,  0.2797,  1.3882])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1244,  0.1891,  0.1645, -0.2006, -0.1410, -0.4057, -0.7694, -0.8849,
        -0.7694, -0.5040, -0.0864, -0.2975, -0.5301, -0.7972,  0.0725, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.2346, -0.6762, -1.1892, -0.8475, -1.0714, -0.6223,  0.1408,  0.6257,
         0.1408,  1.1520,  1.3237,  1.9650,  1.1292,  1.8714, -1.2560, -1.1027])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2958, -0.0910, -1.1086, -0.8396, -0.9226, -0.6072,  1.1636,  1.5594,
         1.1636,  1.2968,  0.8067,  0.7122,  1.3412,  1.5769, -0.9685,  0.0966])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8523,  0.7644, -0.2692, -0.5380, -0.4085, -0.4649, -0.6530, -0.5727,
        -0.6530, -0.3002, -0.1867, -0.5923, -0.3697, -0.6223, -0.1994,  0.4657])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2903,  0.5190,  0.9883,  1.3647,  1.1225,  1.6492,  0.0880,  0.3338,
         0.0880, -0.7847, -1.0740, -0.7981, -0.8322, -0.4680,  1.2650,  0.4657])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.6298,  0.0904,  0.0783, -0.2372, -0.3189, -0.3821, -1.0149, -0.7812,
        -1.0149, -0.9073, -0.9469, -0.8371, -1.0983, -0.8653,  0.0248, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.1588, -1.6552, -1.2252, -0.8490, -1.1059, -0.6241,  0.2425,  0.5293,
         0.2425,  0.6822,  0.7023,  1.5163,  0.8428,  1.4892, -1.2868, -1.8869])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4950, -0.1700,  0.2996, -0.0719, -0.3981, -0.4828, -1.4104, -1.1596,
        -1.4104, -1.1408, -0.8985, -0.8798, -1.2791, -1.1166,  0.3655, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.2749,  0.7794,  2.7238,  3.7425,  3.1474,  3.8844,  0.2859,  0.2541,
         0.2859,  0.8683,  0.7738,  0.5529,  0.6002,  0.2732,  3.3844,  1.9879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.8821, -2.4894, -0.3291, -0.3328, -0.4881, -0.4492, -0.7565, -0.8807,
        -0.7565, -1.6959, -1.7323, -1.2245, -1.7074, -1.2350,  0.2920, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.3721,  0.5581,  1.8305,  2.1119,  2.3146,  2.6992,  0.4054,  0.5028,
         0.4054,  0.6752,  0.4197,  0.4993,  0.3339,  0.2216,  1.6567,  0.0044])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.0212, -1.1996, -0.1007, -0.2568,  0.5747,  0.2319,  1.4208,  1.0734,
         1.4208,  0.0922, -0.1758, -0.1545,  0.4571,  0.2419, -0.4950,  0.1428])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3395,  0.2678, -0.5728, -0.5020, -0.0021, -0.3745,  1.8877, -0.2074,
         1.8877, -1.0954, -1.2379, -1.3124, -0.4592, -0.9647, -0.0345, -0.5030])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.8240, -0.4726,  0.1385, -0.2138, -0.4300, -0.4278, -1.3151, -0.9341,
        -1.3151, -1.0739, -0.9197, -0.7053, -1.2125, -0.7834,  0.0447, -0.5953])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4981,  0.0864,  0.0422,  0.1197,  2.0019,  2.4944,  4.0531,  4.2105,
         4.0531,  0.3225, -0.3774, -0.5204,  1.1678,  1.2321, -0.6914, -0.5492])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.1483,  0.3730, -0.0280, -0.2348, -0.1548, -0.3954, -0.4881, -0.8222,
        -0.4881, -0.8956, -0.8486, -1.0131, -0.7801, -0.9488,  0.0419, -0.6414])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.5448, -0.8374, -1.2215, -0.8489, -1.1061, -0.6242,  0.0814,  0.3555,
         0.0814,  0.8811,  1.0420,  1.5222,  0.9141,  1.4375, -1.2732, -0.5492])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4263, -0.0448,  0.2348, -0.0941, -0.2269, -0.4336, -1.0264, -1.0348,
        -1.0264, -0.9032, -0.7787, -0.8835, -0.9270, -0.9987,  0.2705, -0.5953])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0191,  0.4129,  0.0089, -0.1902,  0.0561, -0.3709, -0.0865, -0.8010,
        -0.0865, -0.6515, -0.5051, -0.8285, -0.4111, -0.9365,  0.1096, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6718,  0.3946, -0.9260, -0.8124, -0.7268, -0.5716,  0.7230,  1.0438,
         0.7230,  1.4784,  1.5424,  1.1066,  1.3109,  0.9962, -1.0073,  0.5579])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0600,  0.4164,  0.0585, -0.2792,  0.0018, -0.2925, -0.3030, -0.4517,
        -0.3030, -0.1266, -0.0155, -0.1485, -0.2012, -0.4448,  0.1047, -0.2263])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4316, -0.8659, -1.2214, -0.8488, -1.1178, -0.6249, -0.3797, -0.5282,
        -0.3797,  0.0309,  0.3059,  0.4387,  0.0261, -0.1621, -1.2804, -1.2411])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2335,  0.3057, -0.1839, -0.3634,  0.0832, -0.2173,  0.4597,  0.0007,
         0.4597, -0.3301, -0.3586, -0.1264,  0.1375,  0.1942, -0.1381, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1184e+00,  8.4214e-01,  3.2088e-01, -1.5202e-01,  2.0142e-02,
        -3.6255e-01, -6.8035e-01, -8.1733e-01, -6.8035e-01,  4.2679e-02,
         6.4070e-01,  1.8439e-01, -7.2996e-02, -5.7076e-01,  5.7933e-04,
         9.6638e-02])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.5697,  0.5520,  0.5573,  0.3556,  1.4958,  1.1489,  1.3496,  1.1208,
         1.3496,  0.7891,  0.3316, -0.2317,  0.9498,  0.5877,  0.5667,  0.0966])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.3073,  0.9771,  0.7999,  0.3850,  1.5368,  1.4252,  0.9224,  1.4548,
         0.9224,  1.6262,  1.4352,  1.0410,  1.2956,  1.1097,  0.8770,  4.0637])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0172,  0.3572, -0.4210, -0.5851,  0.0187, -0.1794,  1.1379,  1.4942,
         1.1379,  0.6809,  0.2142, -0.2952,  0.6875,  0.3141, -0.4189, -0.1340])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.1506, -0.8736, -1.1309, -0.8427, -1.0044, -0.6178,  0.2662,  0.3620,
         0.2662,  0.8677,  0.8557,  1.0289,  0.8219,  0.8993, -1.1712, -1.1027])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.3665,  0.8185,  0.4443,  0.0993,  0.4026, -0.0699, -0.1969, -0.4483,
        -0.1969, -0.0514,  0.0420, -0.3486,  0.0201, -0.4206,  0.4098,  2.3108])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0434,  0.3566, -0.9842, -0.8102, -0.5794, -0.5216,  2.7561,  3.0981,
         2.7561,  0.9234,  0.3538, -0.1859,  1.3008,  0.9051, -0.9566,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0667,  0.0540, -1.1775, -0.8468, -1.0545, -0.6216,  0.2591,  0.5498,
         0.2591,  1.3667,  1.5707,  1.4429,  1.1283,  0.9737, -1.2593, -0.6414])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1676, -0.2779,  0.1439, -0.2018, -0.5011, -0.4730, -1.4638, -1.0677,
        -1.4638, -1.2383, -1.1134, -0.9937, -1.4767, -1.1655,  0.0636, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0040,  0.4764, -0.9440, -0.8167, -0.7431, -0.5777,  0.7711,  1.0417,
         0.7711,  1.6556,  1.7304,  1.4505,  1.6379,  1.6718, -1.0543,  0.9731])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1228,  0.7581,  0.8404,  0.3608,  0.8158,  0.3689, -0.1254, -0.0305,
        -0.1254,  0.7393,  0.8316,  0.9207,  0.8276,  1.0165,  0.7940,  1.4344])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.9434,  0.9463,  1.9644,  2.0512,  2.3029,  2.4364,  0.2620,  0.3840,
         0.2620,  1.0530,  1.2448,  1.2136,  1.0936,  1.0456,  1.8672,  2.5415])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.1341,  0.4956,  0.1268, -0.0149, -0.1050, -0.4144, -0.6417, -1.0366,
        -0.6417, -1.1643, -1.0742, -1.1461, -1.0906, -1.2441,  0.2785, -0.5030])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0223,  0.4078, -0.0798, -0.3428, -0.1598, -0.4333, -0.4001, -0.8134,
        -0.4001, -0.5324, -0.4150, -0.8558, -0.4413, -0.8369,  0.1246, -0.8721])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.7220, -2.3339, -1.2605, -0.8500, -1.1375, -0.6252,  0.7203,  0.9316,
         0.7203,  0.7843,  0.5015,  1.6085,  0.8919,  1.6166, -1.2533, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.3209,  0.5096, -0.9729, -0.8222, -0.7611, -0.5765,  0.9322,  1.6034,
         0.9322,  1.8700,  1.8410,  1.5730,  1.6298,  1.6442, -1.0428,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0111,  0.4977, -0.0952, -0.3689, -0.2923, -0.4221, -0.6885, -0.7358,
        -0.6885, -0.6958, -0.4384, -0.5961, -0.6215, -0.7392, -0.0126, -0.3646])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4700,  0.5918, -0.3615, -0.5142, -0.2022, -0.4236,  0.2011, -0.4198,
         0.2011, -0.4336, -0.4234, -0.7434, -0.1785, -0.6771, -0.2089,  0.2350])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.8575, -1.3199, -1.2400, -0.8494, -1.1091, -0.6241,  0.8911,  1.3891,
         0.8911,  0.8033,  0.1902,  0.3795,  0.6591,  1.1293, -1.3147, -0.9643])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5276,  0.5934,  1.5730,  1.8790,  2.5710,  3.3826,  0.9544,  1.1157,
         0.9544,  0.7453,  0.2841,  0.8932,  1.0052,  1.5914,  1.5079,  0.7886])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0799,  0.3691, -0.6001, -0.6939, -0.3681, -0.4610,  0.5508,  0.3797,
         0.5508,  0.5078,  0.3669,  0.5181,  0.9277,  1.1702, -0.6729, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5375,  0.6317,  0.4610, -0.0070,  0.3602, -0.0519, -0.2917, -0.2798,
        -0.2917,  0.4069,  0.6995,  0.6901,  0.4218,  0.3600,  0.2694, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8443, -0.3740, -1.2064, -0.8483, -1.1014, -0.6243, -0.2593, -0.2585,
        -0.2593,  0.5975,  1.0846,  0.9778,  0.3641,  0.0889, -1.2706, -0.9643])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.6268,  0.6808,  1.6405,  2.1772,  2.8999,  4.4836,  1.1914,  1.5035,
         1.1914,  0.6646,  0.0108,  0.2503,  0.6525,  0.9007,  1.7225,  0.1889])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9164, -2.1298, -1.2154, -0.8483, -1.1230, -0.6248, -0.7498, -0.6672,
        -0.7498, -0.7112, -0.7106, -0.4646, -0.7714, -0.5064, -1.2879,  0.0505])
tensor([0., 1., 0., 0., 0.])
Epoch: [0][ 50/616]	Loss 3.2500e+01 (2.8504e+01)	Acc 0.187500 (0.198261)
torch.Size([1024, 16])
tensor([-1.0020,  0.7960,  0.4101, -0.0352,  0.0050, -0.3671, -0.8185, -0.9228,
        -0.8185, -0.2866,  0.1329, -0.2750, -0.3191, -0.7110,  0.3083,  0.1428])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5473, -1.0231, -0.9754, -0.8161, -0.7651, -0.5828,  0.9248,  0.7338,
         0.9248,  0.6741,  0.4247,  0.4069,  0.9453,  0.9611, -1.0409, -0.0417])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.8019, -2.3023, -1.2536, -0.8498, -1.1546, -0.6256, -1.0384, -1.0297,
        -1.0384, -1.2034, -1.1275, -0.8884, -1.2616, -1.0473, -1.2950, -1.1950])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0871,  0.3152, -0.8910, -0.8077, -0.8057, -0.5935, -0.1484, -0.1476,
        -0.1484,  0.7966,  1.1500,  0.7882,  0.6789,  0.3434, -0.9878, -0.6875])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4579,  0.5590,  1.0587,  0.9366,  1.5914,  1.4381,  0.5771,  0.5603,
         0.5771,  0.5474,  0.1668,  0.2092,  0.6902,  0.8637,  1.5978,  0.4195])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4182,  0.6009, -0.8409, -0.7962, -0.7368, -0.5812, -0.0055, -0.0307,
        -0.0055,  0.9456,  1.1467,  0.5783,  0.7668,  0.2442, -0.9556, -0.2263])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6204,  0.7089,  0.0657, -0.2820, -0.0374, -0.2011, -0.3998, -0.1618,
        -0.3998, -0.1641, -0.0978, -0.1326, -0.1923, -0.1221,  0.0412, -0.0417])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.0178, -0.3121, -0.0679, -0.0288, -0.1120, -0.4275, -0.3113, -1.0574,
        -0.3113, -1.4925, -1.4710, -1.3065, -1.3060, -1.3348,  0.3331, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.3352,  0.2603,  0.1119, -0.1851, -0.5036, -0.5195, -1.4379, -1.2018,
        -1.4379, -1.3451, -1.1454, -1.1232, -1.5367, -1.3467,  0.0875, -0.6414])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1181,  0.4604,  0.0831, -0.1914, -0.4139, -0.5263, -1.2205, -1.2175,
        -1.2205, -1.2245, -0.9866, -1.0798, -1.3215, -1.3464,  0.0840, -1.0104])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1146,  0.4975,  1.8366,  1.9511,  1.3899,  1.0557, -0.4551, -0.4219,
        -0.4551,  0.0438,  0.3060,  0.6175, -0.2731, -0.2658,  1.8751, -0.6875])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.7525,  0.6784,  1.3452,  1.7458,  1.4480,  1.1848,  0.0504, -0.2498,
         0.0504, -0.4321, -0.5461, -0.5823, -0.3555, -0.5579,  1.2955,  0.4195])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4333,  0.4475,  1.3776,  1.9417,  2.1617,  2.7367,  0.7878,  0.6477,
         0.7878, -0.0798, -0.4895, -0.0912,  0.3520,  0.7999,  1.6035,  0.4195])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.7294, -0.2079, -1.0017, -0.8136, -0.7921, -0.5941,  0.9951,  0.0369,
         0.9951, -0.2571, -0.3867, -0.7865,  0.1267, -0.5362, -0.9750, -0.6414])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5145,  0.2751,  0.3004, -0.0216, -0.6493, -0.5335, -1.8663, -1.2877,
        -1.8663, -1.6690, -1.4454, -1.1892, -1.9853, -1.4367,  0.4317, -1.0566])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.2436, -0.5802,  0.2981,  0.0143, -0.6831, -0.5432, -1.9263, -1.3157,
        -1.9263, -1.7751, -1.6847, -1.3545, -2.1493, -1.5078,  0.3375, -1.0566])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.6784,  0.6061,  0.5629,  0.2018,  0.6126,  0.2192, -0.0380, -0.0627,
        -0.0380,  0.2162,  0.2088,  0.1415,  0.1781,  0.0460,  0.5682,  1.0192])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0843,  0.4863,  0.4689, -0.0133,  0.2892, -0.0789, -0.4195, -0.3280,
        -0.4195,  0.3291,  0.6965,  0.8740,  0.4423,  0.5863,  0.2849, -0.6414])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-2.2672,  1.0124,  1.9831,  1.8229,  2.0622,  1.8785,  0.0321,  0.1740,
         0.0321,  1.2849,  1.5504,  1.2211,  1.1347,  0.8847,  1.3408,  3.0489])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0839,  0.2018,  0.1996,  0.0013,  0.3564, -0.2005,  0.1446, -0.6006,
         0.1446, -0.4372, -0.4189, -0.8924, -0.1797, -0.7776,  0.2587, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.6501,  0.9074,  0.4332, -0.0513,  0.5300, -0.0068,  0.0334, -0.1132,
         0.0334,  0.8940,  1.2215,  0.5657,  0.7938,  0.2296,  0.1668,  1.4805])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3252,  0.6422,  0.0673, -0.2588, -0.5399, -0.5626, -1.4694, -1.2958,
        -1.4694, -1.2763, -1.0601, -1.2398, -1.4401, -1.4259,  0.2868, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.9211,  0.7136,  1.8978,  2.2622,  2.1630,  2.6831,  0.1998,  0.3977,
         0.1998,  0.4410,  0.1247,  0.4578,  0.0568,  0.2495,  1.7558,  0.3734])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1530,  0.6396, -0.9663, -0.8232, -0.8232, -0.5890,  0.3103,  0.9071,
         0.3103,  1.6030,  1.8645,  1.4945,  1.2612,  1.0409, -1.1251,  0.7424])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7348,  0.6282,  1.4954,  1.4690,  1.1323,  0.7785, -0.4319, -0.4126,
        -0.4319, -0.0888,  0.0306,  0.0630,  0.0075, -0.0147,  1.2535,  0.6963])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.2702,  0.4241,  0.2812, -0.0923, -0.3278, -0.4891, -1.2647, -1.1655,
        -1.2647, -0.9911, -0.7467, -0.9834, -1.1559, -1.2353,  0.2571, -0.1801])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0612, -0.6126, -1.1762, -0.8466, -1.0508, -0.6211,  0.3157,  0.6535,
         0.3157,  1.2044,  1.1533,  1.5140,  0.9798,  1.2790, -1.2406,  0.8347])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0918,  0.8005,  0.4289, -0.0067,  0.6086,  0.0598,  0.1723, -0.0459,
         0.1723,  0.7548,  0.8286,  0.1444,  0.7104,  0.1900,  0.2661,  0.2812])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.5528,  0.9105,  2.1347,  2.6097,  1.9291,  1.5599, -0.2066, -0.3662,
        -0.2066,  0.1906,  0.2422, -0.0325,  0.2281,  0.0150,  2.0822,  1.2037])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1026,  0.6096, -0.8324, -0.7986, -0.6767, -0.5604,  0.3178,  0.7501,
         0.3178,  1.8550,  2.1994,  2.1740,  1.5580,  1.5842, -1.0268,  0.8808])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5392,  0.5756,  0.0493, -0.2362,  0.6267,  0.4047,  1.0586,  1.4858,
         1.0586,  0.7185,  0.1798,  0.2900,  0.7283,  0.8872,  0.1433,  0.3273])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2094,  0.3308,  0.1116, -0.2640, -0.2585, -0.3715, -0.9337, -0.7170,
        -0.9337, -0.5830, -0.4734, -0.4736, -0.7135, -0.5966,  0.0359, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1549, -1.0475, -1.1653, -0.8456, -1.0968, -0.6239, -0.9697, -0.8077,
        -0.9697, -0.5001, -0.1528,  0.0329, -0.4547, -0.2828, -1.2463, -0.8721])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2125,  0.7165,  0.9371,  0.5736,  0.5144,  0.2278, -0.6330, -0.4233,
        -0.6330, -0.1501, -0.1077, -0.4200, -0.3259, -0.4948,  0.6545,  1.3882])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.2091, -0.0220, -1.1719, -0.8462, -1.0406, -0.6205,  0.4444,  0.7472,
         0.4444,  1.2776,  1.1683,  1.2001,  1.1335,  1.2972, -1.2519,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5834, -0.4345, -1.1915, -0.8474, -1.0722, -0.6226,  0.1818,  0.3946,
         0.1818,  0.9369,  1.0476,  1.0519,  0.7601,  0.6437, -1.2580, -1.0104])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.1719,  0.9967,  2.5600,  3.1608,  1.9661,  1.4078, -0.4683, -0.5870,
        -0.4683,  0.2564,  0.8626,  0.3793,  0.1124, -0.3911,  2.2456,  3.0489])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1086,  0.2537, -0.5942, -0.6627, -0.2701, -0.3789,  0.9267,  0.8443,
         0.9267,  0.1063, -0.1924, -0.2141,  0.4031,  0.4614, -0.6668, -0.1340])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4925, -0.5512, -0.1273, -0.2446,  0.4692,  0.1033,  1.2561,  0.6464,
         1.2561, -0.2436, -0.5537, -0.4683,  0.2981,  0.2078,  0.2500,  0.4195])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.1827,  0.3077, -0.1466, -0.1849,  0.1469, -0.0059,  0.5134,  0.1645,
         0.5134, -0.9837, -1.1825, -1.0813, -0.7732, -0.8159,  0.0508, -0.1801])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.0888,  0.4379,  0.0436, -0.2162,  0.0260, -0.3089, -0.2227, -0.6000,
        -0.2227, -0.4787, -0.2983, -0.2129, -0.2319, -0.4083,  0.0722, -0.4569])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0185,  0.0530, -0.9805, -0.8173, -0.7208, -0.5649,  1.3924,  1.7657,
         1.3924,  1.0893,  0.6078,  0.5377,  1.1129,  1.1259, -1.0388,  0.0044])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0942,  0.0198, -0.5861, -0.5778, -0.1800, -0.4176,  1.2508, -0.1322,
         1.2508, -0.8351, -0.9738, -1.0406, -0.3045, -0.7654, -0.2623,  0.4195])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3924,  0.6175, -0.0797, -0.0264,  0.5527, -0.0738,  1.2950, -0.2986,
         1.2950, -0.8891, -1.0504, -1.0307, -0.2742, -0.7634,  0.2757, -0.1801])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-2.2353,  1.0064,  2.4160,  2.5473,  2.3513,  2.0519, -0.0764, -0.0892,
        -0.0764,  1.1863,  1.6074,  1.2415,  0.9983,  0.5857,  1.7934,  2.7721])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.1087,  0.3506, -0.3098, -0.5812, -0.2660, -0.3883, -0.1453,  0.0772,
        -0.1453,  0.5147,  0.5807,  0.4131,  0.4003,  0.2712, -0.4404,  0.0044])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7220, -0.0094,  0.2950, -0.0126, -0.6823, -0.5755, -1.9230, -1.3784,
        -1.9230, -1.7404, -1.5574, -1.3658, -2.0871, -1.5844,  0.2947, -1.2411])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2551,  0.5084,  0.2272, -0.0025, -0.2863, -0.4566, -1.1303, -1.1314,
        -1.1303, -1.2568, -1.1048, -1.0820, -1.2856, -1.2247,  0.2964, -0.0879])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.3694,  0.5136,  2.0547,  2.2658,  1.6164,  1.5169, -0.4141, -0.2672,
        -0.4141,  0.2010,  0.2428,  0.6147,  0.4141,  0.8657,  1.6466,  0.2812])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.2683, -0.1820, -1.1011, -0.8396, -0.9176, -0.6047,  1.0819,  1.9581,
         1.0819,  1.6960,  1.3305,  1.2490,  1.3916,  1.4296, -1.1712, -0.2724])
tensor([1., 0., 0., 0., 0.])
Epoch: [0][100/616]	Loss 3.1875e+01 (3.0199e+01)	Acc 0.203125 (0.200002)
torch.Size([1024, 16])
tensor([-0.7831,  0.6089,  0.9096,  0.9738,  2.3959,  3.6146,  1.8629,  2.6312,
         1.8629,  0.8469,  0.1137,  0.6365,  1.1613,  1.8464,  0.9781,  1.0653])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.7513,  0.9198,  2.0745,  2.1778,  2.1549,  2.7051,  0.0341,  0.4630,
         0.0341,  0.9090,  0.8176,  1.2292,  0.9550,  1.6643,  1.8197,  1.9879])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9302, -1.4652, -1.1983, -0.8476, -1.0694, -0.6225,  0.4784,  0.5306,
         0.4784,  0.7889,  0.6224,  0.9249,  0.7194,  0.8000, -1.2677, -0.8259])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.7080, -1.8186, -0.0866, -0.1577, -0.0719, -0.3491, -0.1761, -0.7776,
        -0.1761, -1.1830, -1.2527, -1.1452, -0.9142, -0.9352,  0.1192, -1.1950])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3567,  0.1767, -1.0797, -0.8335, -0.8071, -0.5857,  2.1769,  2.7102,
         2.1769,  1.2561,  0.6786,  0.1932,  1.4631,  1.3394, -1.1323,  0.3734])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1693,  0.6636,  1.4052,  1.6365,  1.7511,  1.8797,  0.3111,  0.2992,
         0.3111,  0.0795, -0.0586,  0.0796,  0.3203,  0.4389,  1.2785,  1.5266])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 3.3165, -4.5007, -1.2532, -0.8492, -1.1698, -0.6257, -2.0946, -1.4380,
        -2.0946, -2.2996, -2.3009, -1.5868, -2.8038, -1.7355, -1.2836, -1.5179])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.0639,  0.9849,  1.1669,  0.6794,  1.5974,  1.5505,  0.4344,  1.0343,
         0.4344,  1.7285,  1.8823,  1.7463,  1.3835,  1.3818,  1.3654,  2.3569])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5056,  0.2843, -1.2069, -0.8485, -1.0875, -0.6236,  0.2083,  0.5654,
         0.2083,  1.7890,  2.1725,  2.4197,  1.5467,  1.6740, -1.2408,  0.9270])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6464, -0.1749, -1.2241, -0.8492, -1.1006, -0.6240,  0.4102,  1.0695,
         0.4102,  1.8672,  2.1241,  2.6898,  1.6001,  2.0895, -1.2942, -0.9182])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.7483,  0.9400,  0.7371,  0.5150,  0.8107,  0.3788,  0.0047, -0.1820,
         0.0047, -0.0619,  0.0324, -0.3135,  0.0735, -0.2823,  0.4622,  1.4805])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.3412,  0.2532,  1.9510,  2.2885,  2.1138,  2.2935,  0.1063,  0.1620,
         0.1063,  0.4576,  0.3449,  0.6300,  0.0815,  0.0550,  1.7339,  1.1115])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0411,  0.4222, -0.1320, -0.4222, -0.0466, -0.1540, -0.0099,  0.4659,
        -0.0099,  0.0920, -0.2303, -0.1872, -0.1852, -0.0636,  0.0058, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.9086, -0.0240,  0.2376, -0.1104, -0.5603, -0.5564, -1.6590, -1.3188,
        -1.6590, -1.4315, -1.2963, -1.3267, -1.6825, -1.4750,  0.2908, -1.4256])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.1412,  0.0889, -1.1250, -0.8429, -0.9669, -0.6127,  0.7940,  1.5999,
         0.7940,  2.0639,  2.0688,  2.1510,  1.7527,  2.0013, -1.2090, -0.4569])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6728, -0.0051,  0.3074, -0.0050, -0.5128, -0.4543, -1.6242, -1.1255,
        -1.6242, -1.4712, -1.2270, -0.9309, -1.7214, -1.2089,  0.4337, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2378,  0.0292, -1.0224, -0.8263, -0.7839, -0.5834,  1.3713,  1.6306,
         1.3713,  1.2541,  0.7283,  0.7881,  1.3968,  1.5579, -0.9793, -0.5953])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8018,  0.6905,  1.7630,  1.6793,  1.4531,  1.5397, -0.3382,  0.0310,
        -0.3382,  0.4000,  0.5464,  1.4785,  0.6440,  1.6066,  1.8431,  0.6041])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9350,  0.5096,  2.0910,  2.4094,  2.9036,  4.3214,  0.6597,  1.2025,
         0.6597,  1.2771,  0.8724,  1.2445,  1.1276,  1.7674,  1.7697,  1.3421])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.8926,  0.7910,  0.3338, -0.0695,  0.2051, -0.2307, -0.3690, -0.5889,
        -0.3690,  0.0216,  0.0117, -0.4663, -0.0973, -0.5541,  0.2997,  0.0044])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.3318, -0.0792, -0.9041, -0.8023, -0.6833, -0.5608,  0.8457,  0.9062,
         0.8457,  0.9258,  0.7053,  0.5227,  0.9512,  0.7520, -0.9912,  1.0192])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.2648,  0.2720,  0.0605, -0.1985,  0.0184, -0.2324, -0.2714, -0.4162,
        -0.2714, -0.5244, -0.5790, -0.5156, -0.3442, -0.3297,  0.1078, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0928, -0.0398,  1.8069,  2.6050,  0.0623, -0.0770, -1.6704, -1.2035,
        -1.6704, -1.6360, -1.5269, -1.2067, -1.8991, -1.3261,  2.0265,  0.1889])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4674,  0.6012, -0.4862, -0.5977, -0.0796, -0.2121,  1.1063,  1.4135,
         1.1063,  0.1863,  0.0459, -0.3697,  0.4031,  0.0323, -0.1261,  0.3273])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.2141,  0.7070,  0.7010,  0.7218,  1.2680,  0.5218,  0.7187, -0.1923,
         0.7187, -0.1599, -0.1747, -0.7223,  0.2610, -0.3757,  0.9629,  1.4344])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6442, -1.2541, -0.3671, -0.2866,  0.3728, -0.1333,  2.0108,  0.0618,
         2.0108, -1.0145, -1.3232, -1.1783, -0.3050, -0.7872,  0.1040, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1745, -0.8132,  0.8369,  1.4140,  1.5386,  1.8276,  0.8597,  0.4338,
         0.8597, -0.7918, -1.1650, -0.8688, -0.5594, -0.4554,  1.4763, -0.1801])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.4053,  0.8315, -0.3523, -0.6010, -0.4341, -0.5130, -0.5398, -0.6841,
        -0.5398,  0.0218,  0.2504, -0.2701, -0.1145, -0.5611, -0.0933,  0.7424])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8771,  0.7414,  1.6441,  2.2675,  0.9499,  0.3814, -0.7326, -0.9127,
        -0.7326, -0.9280, -0.7919, -0.8413, -0.8391, -0.9400,  1.7731,  0.6963])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.2611,  0.1792,  0.7127,  0.4276,  0.8805,  0.5440,  0.1398,  0.1360,
         0.1398,  0.2236,  0.2180,  0.7263,  0.5936,  0.9754,  0.8510,  0.9731])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.0512, -0.1175, -1.1425, -0.8446, -1.0122, -0.6182,  0.3536,  0.8309,
         0.3536,  1.7510,  2.0279,  2.4125,  1.4679,  1.5625, -1.2220,  0.0966])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6029, -1.3413, -1.2438, -0.8496, -1.1347, -0.6252, -0.2638, -0.2411,
        -0.2638,  0.1081,  0.2232,  0.4204, -0.2966, -0.2625, -1.3090,  0.3273])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0830,  0.7745, -0.0329, -0.3525,  0.1915, -0.2072,  0.3144,  0.0041,
         0.3144,  0.4494,  0.5227,  0.0408,  0.6146,  0.0827, -0.1088,  1.0192])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 2.0983, -4.1422, -1.2682, -0.8501, -1.1679, -0.6257, -1.4869, -1.1611,
        -1.4869, -1.8353, -1.8516, -1.2880, -2.1491, -1.3896, -1.3127, -1.1027])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5671,  0.4832, -0.8051, -0.7862, -0.7136, -0.5796, -0.0751, -0.2128,
        -0.0751,  0.7699,  1.0845,  0.7517,  0.7404,  0.3558, -0.9603,  0.4195])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2948,  0.3618,  1.9301,  2.2542,  0.7043,  0.1698, -1.1389, -1.0310,
        -1.1389, -0.8128, -0.5827, -0.6865, -0.8405, -0.8588,  1.5223,  0.1428])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.2355, -2.1834, -1.1512, -0.8431, -1.0412, -0.6192, -0.0357,  0.1129,
        -0.0357, -0.2870, -0.4376, -0.1874, -0.4339, -0.2971, -1.2434, -0.6875])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7897, -0.1992,  0.1396, -0.0846, -0.3100, -0.2732, -1.0745, -0.6696,
        -1.0745, -1.2476, -1.3352, -1.0483, -1.4881, -1.0764,  0.1932, -0.9182])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1868,  0.3724,  0.2019, -0.1784, -0.4248, -0.4945, -1.3692, -1.1388,
        -1.3692, -1.0558, -0.7703, -0.8346, -1.1896, -1.1096,  0.0927, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3301,  0.2777,  0.2095,  0.0026, -0.4408, -0.5172, -1.4075, -1.2593,
        -1.4075, -1.5095, -1.3175, -1.2465, -1.6534, -1.4223,  0.2739, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8500, -0.0787, -0.0070, -0.2550, -0.3479, -0.4925, -0.9598, -1.0883,
        -0.9598, -1.0877, -0.8850, -0.9432, -1.0623, -1.1449,  0.1002, -0.8259])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9037,  0.6241, -0.5369, -0.6685, -0.4164, -0.5082,  0.0845, -0.3401,
         0.0845,  0.1839,  0.3129, -0.3163,  0.2894, -0.3266, -0.5491,  1.2960])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1844e-01,  1.8359e-03, -1.1904e+00, -8.4763e-01, -1.0676e+00,
        -6.2233e-01,  2.7990e-01,  7.0558e-01,  2.7990e-01,  1.5416e+00,
         1.7476e+00,  1.9596e+00,  1.4164e+00,  1.7593e+00, -1.2503e+00,
        -5.0303e-01])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1546,  0.8540,  0.6148,  0.4325,  0.2621, -0.2072, -0.6445, -0.9070,
        -0.6445, -0.7946, -0.6860, -0.9340, -0.6988, -0.9154,  0.5885,  0.4657])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.1221,  0.2794, -0.7802, -0.7781, -0.7287, -0.5816, -0.2925, -0.4042,
        -0.2925,  0.4231,  0.4717,  0.0335,  0.2856, -0.1520, -0.8048,  0.0044])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4581,  0.3433,  0.3575, -0.0526,  0.5033,  0.2516,  0.1177,  0.4625,
         0.1177,  0.5594,  0.4403,  0.7655,  0.6035,  0.9850,  0.2863,  0.5118])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.6975, -0.1543,  0.0155, -0.0389, -0.2697, -0.4361, -0.8193, -1.0708,
        -0.8193, -1.5024, -1.5202, -1.3119, -1.4642, -1.2983,  0.2813, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0888,  0.3895,  0.3199, -0.0995,  0.5619,  0.2074,  0.2912,  0.4800,
         0.2912,  0.8135,  0.6627,  0.8361,  0.5112,  0.4968,  0.2031,  0.0505])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8122, -0.2472, -1.1361, -0.8436, -0.9948, -0.6158,  0.5412,  1.1075,
         0.5412,  1.4943,  1.4127,  1.7142,  1.2189,  1.5992, -1.2036, -0.6414])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5169,  0.4805,  0.1718, -0.0247,  0.1251, -0.2902, -0.2550, -0.7652,
        -0.2550, -0.7355, -0.6562, -0.7483, -0.4936, -0.7829,  0.2883,  0.4657])
tensor([0., 0., 0., 1., 0.])
Epoch: [0][150/616]	Loss 3.2070e+01 (3.0788e+01)	Acc 0.198242 (0.200195)
torch.Size([1024, 16])
tensor([ 0.0654,  0.1588, -0.9864, -0.8248, -0.8893, -0.6060, -0.1038, -0.1154,
        -0.1038,  0.7177,  1.0543,  0.7317,  0.5767,  0.2267, -1.1091, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2051,  0.5760, -0.8150, -0.7771, -0.5737, -0.5426,  0.8245,  0.5254,
         0.8245,  0.8488,  0.8401,  0.2115,  1.0420,  0.5758, -0.9376, -0.8721])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2759,  0.2429, -0.8807, -0.8015, -0.7154, -0.5758,  0.4147,  0.3235,
         0.4147,  1.0115,  1.1594,  0.7637,  0.9724,  0.5471, -0.9587, -0.8259])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8035,  0.6649,  0.3324, -0.0584, -0.0815, -0.1738, -0.8762, -0.4744,
        -0.8762, -0.5511, -0.5416, -0.6554, -0.7697, -0.7009,  0.2248,  0.6502])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0415,  0.2505, -0.0181, -0.2363, -0.3938, -0.4443, -1.0475, -0.9616,
        -1.0475, -1.2510, -1.1964, -1.1551, -1.3285, -1.1807,  0.0370, -0.3185])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4431, -0.2780,  0.2287, -0.0134, -0.0750, -0.4107, -0.7309, -1.0298,
        -0.7309, -0.9232, -0.8764, -1.0781, -0.9214, -1.1512,  0.2668, -0.4569])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0670,  0.3350,  0.3531,  0.3447,  1.6000,  1.9450,  2.0500,  2.3240,
         2.0500,  0.2383, -0.5289, -0.1803,  0.5670,  0.8629,  0.4592,  0.9270])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.6576,  0.7205,  2.1873,  2.3617,  2.2641,  2.7470,  0.0320,  0.3746,
         0.0320,  0.9423,  0.8743,  1.2352,  0.8774,  1.3405,  1.7756,  0.1889])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.6743,  0.5596,  0.5338, -0.0138,  0.4229,  0.0553, -0.2936, -0.0431,
        -0.2936,  0.8250,  1.2242,  1.7782,  0.9043,  1.3419,  0.2632,  0.7886])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7156,  0.7689,  0.3224, -0.0181, -0.5537, -0.5286, -1.7085, -1.2779,
        -1.7085, -1.4934, -1.2478, -1.2029, -1.7654, -1.4366,  0.2917, -0.3185])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5119, -0.5410, -0.0351, -0.1109,  0.8847,  0.2542,  1.9110,  0.6224,
         1.9110, -0.0605, -0.5290, -0.7793,  0.3928, -0.2560,  0.2465, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.3856, -1.2613, -1.1877, -0.8455, -1.0192, -0.6189,  1.4989,  0.9847,
         1.4989,  0.0843, -0.4343, -0.4614,  0.4845,  0.1992, -1.2181, -0.5030])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2091,  0.8902,  2.2601,  2.3580,  1.9944,  2.1875, -0.2461,  0.0679,
        -0.2461,  0.8117,  1.1123,  1.7700,  0.9386,  1.5332,  1.7611,  0.4657])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1031,  0.7951,  1.8368,  1.9034,  1.5969,  1.3642, -0.2641, -0.2051,
        -0.2641,  0.3237,  0.4776,  0.7419,  0.3561,  0.4943,  1.2912,  1.4805])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.2594, -0.0410,  0.1802, -0.2156,  0.1013, -0.2156, -0.3165, -0.3404,
        -0.3165,  0.1119,  0.5352,  0.6622,  0.0776, -0.0588,  0.0972, -0.1801])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.2627,  0.5735,  0.2201, -0.0642, -0.4441, -0.4519, -1.4236, -1.0932,
        -1.4236, -1.3662, -1.2164, -1.0058, -1.5520, -1.1805,  0.2754, -0.1340])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 2.2315, -2.2315, -0.2836, -0.0156, -0.0787, -0.2049,  0.3207, -0.5921,
         0.3207, -1.8190, -1.9678, -1.4388, -1.7242, -1.3513,  0.5180, -0.9182])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0866,  0.5480,  0.0337, -0.1857, -0.2476, -0.4641, -0.7988, -1.0541,
        -0.7988, -1.0724, -0.9204, -1.1130, -1.0471, -1.2497,  0.1870, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.3856e-01, -1.4689e-01, -9.9855e-01, -8.1809e-01, -6.9018e-01,
        -5.5132e-01,  1.9475e+00,  2.5947e+00,  1.9475e+00,  1.0324e+00,
         4.6056e-01,  1.9094e-03,  1.1470e+00,  9.4395e-01, -1.0086e+00,
         6.5018e-01])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5511,  0.1517,  0.3397, -0.0229, -0.3773, -0.4783, -1.4083, -1.1690,
        -1.4083, -1.1624, -1.0499, -1.1035, -1.3962, -1.2660,  0.3251, -1.0104])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.1793,  0.4938, -0.2179, -0.4412, -0.1824, -0.2372, -0.1497,  0.1967,
        -0.1497, -0.4094, -0.6425, -0.4421, -0.4969, -0.1277, -0.2492, -0.0417])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4512,  0.2896,  0.1270, -0.2147, -0.4971, -0.4915, -1.4395, -1.1106,
        -1.4395, -1.2222, -1.0718, -0.9786, -1.4232, -1.1336,  0.0792, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.2126, -2.6340, -0.1508, -0.1304,  0.4436,  0.1512,  1.2753,  0.4260,
         1.2753, -0.8613, -1.2015, -0.7100, -0.3048, -0.1150,  0.1029, -0.8259])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6276,  0.6788,  0.0823, -0.0674,  1.2003,  0.9162,  2.1699,  2.0022,
         2.1699,  0.5913,  0.0200, -0.5364,  0.8602,  0.3568,  0.1916,  0.2812])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5005,  0.5313,  0.5727,  0.3419, -0.1688, -0.3751, -1.2627, -1.1124,
        -1.2627, -1.2298, -1.0731, -1.1782, -1.3686, -1.2706,  0.5605, -0.1340])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.2697,  0.4377,  0.4088,  0.0052,  0.1461, -0.1777, -0.5775, -0.5573,
        -0.5775, -0.1991,  0.0413,  0.0047, -0.1101, -0.1198,  0.3125,  0.1889])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.1038, -1.1606, -1.2208, -0.8487, -1.0815, -0.6231,  1.0045,  1.3382,
         1.0045,  1.3433,  0.9356,  1.4580,  1.3430,  1.8178, -1.2929,  0.6502])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.9164,  0.9437,  2.7255,  3.6463,  2.2907,  2.0350, -0.3318, -0.4369,
        -0.3318,  0.2866,  0.6418,  0.3342,  0.0571, -0.3202,  2.4201,  2.0340])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.3696, -0.4776, -0.2082, -0.1924, -0.5838, -0.5608, -1.2417, -1.3098,
        -1.2417, -1.8943, -1.8692, -1.4931, -2.0498, -1.6037,  0.1392, -1.3795])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3345,  0.2891,  0.1311, -0.2194, -0.4926, -0.5338, -1.4342, -1.2266,
        -1.4342, -1.1909, -0.9561, -1.0794, -1.3464, -1.2791,  0.0751, -0.8721])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9973,  0.6072,  0.1597, -0.2538,  0.3464,  0.0023,  0.2062,  0.3792,
         0.2062,  0.8270,  0.7978,  0.6911,  0.8605,  0.7970, -0.0341,  1.3882])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.6211,  0.7198,  0.2264, -0.2102, -0.1608, -0.4196, -0.8909, -0.9146,
        -0.8909, -0.3228,  0.1884, -0.1228, -0.3996, -0.7014,  0.0823, -0.4108])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3977, -0.0612,  1.6211,  2.1269,  2.4069,  3.4073,  0.7291,  0.9139,
         0.7291,  0.3128, -0.2867,  0.3478,  0.0538,  0.4572,  1.7382, -0.0879])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.9618, -1.3322, -0.1813, -0.2672, -0.4286, -0.4969, -0.8769, -1.0935,
        -0.8769, -1.5243, -1.4467, -1.1045, -1.5082, -1.2739,  0.0857, -1.7024])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4673, -0.9751, -1.2077, -0.8481, -1.0804, -0.6226,  0.4680,  0.8935,
         0.4680,  0.7566,  0.6249,  0.6722,  0.4677,  0.4343, -1.2652, -0.8259])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6541, -0.8209, -0.8224, -0.7453, -0.7154, -0.5814,  0.0147, -0.7377,
         0.0147, -1.0658, -1.2071, -1.2385, -0.8537, -1.0769, -0.8619, -1.1950])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0610,  0.3797,  0.2684, -0.0982, -0.2826, -0.3979, -1.1682, -0.9484,
        -1.1682, -0.9171, -0.7408, -0.7472, -1.1180, -0.9949,  0.1982, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.6513, -1.0156,  1.2914,  1.3557,  0.4067,  0.8598, -1.0543, -0.2924,
        -1.0543, -0.9769, -1.0581, -0.2134, -1.0816,  0.0815,  1.4195, -0.8259])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5417,  0.6921,  0.3624, -0.0205, -0.2100, -0.4120, -1.1358, -1.0285,
        -1.1358, -0.8395, -0.6994, -0.9207, -0.9674, -1.0318,  0.2678, -0.2724])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0311,  0.2159,  0.3206, -0.0168, -0.1130, -0.4311, -0.9184, -1.0712,
        -0.9184, -0.7754, -0.4506, -0.7384, -0.7861, -1.0613,  0.2630, -0.5492])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-2.0257,  0.8425,  0.3196, -0.0990,  0.8953,  0.5501,  0.8890,  1.2863,
         0.8890,  1.4469,  1.2325,  1.1805,  1.4264,  1.5784,  0.1670,  2.9105])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2383,  0.6811, -0.0874, -0.4019,  0.0105, -0.3419,  0.0228, -0.3640,
         0.0228,  0.2398,  0.5117, -0.0818,  0.3386, -0.3189, -0.2206,  1.4805])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.8659,  0.7452, -0.9309, -0.8184, -0.8006, -0.5909,  0.1854,  0.4419,
         0.1854,  1.6906,  2.1048,  1.8365,  1.3926,  1.1635, -1.0630,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6735, -0.4362, -1.2127, -0.8486, -1.0976, -0.6241,  0.0708,  0.2251,
         0.0708,  1.1440,  1.3813,  1.6095,  1.0783,  1.1354, -1.2876, -0.8721])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.9643, -0.0618,  0.1616, -0.1517, -0.6710, -0.5469, -1.8177, -1.2849,
        -1.8177, -1.6407, -1.4769, -1.2234, -1.9654, -1.4278,  0.3501, -1.0104])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2375, -1.4708, -1.2001, -0.8469, -1.0331, -0.6201,  1.6391,  1.3548,
         1.6391,  0.5426,  0.0410,  0.0979,  0.8956,  0.8149, -1.1898,  0.6963])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2079,  0.0814, -0.6555, -0.6581, -0.0979, -0.3084,  2.0646,  1.4375,
         2.0646, -0.0134, -0.2910, -0.5594,  0.6196,  0.2343, -0.5609,  0.0044])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0258,  0.4794,  0.3842,  0.0233, -0.4188, -0.4965, -1.5174, -1.2228,
        -1.5174, -1.2683, -1.0045, -1.0562, -1.4560, -1.3087,  0.3092, -0.6414])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.1025,  0.3600,  0.9310,  0.6346,  0.3621,  0.1740, -0.8250, -0.5311,
        -0.8250, -0.5065, -0.5345, -0.5462, -0.7494, -0.6169,  0.7233,  0.5118])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4723,  0.4307,  2.0061,  2.1179,  1.7703,  1.4526, -0.2437, -0.2449,
        -0.2437,  0.4798,  0.5935,  0.6540,  0.3668,  0.2970,  1.7821,  0.7424])
tensor([0., 0., 0., 0., 1.])
Epoch: [0][200/616]	Loss 3.1836e+01 (3.1088e+01)	Acc 0.204102 (0.200186)
torch.Size([1024, 16])
tensor([-1.6211,  0.9094,  1.2355,  1.1286,  0.5062,  0.2153, -0.9013, -0.7322,
        -0.9013, -0.6712, -0.5337, -0.4913, -0.6822, -0.4972,  1.3138,  1.5266])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.3799,  0.6557,  0.3790, -0.0332, -0.0774, -0.3738, -0.9234, -0.9387,
        -0.9234, -0.5252, -0.3071, -0.6447, -0.6884, -0.9165,  0.2810, -0.5953])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.4161,  0.6281,  0.1394, -0.0014,  0.1919, -0.3096, -0.0623, -0.8252,
        -0.0623, -0.7998, -0.7102, -0.9050, -0.5590, -0.9902,  0.2971, -0.5030])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 2.2184, -1.9616, -1.2347, -0.8491, -1.1030, -0.6238,  0.8593,  1.0639,
         0.8593,  0.2702, -0.3840, -0.1990,  0.4338,  1.0119, -1.2894, -1.7946])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7215, -0.0397,  0.1092, -0.1691, -0.3487, -0.4901, -1.1162, -1.1322,
        -1.1162, -1.1311, -0.8962, -0.9689, -1.1776, -1.2040,  0.1836, -1.1950])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4265, -0.9739, -1.1797, -0.8460, -1.0534, -0.6225,  0.3458, -0.1648,
         0.3458,  0.2549, -0.1337, -0.3612,  0.3835,  0.0288, -1.2285, -1.3333])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1035,  0.4303,  0.1932, -0.0353,  0.4731,  0.1945,  0.3842,  0.2972,
         0.3842, -0.1462, -0.4134, -0.1344,  0.1548,  0.3756,  0.2493, -0.0417])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-2.0981,  0.8832,  2.3580,  2.5685,  2.5445,  2.4617,  0.1203,  0.1143,
         0.1203,  1.2327,  1.4767,  1.0903,  1.1086,  0.7502,  1.8842,  3.1411])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.6633, -3.4241, -1.2305, -0.8487, -1.1072, -0.6240,  0.4311,  0.3870,
         0.4311, -0.4221, -0.7585,  0.0286,  0.0159,  0.8584, -1.2919, -0.5953])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8511,  0.6123,  2.5123,  3.0807,  2.5790,  3.1489,  0.0270,  0.2155,
         0.0270,  0.8162,  0.9159,  1.0262,  0.5564,  0.6069,  2.2475,  0.7886])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.6207, -1.5740, -1.2457, -0.8497, -1.1342, -0.6251, -0.1390,  0.1026,
        -0.1390,  0.3032,  0.3052,  1.3164,  0.5203,  1.3537, -1.3087, -0.8721])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5269, -0.3590, -0.0760, -0.2228,  0.3393,  0.0347,  0.7761,  0.3786,
         0.7761, -0.3535, -0.5451, -0.5067, -0.0879, -0.2468,  0.2737, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0623,  0.3655, -0.3691, -0.6001, -0.5531, -0.5095, -0.8699, -0.6622,
        -0.8699, -0.4709, -0.1722, -0.4385, -0.6729, -0.8075, -0.5049, -0.5953])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7532,  0.0830, -1.0732, -0.8376, -0.9837, -0.6169, -0.2680, -0.2586,
        -0.2680,  0.7024,  1.1065,  0.9141,  0.6076,  0.4041, -1.1474, -1.1488])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4023, -0.0412,  0.1302, -0.2058, -0.3578, -0.4881, -1.1598, -1.1065,
        -1.1598, -0.9815, -0.7566, -0.9285, -1.0751, -1.1481,  0.1040, -0.5953])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0188,  0.0286, -1.1347, -0.8440, -1.0064, -0.6180,  0.3032,  0.6340,
         0.3032,  1.6283,  1.8825,  1.9596,  1.3661,  1.3423, -1.2733, -0.3646])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4092, -0.1303, -1.0863, -0.8363, -0.9175, -0.6092,  0.8083,  0.6064,
         0.8083,  0.7710,  0.7023,  0.3108,  0.8758,  0.5119, -1.1643, -0.0879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0439,  0.2329, -0.5816, -0.5874, -0.3202, -0.5107,  0.6569, -0.7097,
         0.6569, -0.9721, -1.0205, -1.1945, -0.5422, -1.0684, -0.2973,  0.4657])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6232, -0.0870,  0.0026, -0.0136, -0.0949, -0.3999, -0.4098, -1.0067,
        -0.4098, -1.3839, -1.4065, -1.2829, -1.2230, -1.2682,  0.2870, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2753,  0.5646, -0.1820, -0.2513,  0.2016, -0.3716,  0.7617, -0.7334,
         0.7617, -0.7596, -0.6422, -1.1451, -0.2636, -1.0392,  0.0929, -0.2263])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6858,  0.1309,  0.3417,  0.0085, -0.4190, -0.5210, -1.4836, -1.2687,
        -1.4836, -1.3003, -1.1315, -1.1936, -1.4727, -1.3715,  0.2964, -1.1488])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2219,  0.2919,  0.2558, -0.0666,  0.3746,  0.0904,  0.0709,  0.1332,
         0.0709,  0.0514, -0.1106, -0.0443,  0.0909,  0.1115,  0.2758,  0.7886])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.3327, -1.6166, -1.0504, -0.8223, -0.7736, -0.5862,  1.9722,  1.0128,
         1.9722, -0.0399, -0.5136, -0.4087,  0.6617,  0.4915, -1.0579, -1.1027])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0989,  0.3028,  0.0188, -0.2644, -0.5869, -0.5683, -1.5225, -1.3111,
        -1.5225, -1.4334, -1.3006, -1.3463, -1.6267, -1.4885,  0.0648, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6805, -1.5073, -1.2365, -0.8494, -1.1129, -0.6245,  0.4863,  0.6557,
         0.4863,  0.7787,  0.5002,  0.9550,  0.7569,  1.0755, -1.3076, -0.8721])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.6718,  0.8064,  2.0645,  2.2175,  2.9431,  4.2161,  0.7212,  1.3099,
         0.7212,  1.6141,  1.4515,  1.3560,  1.3022,  1.2658,  1.8027,  2.4953])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9668, -0.5759, -1.2143, -0.8486, -1.0908, -0.6238,  0.3670,  0.4703,
         0.3670,  1.1708,  1.2646,  1.2957,  0.9722,  0.7986, -1.2856, -1.4717])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2238,  0.7051,  0.8651,  0.6383,  1.5337,  1.0485,  0.8050,  0.5067,
         0.8050,  0.8078,  0.8427,  0.1570,  0.8910,  0.2760,  0.0592,  1.1115])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.0403, -0.9337, -1.1752, -0.8465, -1.0546, -0.6216,  0.1976,  0.4439,
         0.1976,  1.0887,  1.1736,  1.7955,  1.0987,  1.5022, -1.2248, -0.9182])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1851,  0.0588, -0.1865, -0.4831, -0.4838, -0.5267, -1.0117, -1.0070,
        -1.0117, -0.6857, -0.4426, -0.6587, -0.6918, -0.8427, -0.2903, -0.2724])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.0965,  0.9575,  1.8965,  1.8729,  2.6757,  4.0140,  0.6657,  1.5321,
         0.6657,  1.6519,  1.5082,  1.4667,  1.3230,  1.6162,  1.8937,  2.6337])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1727, -0.1707,  0.0741, -0.2557, -0.6302, -0.5621, -1.6668, -1.2950,
        -1.6668, -1.4502, -1.3154, -1.2831, -1.7603, -1.4758,  0.1409, -1.3795])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.8534,  0.9671,  1.0761,  1.2823,  1.8177,  0.8726,  0.8281, -0.2407,
         0.8281,  0.0614,  0.1021, -0.7223,  0.4333, -0.4924,  1.7007,  1.9879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7814,  0.6404,  1.4132,  1.3629,  1.3659,  0.7883, -0.1096, -0.3534,
        -0.1096,  0.1856,  0.3522,  0.1220,  0.1649, -0.1706,  1.4541,  0.9731])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.6259,  0.6753, -0.7019, -0.7659, -0.5250, -0.5166,  0.3652,  0.8021,
         0.3652,  1.9687,  2.3004,  2.2933,  1.7198,  1.8567, -0.8606,  2.0802])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2439,  0.7507,  1.8515,  1.8448,  2.0731,  2.0355,  0.1617,  0.2637,
         0.1617,  0.9540,  0.8123,  0.7207,  0.8357,  0.8606,  1.8341,  1.5266])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9728,  0.6344,  0.8618,  1.1858,  1.4308,  0.8267,  0.6726, -0.2216,
         0.6726, -0.5272, -0.7308, -0.7751, -0.0514, -0.3394,  1.3684,  0.9731])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1186,  0.2510,  1.8630,  2.1448,  1.5152,  1.2853, -0.3602, -0.3549,
        -0.3602, -0.0468,  0.1353,  0.4970, -0.3539, -0.3050,  1.3857,  0.6963])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1680,  0.7910,  1.9073,  1.8376,  1.9876,  2.2514,  0.0324,  0.4106,
         0.0324,  0.9979,  1.1517,  1.8708,  1.0897,  1.6187,  1.6953,  0.9270])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.5713,  0.6120, -0.4126, -0.6293, -0.4431, -0.5052, -0.4129, -0.5192,
        -0.4129,  0.1160,  0.4811,  0.1402,  0.1139, -0.2902, -0.5445, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8861, -0.8520, -0.5647, -0.6579, -0.5106, -0.5160, -0.1772, -0.4751,
        -0.1772, -0.5019, -0.4907, -0.4218, -0.2480, -0.3497, -0.6466, -0.3185])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 9.9707e-01,  2.9276e-04, -1.1167e+00, -8.4217e-01, -9.9188e-01,
        -6.1680e-01,  2.2315e-01,  4.4471e-01,  2.2315e-01,  1.3336e+00,
         1.6066e+00,  1.4921e+00,  1.1481e+00,  9.6021e-01, -1.1825e+00,
        -1.1027e+00])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0041,  0.3805,  0.4149, -0.0147,  0.3162,  0.1006, -0.2977,  0.0543,
        -0.2977,  0.2130,  0.1071,  0.2202, -0.0425,  0.0969,  0.2970, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.6874,  0.7301,  0.3650, -0.0430, -0.2626, -0.5056, -1.2301, -1.2211,
        -1.2301, -0.8588, -0.5519, -1.0141, -0.9605, -1.2555,  0.2732,  0.0044])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8682,  0.7253,  0.3224, -0.0612,  0.0616, -0.3297, -0.6082, -0.8205,
        -0.6082, -0.3095, -0.0127, -0.4421, -0.2945, -0.6925,  0.4031,  0.8808])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1490,  0.2814, -0.3011, -0.4742, -0.4584, -0.5101, -0.7285, -0.9401,
        -0.7285, -1.0469, -0.9620, -0.9536, -0.9450, -0.9746, -0.1867, -0.0417])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1468,  0.7406,  1.7362,  1.7696,  1.7451,  1.5658, -0.0375, -0.0035,
        -0.0375,  0.5042,  0.2966,  0.4157,  0.6325,  0.8587,  1.8456,  1.4344])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-2.4979,  1.0416,  2.5599,  3.2077,  2.1516,  1.8704, -0.3290, -0.3956,
        -0.3290,  0.3694,  0.6653,  0.1852,  0.2944, -0.1033,  3.3045,  3.7408])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4111,  0.0894, -0.2650, -0.1917,  0.1349, -0.2968,  0.8637, -0.6005,
         0.8637, -1.2772, -1.3898, -1.2819, -0.7887, -1.0517,  0.1026, -0.1340])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0362,  0.3212,  0.2506, -0.0126, -0.0039, -0.3291, -0.6276, -0.8577,
        -0.6276, -0.7731, -0.6956, -0.8594, -0.7004, -0.9313,  0.2346, -0.1340])
tensor([0., 0., 0., 1., 0.])
Epoch: [0][250/616]	Loss 3.2109e+01 (3.1235e+01)	Acc 0.197266 (0.201020)
torch.Size([1024, 16])
tensor([ 0.3429, -0.2923, -0.9222, -0.7979, -0.6827, -0.5703,  1.0284,  0.3833,
         1.0284,  0.2267,  0.0129, -0.4234,  0.6053,  0.0950, -0.8476,  0.2350])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0881,  0.2937, -0.0964, -0.3044, -0.1815, -0.4004, -0.4190, -0.7539,
        -0.4190, -0.8245, -0.7778, -0.8059, -0.6730, -0.8192,  0.1795,  0.0966])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1086, -1.0854, -0.3109, -0.2026,  0.3012, -0.3280,  1.5245, -0.6708,
         1.5245, -1.2093, -1.3176, -1.3255, -0.6059, -1.1694,  0.3302, -0.5953])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 3.1521, -4.4586, -1.2699, -0.8501, -1.1663, -0.6257, -1.2157, -0.9697,
        -1.2157, -1.7635, -1.7414, -1.0584, -1.8498, -1.0567, -1.3135, -1.3333])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3590,  0.4869, -0.9886, -0.8256, -0.8671, -0.5999,  0.1249,  0.3619,
         0.1249,  1.0817,  1.3145,  0.9426,  0.8014,  0.4659, -1.0227,  0.0505])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7395, -0.0188,  0.1025, -0.2210, -0.7156, -0.5879, -1.8671, -1.3782,
        -1.8671, -1.6562, -1.4817, -1.3931, -1.9827, -1.5859,  0.0728, -1.2411])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1600, -0.2920, -1.2264, -0.8491, -1.1136, -0.6247, -0.0274, -0.0553,
        -0.0274,  0.7623,  0.9736,  0.9289,  0.7414,  0.5700, -1.2854, -1.2872])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0640,  0.4731,  0.0426, -0.2233, -0.5239, -0.5065, -1.4097, -1.1479,
        -1.4097, -1.3944, -1.2562, -1.1177, -1.5434, -1.2567,  0.0782, -0.8721])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0596,  0.2503,  0.0820, -0.0852,  0.4582,  0.0764,  0.6125,  0.1400,
         0.6125, -0.3061, -0.4147, -0.4988,  0.0801, -0.1293,  0.1376,  0.6041])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 2.3587, -3.1588, -1.2315, -0.8489, -1.0948, -0.6234,  1.0471,  1.2516,
         1.0471,  0.3313, -0.2450,  0.7308,  0.4993,  1.3373, -1.2886, -1.4717])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0246, -0.0241, -0.9181, -0.8068, -0.7640, -0.5836,  0.3634,  0.2294,
         0.3634,  0.5918,  0.5316,  0.1717,  0.6010,  0.1970, -1.0074, -0.3185])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9810,  0.7155, -0.5179, -0.6835, -0.5285, -0.5125, -0.4033, -0.2831,
        -0.4033,  0.2378,  0.3678, -0.0484,  0.0387, -0.2668, -0.7051,  0.3273])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1033,  0.5937,  1.2293,  1.2311,  1.7121,  1.2798,  0.4852,  0.1364,
         0.4852,  0.4084,  0.3110, -0.0138,  0.5232,  0.1206,  0.9805,  1.5728])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.6664, -0.2952, -1.1110, -0.8401, -0.9934, -0.6184,  0.1039, -0.2129,
         0.1039,  0.3811,  0.4328,  0.1479,  0.4460, -0.0317, -1.1329, -0.2724])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4849, -0.6455, -1.0523, -0.8222, -0.7166, -0.5780,  2.6874,  1.5196,
         2.6874,  0.2505, -0.3910, -0.7246,  0.7730,  0.0268, -0.9829, -1.1950])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6857, -0.1142,  0.0151, -0.3039, -0.5814, -0.5457, -1.5067, -1.2251,
        -1.5067, -1.3084, -1.1265, -1.1095, -1.5146, -1.3154,  0.0697, -0.6414])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9754,  0.7264,  1.5376,  1.6322,  2.1412,  2.4877,  0.5627,  0.7359,
         0.5627,  0.7311,  0.4880,  1.0660,  0.9314,  1.4774,  1.8213,  0.7424])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9419,  0.8057,  2.0969,  2.2353,  1.7760,  1.8815, -0.3080, -0.0460,
        -0.3080,  0.4736,  0.6944,  1.4338,  0.7291,  1.4596,  1.6906,  0.2812])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.1042,  0.2011, -1.1889, -0.8476, -1.0784, -0.6234, -0.0572,  0.0060,
        -0.0572,  1.2424,  1.7438,  1.6910,  1.0857,  0.8629, -1.2387, -0.3185])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.3430,  0.7524,  0.9794,  0.5696,  0.5081, -0.0301, -0.6818, -0.7419,
        -0.6818, -0.0580,  0.2510, -0.1568, -0.1345, -0.4824,  0.5721,  1.8957])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2137,  0.2638,  0.1660,  0.1351,  0.9830,  0.2933,  1.4535,  0.1667,
         1.4535, -0.2687, -0.4542, -0.8900,  0.2741, -0.4371,  0.4617,  0.2812])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2774,  0.2948,  0.2301, -0.0536, -0.4449, -0.5166, -1.4343, -1.2421,
        -1.4343, -1.3754, -1.1709, -1.1639, -1.5610, -1.3952,  0.2245, -1.0104])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2505, -0.3145, -1.2317, -0.8494, -1.1141, -0.6247,  0.1810,  0.3576,
         0.1810,  1.3707,  1.7018,  1.9322,  1.1745,  1.1865, -1.2845,  1.5266])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9950,  0.6983,  1.1163,  0.8676,  1.2636,  1.2178,  0.1025,  0.4155,
         0.1025,  0.4913,  0.2459,  0.2859,  0.1072,  0.0945,  1.5694,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6472, -1.6798, -0.2856, -0.2267, -0.1125, -0.3939,  0.2303, -0.8265,
         0.2303, -1.4688, -1.5735, -1.2818, -1.1364, -1.1485,  0.0764, -1.2411])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.6472e+00,  9.0859e-01,  2.5422e-01, -8.2460e-04,  1.5122e+00,
         1.7622e+00,  2.1974e+00,  3.4922e+00,  2.1974e+00,  1.4206e+00,
         7.8448e-01,  2.5033e-01,  1.3492e+00,  1.1519e+00,  3.6892e-01,
         1.9418e+00])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1584,  0.5581, -0.2189, -0.2822, -0.3153, -0.5129, -0.5043, -1.1331,
        -0.5043, -1.4070, -1.3029, -1.2907, -1.2333, -1.3450,  0.0712, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.7594,  0.8368,  1.3467,  1.5339,  1.9499,  1.4837,  0.5982,  0.0819,
         0.5982,  0.3108,  0.3312, -0.0227,  0.5961,  0.1008,  2.6343,  3.1873])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1801,  0.5568, -0.1443, -0.2470,  0.0134, -0.2883,  0.1711, -0.4944,
         0.1711, -0.9129, -0.8766, -1.0067, -0.5980, -0.8218,  0.1674, -0.4108])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6353,  0.6576,  1.9133,  2.2923,  0.9005,  0.8177, -0.9531, -0.6714,
        -0.9531, -0.6879, -0.5461, -0.2691, -0.7582, -0.4187,  2.6164,  0.9731])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9997,  0.7444, -0.4105, -0.6249, -0.0401, -0.2117,  0.8986,  1.7670,
         0.8986,  1.4619,  1.1698,  0.8615,  1.0711,  0.9811, -0.5151,  0.6502])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.7536, -1.9963, -0.2950, -0.3587, -0.0921, -0.2509,  0.3177, -0.1348,
         0.3177, -1.0156, -1.2560, -1.0161, -0.7486, -0.7681, -0.1126, -0.4569])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9686,  0.6378,  2.1012,  2.1452,  1.8031,  1.9012, -0.2881,  0.0089,
        -0.2881,  0.6469,  0.9081,  1.4392,  0.6646,  1.0860,  1.6063,  1.0653])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9052,  0.7464,  2.0350,  2.3830,  1.3858,  0.5831, -0.6002, -0.8227,
        -0.6002, -0.1863,  0.1453, -0.4603, -0.1922, -0.7117,  1.5058,  0.4657])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.4602, -1.5546, -0.9381, -0.8010, -0.6534, -0.5475,  1.4375,  1.3207,
         1.4375,  0.4046, -0.1143, -0.0632,  0.7126,  0.6472, -0.9361, -0.5953])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0577,  0.7191, -0.6461, -0.7432, -0.4909, -0.5076,  0.2429,  0.4673,
         0.2429,  1.4370,  1.7633,  1.3097,  1.1415,  0.7749, -0.8146,  0.8347])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8842,  0.5396, -0.7946, -0.7664, -0.4960, -0.5076,  1.1242,  1.0060,
         1.1242,  0.8454,  0.7406,  0.4724,  1.1027,  0.8443, -0.8692,  1.2499])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4578,  0.1943,  0.2121,  0.0072, -0.4105, -0.3627, -1.3517, -0.9415,
        -1.3517, -1.4729, -1.4655, -1.2348, -1.7056, -1.2473,  0.2912, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2307, -0.0463, -0.1779, -0.4021,  0.0933, -0.1069,  0.4682,  0.5646,
         0.4682,  0.0069, -0.1966, -0.1162,  0.2337,  0.4237, -0.0979,  0.2812])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7389,  0.6091,  0.9921,  0.9759,  1.1360,  0.7020,  0.1002, -0.1973,
         0.1002, -0.1787, -0.1025, -0.2575,  0.0481, -0.1717,  1.0289,  0.9270])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3020,  0.5923, -0.9232, -0.7996, -0.5922, -0.5333,  1.7423,  1.7358,
         1.7423,  0.8738,  0.5134, -0.0707,  1.0903,  0.5826, -0.9605, -0.4569])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.9518, -1.9284, -1.2352, -0.8491, -1.0986, -0.6238,  1.0989,  1.1636,
         1.0989,  0.3631, -0.0626,  0.3241,  0.5865,  1.0000, -1.2792, -1.3333])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2008,  0.1259,  0.0515, -0.2932, -0.3293, -0.4182, -1.0010, -0.8252,
        -1.0010, -0.7513, -0.7662, -0.8293, -1.0072, -0.9569,  0.0923, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2327,  0.0377, -0.1434, -0.3884, -0.1582, -0.3333, -0.2622, -0.3639,
        -0.2622, -0.4610, -0.4347, -0.4234, -0.3467, -0.4195,  0.1220, -0.3185])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8476,  0.5532, -0.4775, -0.6718, -0.3479, -0.4582,  0.1155,  0.1765,
         0.1155,  1.0014,  1.3222,  1.1804,  0.8781,  0.6409, -0.5059,  1.2037])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6432,  0.6626,  0.2213, -0.2112,  0.0729, -0.2876, -0.4387, -0.5480,
        -0.4387,  0.1709,  0.5009,  0.1176,  0.0448, -0.3177,  0.0491, -0.0417])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0573,  0.6587, -0.2100, -0.5477, -0.2153, -0.4193, -0.2568, -0.2771,
        -0.2568,  0.7372,  1.1781,  0.7831,  0.6205,  0.2384, -0.5538,  0.8808])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.2251, -0.6739, -1.2172, -0.8487, -1.1176, -0.6249, -0.5027, -0.5420,
        -0.5027,  0.0927,  0.4218,  0.3024, -0.1685, -0.3645, -1.2917, -1.4256])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7970,  0.1718,  0.0540, -0.2497, -0.7696, -0.5851, -1.9483, -1.3649,
        -1.9483, -1.7577, -1.4999, -1.2193, -2.0963, -1.5305,  0.0609, -1.5640])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0698,  0.5020,  0.1387, -0.1809, -0.2029, -0.4261, -0.8573, -0.9566,
        -0.8573, -0.7716, -0.4919, -0.4973, -0.6860, -0.7911,  0.0871, -0.8259])
tensor([0., 0., 1., 0., 0.])
Epoch: [0][300/616]	Loss 3.2461e+01 (3.1362e+01)	Acc 0.188477 (0.200838)
torch.Size([1024, 16])
tensor([ 0.4005,  0.3306, -0.1487,  0.0872,  0.4508, -0.0550,  1.2860, -0.4068,
         1.2860, -1.3965, -1.3805, -1.2948, -0.8819, -1.0802,  0.2542, -0.8721])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.8904, -0.0382, -1.1245, -0.8401, -0.9866, -0.6174,  0.4497, -0.0342,
         0.4497,  0.0786,  0.1168, -0.3055,  0.1954, -0.3831, -1.1617, -1.1488])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1428, -0.6416, -1.2125, -0.8485, -1.0786, -0.6228,  0.7225,  1.2284,
         0.7225,  1.4861,  1.0948,  1.6051,  1.4188,  2.0651, -1.2228, -1.0566])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5421,  0.6559,  0.3183, -0.0496,  0.0595, -0.3197, -0.6064, -0.8080,
        -0.6064, -0.3724, -0.0755, -0.4459, -0.3367, -0.7062,  0.2518, -0.3185])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.4719,  0.6965,  0.3229, -0.0342, -0.5140, -0.5573, -1.6379, -1.3362,
        -1.6379, -1.3944, -1.1367, -1.2514, -1.6031, -1.4719,  0.0866, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4414,  0.2725, -1.0155, -0.8278, -0.8868, -0.6052,  0.2049,  0.1260,
         0.2049,  0.7123,  0.7651,  0.3390,  0.7821,  0.5099, -1.1250,  0.5579])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8277,  0.7189,  0.1554, -0.0172,  1.0802,  0.4602,  1.6784,  0.8231,
         1.6784,  0.4644,  0.1707, -0.5959,  0.8336,  0.1057,  0.3116,  0.3273])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.3704,  0.3356, -0.9745, -0.8232, -0.8498, -0.5985,  0.1511,  0.2950,
         0.1511,  1.1124,  1.3749,  1.2495,  0.9649,  0.7283, -1.0782, -0.1340])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6266, -1.2843, -1.0326, -0.8246, -0.9186, -0.6097,  0.0529, -0.3789,
         0.0529, -0.4351, -0.4428, -0.3538, -0.3444, -0.5462, -1.0988, -0.9643])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2641,  0.7947, -0.5968, -0.6981, -0.1431, -0.3258,  1.4662,  2.0040,
         1.4662,  1.5475,  1.1798,  0.6314,  1.4916,  1.2258, -0.6081,  1.0653])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3540,  0.4690, -0.6656, -0.7501, -0.5911, -0.5472, -0.1223, -0.0982,
        -0.1223,  0.9942,  1.2890,  1.0151,  0.8201,  0.4841, -0.8055,  0.3273])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6634,  0.4282,  2.1559,  2.5789,  1.7054,  1.4300, -0.4103, -0.4232,
        -0.4103,  0.0610,  0.0992, -0.1434, -0.0252, -0.2229,  2.1711,  1.9879])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.3496, -0.6786, -1.0477, -0.8294, -0.9145, -0.6075,  0.2770,  0.0542,
         0.2770,  0.0365, -0.0434, -0.1030,  0.2041,  0.0388, -1.0961, -1.1027])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2437,  0.0944, -1.2021, -0.8482, -1.0822, -0.6233,  0.2156,  0.4375,
         0.2156,  1.3072,  1.5248,  1.5330,  1.0255,  0.8624, -1.2649,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.8478, -0.2373, -0.0141, -0.1555, -0.5276, -0.5307, -1.3552, -1.2424,
        -1.3552, -1.6414, -1.6096, -1.3985, -1.8126, -1.5000,  0.1167, -1.1027])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3883, -0.0094, -0.4679, -0.4839,  0.5824,  0.3272,  3.3334,  3.1199,
         3.3334,  0.0753, -0.5125, -0.4993,  0.8578,  0.6913, -0.3423,  0.0966])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.4935, -5.6135, -1.2528, -0.8490, -1.1165, -0.6239,  1.5072,  0.7464,
         1.5072, -1.5081, -1.7495, -0.9845, -0.9922, -0.2298, -1.2748, -0.7798])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1397,  0.2392, -1.0224, -0.8311, -0.9429, -0.6138, -0.3122, -0.3889,
        -0.3122,  0.6289,  1.0691,  0.9002,  0.5487,  0.2246, -1.1235, -0.6414])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7146,  0.5073, -1.0569, -0.8368, -0.9287, -0.6091,  0.2236,  0.6879,
         0.2236,  1.8170,  2.1468,  2.3057,  1.6329,  1.8676, -1.1330,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2128, -0.2242, -1.1453, -0.8444, -0.9938, -0.6151,  0.7657,  1.6411,
         0.7657,  1.7700,  1.5819,  1.8039,  1.4194,  1.8254, -1.2335, -0.1340])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0349,  0.2826, -0.9901, -0.8219, -0.8263, -0.5989,  0.5257,  0.1877,
         0.5257,  0.7603,  0.6242,  0.1321,  0.7719,  0.3212, -1.0065,  0.0505])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.3477,  0.8126, -0.6561, -0.7428, -0.4686, -0.5042,  0.3917,  0.5149,
         0.3917,  1.4143,  1.7411,  1.3059,  1.3089,  0.9913, -0.7975,  0.9731])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3296,  0.4568,  1.6089,  2.0066,  0.9386,  0.5550, -0.7185, -0.7529,
        -0.7185, -0.7570, -0.7022, -0.6267, -0.8703, -0.8331,  1.6527,  0.2812])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9297, -1.1090, -1.1554, -0.8429, -0.9777, -0.6167,  1.3595,  0.6378,
         1.3595,  0.3850, -0.0726, -0.3931,  0.7370,  0.1734, -1.1908, -0.0879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5945,  0.3701, -0.2107, -0.5208, -0.3263, -0.4905, -0.5514, -0.7581,
        -0.5514,  0.0126,  0.2720, -0.2789, -0.0097, -0.5280, -0.3722,  0.4657])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8039,  0.7759,  0.2021, -0.2228, -0.1295, -0.4243, -0.7990, -0.9164,
        -0.7990, -0.2602,  0.1084, -0.4178, -0.4099, -0.8584,  0.0467, -0.0879])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3368, -0.1188, -1.0847, -0.8313, -0.7632, -0.5763,  2.8964,  3.0992,
         2.8964,  0.8320,  0.1717, -0.3468,  1.2227,  0.8698, -1.1240,  0.5579])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.3148, -0.8116, -1.2166, -0.8487, -1.1011, -0.6241,  0.0819,  0.2121,
         0.0819,  0.8522,  1.0493,  1.4134,  0.8172,  0.8850, -1.2999, -1.2872])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4421,  0.4954,  0.0547, -0.2085,  0.3258, -0.0820,  0.3981,  0.0151,
         0.3981,  0.0257,  0.0478,  0.0498,  0.4222,  0.2291,  0.1741,  0.5579])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3950,  0.2675, -0.8067, -0.7746, -0.6346, -0.5532,  0.4016,  0.2095,
         0.4016,  0.4593,  0.5002,  0.1354,  0.5342,  0.1110, -0.9189, -0.0879])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4675,  0.2030, -1.1562, -0.8448, -1.0131, -0.6174,  0.6472,  1.1908,
         0.6472,  1.2239,  1.1165,  0.8239,  1.0388,  0.8442, -1.1633,  0.1428])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5994, -0.2172, -1.1696, -0.8459, -1.0158, -0.6178,  0.9554,  1.6348,
         0.9554,  1.5538,  1.3026,  1.2902,  1.2932,  1.4096, -1.2140, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0798,  0.2657, -0.4905, -0.6525, -0.6376, -0.5478, -0.8780, -0.7875,
        -0.8780, -0.6159, -0.5193, -0.5263, -0.6401, -0.5770, -0.6319, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6532, -1.2192, -1.2045, -0.8477, -1.0455, -0.6205,  1.4633,  1.9759,
         1.4633,  1.3303,  0.6828,  1.1850,  1.3845,  1.9314, -1.2554, -1.3333])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.1330,  0.1368, -0.5644, -0.5933,  0.1709, -0.1608,  2.5181,  1.7180,
         2.5181,  0.1229, -0.3884, -0.5458,  0.8357,  0.5193, -0.3333,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.4190,  1.0033,  1.1185,  0.8109,  1.7920,  1.9765,  0.7331,  1.2889,
         0.7331,  1.3399,  1.0483,  1.0316,  1.0488,  1.1493,  0.8051,  3.5102])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.5386,  0.8920,  1.7921,  2.1187,  2.3686,  2.0220,  0.4962,  0.0943,
         0.4962,  0.6343,  0.5210, -0.1346,  0.7614,  0.2514,  1.6581,  1.2960])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.6224,  0.6994,  0.0445, -0.2077,  0.1168, -0.3532, -0.0284, -0.7336,
        -0.0284, -0.3654, -0.2285, -0.8191, -0.1079, -0.7387,  0.0899, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4621,  0.1263, -1.2148, -0.8487, -1.1031, -0.6244, -0.0522, -0.0042,
        -0.0522,  1.0003,  1.4382,  1.3256,  0.7394,  0.4108, -1.2799, -0.1340])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4525,  0.2759,  0.3415, -0.0018, -0.4181, -0.4856, -1.4819, -1.1923,
        -1.4819, -1.2769, -1.0976, -1.0766, -1.4537, -1.2545,  0.2872, -1.0566])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.7174, -0.3246, -1.2127, -0.8484, -1.0701, -0.6219,  1.0289,  1.8201,
         1.0289,  1.3595,  0.9811,  1.1646,  1.2093,  1.4816, -1.2381, -0.6875])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1782,  0.3462,  0.1980, -0.1366, -0.4939, -0.5109, -1.4993, -1.1997,
        -1.4993, -1.3123, -1.0926, -1.0905, -1.5070, -1.2865,  0.1274, -0.8259])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.4298,  0.8290,  2.0960,  2.5199,  2.0522,  1.7287, -0.0718, -0.2477,
        -0.0718,  0.3458,  0.2809,  0.0871,  0.4555,  0.2070,  2.0739,  1.2960])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0613,  0.4255,  0.0822, -0.2210, -0.4855, -0.5027, -1.3699, -1.1384,
        -1.3699, -1.2634, -1.0959, -1.0463, -1.4502, -1.2768,  0.0878, -0.5953])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3208,  0.4019, -0.3195, -0.4769,  0.3644,  0.0365,  1.7500,  1.6549,
         1.7500,  0.5552,  0.1212,  0.1840,  1.1428,  1.2209, -0.2723,  0.7424])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.4536, -0.9543, -1.2205, -0.8488, -1.1043, -0.6239,  0.1107,  0.5785,
         0.1107,  0.7259,  0.6079,  0.9584,  0.4425,  0.7886, -1.2904, -1.5640])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8747,  0.7907,  0.4198, -0.0145, -0.1080, -0.4129, -1.0204, -1.0338,
        -1.0204, -0.5527, -0.3081, -0.7491, -0.6063, -0.9065,  0.2808,  0.0966])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.5982,  0.6201,  0.6102,  0.2652, -0.1262, -0.3957, -1.2288, -1.1196,
        -1.2288, -0.9731, -0.7179, -0.9591, -1.0888, -1.1398,  0.3391,  0.2350])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.0183,  0.3014, -0.3636, -0.4301,  0.4697,  0.0885,  2.2935,  1.5242,
         2.2935, -0.0121, -0.6961, -0.7562,  0.3255,  0.0463, -0.2308, -0.1801])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2054,  0.2484, -0.3169, -0.4620,  0.1150, -0.2512,  1.0007,  0.2229,
         1.0007, -0.0765, -0.3165, -0.6359,  0.3195, -0.2640, -0.2685,  0.1428])
tensor([0., 0., 0., 1., 0.])
Epoch: [0][350/616]	Loss 3.1406e+01 (3.1441e+01)	Acc 0.214844 (0.201027)
torch.Size([1024, 16])
tensor([-1.4622,  0.8436,  1.2212,  0.9275,  1.1608,  1.0347, -0.1380,  0.1690,
        -0.1380,  0.4635,  0.5365,  0.2712,  0.3714,  0.3835,  1.0158,  2.5415])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2249, -0.0886,  1.0880,  0.9445,  1.4577,  0.9704,  0.3729,  0.0900,
         0.3729,  0.4526,  0.3494,  0.1538,  0.5219,  0.3267,  1.8184,  0.6963])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.2836, -2.2380, -1.1803, -0.8462, -1.0558, -0.6205,  0.3006,  0.7616,
         0.3006,  0.3942,  0.0372,  1.0125,  0.2168,  0.9647, -1.2373, -1.3333])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.8156,  0.9019,  1.4147,  1.5166,  1.3344,  0.8305, -0.1447, -0.3954,
        -0.1447, -0.1019, -0.0644, -0.3589,  0.0221, -0.2636,  1.4069,  2.9105])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4166, -1.4999, -1.2178, -0.8486, -1.1357, -0.6252, -1.1589, -0.9530,
        -1.1589, -0.8846, -0.6044, -0.4190, -0.9949, -0.8069, -1.2866, -1.1950])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4852,  0.5483, -0.0275, -0.3658, -0.3078, -0.4431, -0.8381, -0.8173,
        -0.8381, -0.5384, -0.2995, -0.4497, -0.5473, -0.6405, -0.1466,  0.1428])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7476,  0.6192, -0.4225, -0.6337, -0.1200, -0.3313,  0.6850,  0.9216,
         0.6850,  1.3044,  1.2436,  0.7834,  1.1626,  0.9087, -0.4296,  0.2350])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8360,  0.6163,  0.0940, -0.0219,  0.8704,  0.3482,  1.4406,  0.5970,
         1.4406, -0.0163, -0.2016, -0.5653,  0.4217, -0.1592,  0.3122,  0.7886])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.1891,  0.1854,  0.0570, -0.1645, -0.2369, -0.4629, -0.8110, -1.0642,
        -0.8110, -1.0739, -0.9143, -0.9758, -0.9643, -1.0924,  0.0562, -0.4569])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.3474,  0.8679,  0.9767,  0.7499,  1.3008,  0.8108,  0.3299,  0.1048,
         0.3299,  0.4981,  0.3390, -0.1397,  0.5131,  0.0617,  1.2736,  1.1115])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-5.7661e-01,  6.1940e-01,  1.7819e+00,  2.0875e+00,  1.5209e+00,
         8.4352e-01, -2.8974e-01, -5.9916e-01, -2.8974e-01, -9.8199e-02,
         1.8436e-03, -2.5233e-01, -7.6783e-02, -4.3872e-01,  1.5967e+00,
         6.5018e-01])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.5319, -0.5067, -1.1445, -0.8444, -1.0408, -0.6205, -0.1528,  0.0511,
        -0.1528,  0.7136,  0.7502,  0.9894,  0.5439,  0.6824, -1.2100, -0.7798])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.8985, -0.5688, -1.1943, -0.8477, -1.0760, -0.6227,  0.1587,  0.4831,
         0.1587,  1.0406,  1.0450,  1.4527,  0.9824,  1.4657, -1.2716, -0.9182])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4751,  0.0451, -0.9347, -0.8038, -0.6839, -0.5658,  1.1521,  0.7941,
         1.1521,  0.5501,  0.4053,  0.1695,  0.8955,  0.6188, -0.9615,  1.3421])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1402,  0.1975,  0.2240, -0.1487,  0.0858, -0.2140, -0.4182, -0.4456,
        -0.4182, -0.1490,  0.0469,  0.0387, -0.0824, -0.1461,  0.2167,  0.6041])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.6332,  0.1357,  0.2798, -0.0059, -0.3581, -0.3122, -1.3190, -0.8273,
        -1.3190, -1.2691, -1.2459, -0.8977, -1.5084, -0.9407,  0.2831, -1.0566])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.6040,  0.4460,  0.3908,  0.0680, -0.5715, -0.5280, -1.7845, -1.2963,
        -1.7845, -1.5856, -1.4176, -1.2450, -1.8785, -1.4369,  0.8904,  0.7424])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.3010,  0.2219, -1.1539, -0.8456, -1.0384, -0.6206,  0.0733,  0.4269,
         0.0733,  1.5654,  1.9667,  2.3522,  1.4249,  1.7582, -1.2397, -0.3646])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4409, -0.6826, -1.0782, -0.8295, -0.8817, -0.6100,  1.1488, -0.1527,
         1.1488, -0.3015, -0.4557, -0.7199,  0.1765, -0.5041, -1.1252, -0.4569])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.3009,  0.1455,  0.0215,  0.0643,  0.3362,  0.0314,  0.5024, -0.2126,
         0.5024, -1.0887, -1.2790, -1.0568, -0.7842, -0.7276,  0.2134, -0.0417])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0096,  0.4361,  0.0782, -0.1949, -0.0778, -0.3492, -0.5071, -0.7377,
        -0.5071, -0.6521, -0.5780, -0.8411, -0.5711, -0.9149,  0.0838, -0.8259])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2305,  0.5717, -0.1200, -0.4285, -0.2620, -0.3775, -0.5689, -0.4429,
        -0.5689, -0.3124, -0.2130, -0.5856, -0.4057, -0.6538, -0.1711, -0.3646])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2210,  0.2263, -0.1347, -0.2620,  0.8749,  0.5710,  2.2932,  2.1168,
         2.2932,  0.4068, -0.1187, -0.3693,  0.8978,  0.5605, -0.0194,  0.7886])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2912,  0.4291, -0.0621, -0.3764, -0.0789, -0.3099, -0.2454, -0.3047,
        -0.2454, -0.0716,  0.0743, -0.0226, -0.1017, -0.3134, -0.1812, -0.1801])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5075, -0.0228,  0.0818, -0.0397, -0.2635, -0.4695, -0.9030, -1.1434,
        -0.9030, -1.3871, -1.2707, -1.1752, -1.3400, -1.3209,  0.2852, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7447,  0.7579,  0.3488, -0.1021,  0.0953, -0.3207, -0.5847, -0.7630,
        -0.5847,  0.0205,  0.1625, -0.3594, -0.1798, -0.6549,  0.2675, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.1884, -0.2796, -0.2879, -0.1975, -0.0615, -0.3500,  0.3836, -0.7369,
         0.3836, -1.4968, -1.6056, -1.3933, -1.2176, -1.2475,  0.1332, -0.8259])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.3466,  0.6089,  0.3103, -0.0451, -0.1013, -0.3200, -0.8850, -0.8124,
        -0.8850, -0.6856, -0.6310, -0.6621, -0.7368, -0.6718,  0.2649, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8310,  0.6979, -0.2205, -0.5484, -0.2097, -0.3916, -0.2165, -0.1115,
        -0.2165,  0.7048,  1.1077,  0.8115,  0.5359,  0.2505, -0.3989, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8363, -1.4170, -1.2332, -0.8492, -1.1464, -0.6255, -1.2422, -1.0671,
        -1.2422, -0.9889, -0.8152, -0.6697, -1.1124, -0.9545, -1.3037, -0.4569])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0940, -0.0558, -0.9057, -0.8058, -0.7183, -0.5701,  0.6010,  0.7220,
         0.6010,  1.0339,  1.0158,  0.8626,  1.1688,  1.1054, -0.8916,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4846,  0.6122, -0.1245, -0.2236,  0.4920,  0.0107,  1.3027,  0.3133,
         1.3027, -0.3172, -0.4361, -0.7625,  0.0901, -0.4831,  0.2730,  0.0966])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.9025,  0.7386, -0.3749, -0.5754, -0.2081, -0.3938,  0.2266,  0.0085,
         0.2266,  0.2053,  0.2231,  0.0925,  0.4255,  0.1755, -0.3515,  0.9270])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3040,  0.2581, -0.0429, -0.1838, -0.1557, -0.4466, -0.4625, -1.0088,
        -0.4625, -1.1141, -0.9704, -1.0941, -0.9332, -1.1428,  0.0974, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6523,  0.6737,  0.2087, -0.2357, -0.0092, -0.3044, -0.5765, -0.5589,
        -0.5765,  0.1022,  0.4997,  0.3372, -0.0162, -0.2567,  0.1184,  0.2350])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0601,  0.2871, -1.1286, -0.8438, -1.0043, -0.6178,  0.2249,  0.6458,
         0.2249,  1.8179,  2.2758,  2.5117,  1.5884,  1.8119, -1.2069, -0.6414])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2978,  0.6345,  0.3676, -0.0280, -0.1527, -0.3474, -1.0414, -0.8854,
        -1.0414, -0.7044, -0.5566, -0.8170, -0.8693, -0.9330,  0.2399, -0.5492])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0462,  0.4081, -0.8715, -0.7940, -0.6777, -0.5690,  0.6018,  0.2965,
         0.6018,  0.6962,  0.7649,  0.2087,  0.7740,  0.2149, -0.8870, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0151,  0.3997,  0.3416, -0.0179, -0.1200, -0.3985, -0.9553, -1.0012,
        -0.9553, -0.7376, -0.5756, -0.9270, -0.7878, -1.0087,  0.3359, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.5543,  0.6718,  0.3035, -0.1094,  0.1519, -0.1952, -0.4186, -0.4557,
        -0.4186,  0.0265,  0.1618, -0.0159, -0.1816, -0.4195,  0.1947, -0.1340])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5882, -0.4775, -0.3463, -0.5120, -0.5554, -0.5138, -0.9241, -0.8987,
        -0.9241, -1.1589, -1.1803, -1.0839, -1.2333, -1.1233, -0.4059, -0.4108])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0277, -0.3389, -1.1991, -0.8480, -1.0851, -0.6234,  0.0338,  0.2945,
         0.0338,  1.1284,  1.3876,  1.5009,  0.9208,  0.9078, -1.2807,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.4826,  0.7989,  2.0916,  2.0508,  2.0948,  2.1216, -0.0318,  0.1921,
        -0.0318,  1.1078,  1.3223,  1.5528,  1.1137,  1.3240,  1.7279,  1.8957])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4881,  0.6314,  0.4342,  0.6391,  0.3188, -0.1539, -0.3217, -0.9237,
        -0.3217, -1.3467, -1.3334, -1.3366, -1.2127, -1.3062,  0.4218, -0.2724])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6683, -0.0923, -1.2177, -0.8488, -1.0903, -0.6236,  0.5252,  0.8170,
         0.5252,  1.4098,  1.5016,  1.5183,  1.3322,  1.3106, -1.2644, -1.0104])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.3264, -0.8155,  0.0943, -0.0945, -0.4828, -0.4343, -1.3768, -1.0363,
        -1.3768, -1.5459, -1.5063, -1.1101, -1.7062, -1.1636,  0.3994, -0.9182])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.7895,  0.0073,  0.1319, -0.1834, -0.3484, -0.4364, -1.1427, -0.9819,
        -1.1427, -1.0385, -0.8400, -0.7361, -1.0993, -0.9478,  0.1074, -1.2872])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4070,  0.4476, -1.0899, -0.8388, -0.8895, -0.5979,  1.2660,  2.7665,
         1.2660,  2.1637,  1.8578,  1.6837,  1.8167,  2.1592, -1.1399,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2281,  0.2723, -1.0254, -0.8323, -0.9072, -0.6081,  0.0975,  0.2442,
         0.0975,  1.3936,  1.8222,  1.7658,  1.1667,  0.9449, -1.1461, -0.0417])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1982,  0.1889,  0.1573, -0.2286, -0.4066, -0.5030, -1.2882, -1.1350,
        -1.2882, -0.9336, -0.3643, -0.4916, -1.0601, -1.0859,  0.0976, -0.5492])
tensor([0., 0., 1., 0., 0.])
Epoch: [0][400/616]	Loss 3.1836e+01 (3.1507e+01)	Acc 0.204102 (0.200987)
torch.Size([1024, 16])
tensor([ 0.2911,  0.0374,  1.3262,  1.4220, -0.3475, -0.3176, -1.9101, -1.2446,
        -1.9101, -1.7272, -1.6228, -1.2420, -2.1269, -1.4177,  1.0128, -0.3185])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.6499, -1.8191, -0.0612, -0.0732, -0.0696, -0.4289, -0.2255, -1.0363,
        -0.2255, -1.3455, -1.3384, -1.2378, -1.1140, -1.2754,  0.3005, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.6156, -0.4040, -1.2066, -0.8483, -1.0793, -0.6225,  0.4667,  1.3163,
         0.4667,  1.5328,  1.5118,  1.8831,  1.3139,  1.9510, -1.2717, -0.2724])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1117, -0.0529,  1.1063,  0.9620, -0.1005, -0.3270, -1.5285, -1.1928,
        -1.5285, -1.3057, -1.1675, -1.1280, -1.5798, -1.3185,  1.0446,  0.2350])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.3054, -1.1729, -1.2604, -0.8500, -1.1487, -0.6255, -0.2111, -0.2794,
        -0.2111,  0.1597,  0.2680,  0.3680,  0.0963,  0.0090, -1.3227, -0.5492])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4191,  0.5443, -0.6980, -0.7442, -0.3580, -0.4412,  1.1534,  1.5928,
         1.1534,  1.5279,  1.2529,  0.9032,  1.4948,  1.3770, -0.6750,  0.0505])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4657, -0.4969, -0.3670, -0.2867,  0.0202, -0.1258,  0.9119,  0.0856,
         0.9119, -1.3572, -1.5513, -1.3046, -1.0670, -0.9737,  0.0142, -0.9643])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3121,  0.2983,  0.2206, -0.1024, -0.4760, -0.5123, -1.4849, -1.2161,
        -1.4849, -1.3297, -1.1968, -1.1899, -1.5366, -1.3480,  0.2859, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.2137,  0.8100,  0.2337, -0.2036,  0.3237, -0.0447,  0.0164,  0.1061,
         0.0164,  0.7057,  0.7293,  0.3321,  0.3811,  0.0144,  0.3433,  1.2960])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9706,  0.7392,  1.2142,  0.8702,  1.2415,  1.0606, -0.0373,  0.2508,
        -0.0373,  0.7041,  0.6686,  0.3730,  0.4470,  0.2055,  0.8443,  0.5118])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.3617,  0.3716,  0.1421, -0.1945, -0.5977, -0.5370, -1.6565, -1.2451,
        -1.6565, -1.4422, -1.2943, -1.2098, -1.7012, -1.3533,  0.0997, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4894, -1.4605, -0.3171, -0.2948,  0.1022, -0.2005,  0.9634, -0.1295,
         0.9634, -1.1090, -1.2817, -1.0251, -0.6430, -0.7291,  0.0138, -0.6875])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0844,  0.8186,  1.7260,  1.6887,  1.9798,  2.6953,  0.1966,  0.8313,
         0.1966,  0.8818,  0.6695,  1.1133,  0.9040,  1.7101,  1.8595,  0.8347])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.8989, -0.2203, -0.2735, -0.2122, -0.0211, -0.4528,  0.4526, -1.0047,
         0.4526, -1.3910, -1.4140, -1.3685, -1.0228, -1.3523,  0.1021, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6483, -1.5192, -1.0737, -0.8351, -0.8849, -0.6013,  1.0273,  1.3434,
         1.0273,  1.1423,  0.6223,  0.9727,  1.1191,  1.3379, -1.1103,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.7893, -1.5836, -0.1471, -0.2315, -0.2914, -0.4524, -0.5896, -0.9888,
        -0.5896, -1.3749, -1.2991, -1.0246, -1.2272, -1.1363,  0.0404, -1.1027])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1408,  0.4456, -0.1764, -0.1163,  0.5206, -0.2190,  1.5683, -0.5035,
         1.5683, -0.9070, -0.8398, -1.2686, -0.3050, -1.1027,  0.1794, -0.6414])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4899,  0.2366,  0.1378, -0.1934, -0.5697, -0.5046, -1.5964, -1.1583,
        -1.5964, -1.3999, -1.2596, -1.1584, -1.6527, -1.2993,  0.0962, -0.9182])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0310,  0.5095,  0.1296, -0.1899, -0.3902, -0.5184, -1.2250, -1.1968,
        -1.2250, -1.0971, -0.7039, -0.8264, -1.1916, -1.2652,  0.1319, -1.0104])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.9817, -3.2656, -1.2314, -0.8487, -1.0938, -0.6231,  1.0846,  1.2830,
         1.0846, -0.0781, -0.4642,  0.2413,  0.4152,  1.2129, -1.2865, -0.9643])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0628,  0.3790,  0.3542, -0.0164, -0.1213, -0.3519, -0.9719, -0.9032,
        -0.9719, -0.7172, -0.6337, -0.8447, -0.8592, -0.9180,  0.2278, -0.1801])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.9006,  0.6584,  0.4370, -0.0538,  0.1652, -0.2182, -0.5822, -0.5788,
        -0.5822,  0.1895,  0.5890,  0.2791,  0.1488, -0.1388,  0.1096,  0.2812])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6152, -0.8395, -0.5862, -0.6319, -0.3345, -0.4759,  0.6212, -0.2702,
         0.6212, -0.5343, -0.6015, -0.5358, -0.0530, -0.3723, -0.5152,  0.0044])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7161,  0.1909, -0.0023, -0.1876, -0.2986, -0.4314, -0.8565, -0.9654,
        -0.8565, -1.2196, -1.1530, -1.0883, -1.1663, -1.0951,  0.0944, -1.2411])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.5921, -0.9746, -1.2028, -0.8480, -1.1028, -0.6239, -0.4049, -0.1237,
        -0.4049,  0.1241,  0.1497,  0.7009,  0.0423,  0.5329, -1.2607, -1.5640])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0696,  0.6194, -0.9262, -0.8139, -0.7242, -0.5713,  0.7449,  1.1554,
         0.7449,  1.7369,  1.8760,  1.4055,  1.4400,  1.0944, -0.9985,  0.7424])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6301,  0.6551, -0.0202, -0.3421,  0.4643,  0.1996,  0.9021,  1.3907,
         0.9021,  1.0018,  0.4981,  0.5418,  0.6506,  0.5927,  0.0587,  0.4657])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1928,  0.2265,  1.7777,  2.0312,  2.0621,  2.3473,  0.2233,  0.3422,
         0.2233,  0.4658,  0.2513,  0.8193,  0.0878,  0.2778,  1.7652,  0.2812])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.6439,  0.1473, -0.3005, -0.2211, -0.1365, -0.3979,  0.2062, -0.8436,
         0.2062, -1.5364, -1.5332, -1.4446, -1.3069, -1.4092,  0.0976, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2522,  0.8273,  1.1379,  0.9046,  0.3833, -0.1399, -0.9702, -0.9945,
        -0.9702, -0.6226, -0.2087, -0.4734, -0.6494, -0.8652,  1.1975,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5368,  0.7227,  0.1474, -0.2206, -0.4450, -0.5345, -1.3545, -1.2280,
        -1.3545, -1.0616, -0.8308, -1.1312, -1.2194, -1.3240,  0.0505, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.2539, -0.6593, -1.1481, -0.8448, -1.0289, -0.6192,  0.1463,  0.5889,
         0.1463,  1.2142,  1.3749,  1.9247,  1.1206,  1.6299, -1.2202, -0.8721])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4934,  0.6700,  0.3657, -0.0878, -0.0712, -0.3666, -0.8974, -0.8828,
        -0.8974, -0.3291,  0.1789,  0.0969, -0.3764, -0.5732,  0.2894, -0.5030])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7367,  0.6794, -0.8007, -0.7744, -0.6548, -0.5541,  0.2442,  0.1848,
         0.2442,  0.4114,  0.3316,  0.0664,  0.4107,  0.1406, -0.8906,  0.2350])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9703,  0.6281,  1.6382,  1.5642,  1.9195,  1.7661,  0.2278,  0.2693,
         0.2278,  0.8722,  0.7250,  0.7075,  0.9730,  1.0990,  1.6436,  1.2960])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.4148, -1.9416, -1.1051, -0.8393, -0.9619, -0.6099,  0.4938,  1.0415,
         0.4938,  0.7095,  0.4011,  1.1131,  0.8078,  1.5677, -1.2047, -0.6414])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.8340,  0.8606,  0.0160, -0.3601,  0.5592,  0.2872,  1.0083,  1.8119,
         1.0083,  1.6391,  1.3969,  1.3638,  1.6214,  1.9991, -0.0809,  2.3108])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.2997, -0.6637, -0.2365, -0.2144,  0.3752, -0.1863,  1.4206, -0.2613,
         1.4206, -0.8819, -1.0345, -0.9597, -0.3349, -0.8413,  0.0979, -0.9182])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5749, -0.0979, -0.1001, -0.3535, -0.3534, -0.4179, -0.8276, -0.7442,
        -0.8276, -0.9133, -0.8047, -0.6936, -0.9262, -0.8018,  0.0904, -0.2263])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4419,  0.6698, -0.0530, -0.2523,  0.1448, -0.2453,  0.2566, -0.3584,
         0.2566, -0.4123, -0.4737, -0.8156, -0.1617, -0.6177,  0.0568, -0.2263])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9501,  0.6608,  1.8259,  1.6503,  1.3241,  0.8360, -0.5079, -0.4497,
        -0.5079,  0.4230,  0.9226,  1.1141,  0.4738,  0.4687,  1.5634,  0.8808])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.7326, -0.5040, -1.1852, -0.8470, -1.0480, -0.6204,  0.6475,  1.3620,
         0.6475,  1.4359,  1.2100,  1.4301,  1.2856,  1.8472, -1.2696, -0.9643])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.4962,  0.8092,  0.4225,  0.0380,  1.1599,  0.7428,  1.1118,  1.2430,
         1.1118,  1.4164,  1.2319,  0.6522,  1.5014,  1.2210,  0.3757,  1.7573])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6272,  0.6449,  0.1219, -0.2755, -0.2966, -0.4639, -1.0252, -0.9860,
        -1.0252, -0.5790, -0.2541, -0.4610, -0.6534, -0.8096,  0.0805,  0.1889])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9054,  0.4308,  0.0092, -0.3270,  0.7516,  0.5803,  1.4549,  2.5954,
         1.4549,  1.6248,  1.1775,  0.9655,  1.6264,  1.8884, -0.4942,  1.9879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.1894,  0.4534,  0.2775, -0.0083, -0.5646, -0.5448, -1.6965, -1.3144,
        -1.6965, -1.5833, -1.3993, -1.2965, -1.8416, -1.4909,  0.2812, -1.0104])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.3932,  0.8337,  0.8886,  0.5118,  0.7931,  0.2246, -0.2150, -0.3793,
        -0.2150,  0.3038,  0.3977, -0.0758,  0.2615, -0.1220,  1.0549,  1.9879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.8789, -2.8466, -1.2152, -0.8479, -1.0399, -0.6198,  2.2336,  2.7218,
         2.2336,  0.9326, -0.0597,  0.4402,  0.9084,  1.1587, -1.2675, -1.2411])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1354,  0.0413, -1.1285, -0.8420, -0.9701, -0.6120,  0.8159,  1.4133,
         0.8159,  1.1266,  0.8978,  0.6584,  0.9590,  0.8483, -1.2087,  0.1889])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.6327,  1.0280,  1.5199,  1.4452,  2.3123,  2.6276,  0.7599,  1.0248,
         0.7599,  1.2780,  1.2383,  0.9428,  1.2411,  1.1910,  2.4434,  4.9401])
tensor([1., 0., 0., 0., 0.])
Epoch: [0][450/616]	Loss 3.1367e+01 (3.1539e+01)	Acc 0.215820 (0.201443)
torch.Size([1024, 16])
tensor([ 0.1815, -0.0460,  0.3383,  0.0231, -0.0627, -0.3399, -0.8499, -0.9052,
        -0.8499, -0.7793, -0.6290, -0.7236, -0.7582, -0.8675,  0.3925, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.1430, -1.1440, -1.0117, -0.8158, -0.7492, -0.5875,  1.5682,  0.4726,
         1.5682,  0.0511, -0.2521, -0.5528,  0.4031, -0.2808, -1.0433, -1.2411])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3779, -0.6898, -1.1348, -0.8432, -0.9981, -0.6172,  0.4534,  0.6356,
         0.4534,  1.1777,  1.1091,  1.4367,  1.1506,  1.3274, -1.2013, -0.2724])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2433,  0.2491, -0.9747, -0.8242, -0.8994, -0.6091, -0.2941, -0.3591,
        -0.2941,  0.7396,  0.9962,  0.6060,  0.6637,  0.2960, -1.0902, -0.6875])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2089,  0.2312, -0.9121, -0.8033, -0.6620, -0.5536,  1.0830,  1.2314,
         1.0830,  1.0436,  0.8095,  0.5947,  1.2085,  1.0929, -0.9356,  0.1428])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.7299,  0.8508,  0.0508, -0.3498,  0.5044,  0.1387,  0.7913,  1.2193,
         0.7913,  1.5950,  1.5317,  1.0589,  1.3227,  0.9751,  0.0346,  2.4031])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.1871, -0.6365,  0.2730, -0.0424, -0.6156, -0.5558, -1.7873, -1.3313,
        -1.7873, -1.6114, -1.4403, -1.2905, -1.9115, -1.4966,  0.2712, -0.9643])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8420, -0.2218,  0.3135, -0.0416, -0.4517, -0.5056, -1.5189, -1.2216,
        -1.5189, -1.2863, -0.9596, -0.9403, -1.4948, -1.2920,  0.2492, -1.0566])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0692,  0.1867, -1.0702, -0.8375, -0.9666, -0.6159, -0.0824, -0.1273,
        -0.0824,  1.0323,  1.3881,  1.2506,  1.0334,  0.8682, -1.1391, -0.0879])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.3982,  0.8836,  0.4096, -0.0653,  0.4129,  0.1111, -0.1257,  0.1772,
        -0.1257,  0.6564,  0.7399,  0.4843,  0.4772,  0.3958,  0.2517,  0.8347])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5902, -0.3301, -1.2392, -0.8496, -1.1248, -0.6249,  0.0366,  0.3542,
         0.0366,  1.1183,  1.2301,  1.5320,  0.9971,  1.2197, -1.3084, -1.1488])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7796,  0.3522, -1.1725, -0.8461, -1.0068, -0.6164,  1.2543,  2.3050,
         1.2543,  1.8511,  1.5369,  1.1698,  1.6289,  1.7450, -1.2515,  0.8808])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2461,  0.7564,  2.0072,  2.2958,  2.0765,  1.8776,  0.0237, -0.0758,
         0.0237,  0.5162,  0.7193,  0.6001,  0.5738,  0.4349,  1.7417,  1.3882])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.7100, -1.2663, -1.2004, -0.8477, -1.1164, -0.6243, -0.8780, -0.5027,
        -0.8780, -0.5209, -0.4087, -0.1687, -0.7155, -0.4072, -1.2070, -1.0566])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1848,  0.7509,  0.9269,  1.0928,  1.0043,  0.2999,  0.0148, -0.6412,
         0.0148, -0.6223, -0.6043, -0.8416, -0.3616, -0.7653,  1.2555,  0.9731])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.3192, -3.5112, -1.2559, -0.8498, -1.1698, -0.6257, -2.0451, -1.1505,
        -2.0451, -1.9865, -2.0308, -1.2780, -2.5139, -1.3144, -1.3104, -1.4256])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.7023, -3.5755, -1.2355, -0.8490, -1.1224, -0.6243, -0.0280,  0.3071,
        -0.0280, -0.6798, -1.1568, -0.2785, -0.7740,  0.2329, -1.2910, -1.1950])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.3961,  0.8111,  0.3070, -0.0161,  1.1377,  0.9052,  1.3557,  1.7644,
         1.3557,  1.2076,  0.9115,  0.6820,  1.4407,  1.5648,  0.3464,  1.4344])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.5042,  0.8204, -0.4858, -0.6659, -0.1505, -0.3436,  0.8510,  1.2231,
         0.8510,  1.5465,  1.4749,  0.9716,  1.2481,  0.8800, -0.4311,  1.3882])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3186,  0.6565,  0.1849, -0.2005, -0.2764, -0.4836, -1.0625, -1.0973,
        -1.0625, -0.7185, -0.4974, -0.8807, -0.7979, -1.0835,  0.0974, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0404,  0.4486,  0.3394,  0.0038, -0.5843, -0.5608, -1.7742, -1.3499,
        -1.7742, -1.5613, -1.2791, -1.2143, -1.8437, -1.5125,  0.3012, -0.7337])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0910,  0.3619,  1.6028,  1.5453,  1.6862,  1.8123,  0.0321,  0.3173,
         0.0321,  0.5774,  0.1996,  0.7538,  0.6334,  1.3478,  1.3446,  0.0966])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.1268,  0.2752,  0.7971,  1.5772,  0.6608,  0.2611, -0.2838, -0.8378,
        -0.2838, -1.5072, -1.5579, -1.3220, -1.3297, -1.1645,  1.5500, -0.0417])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 1.0343, -0.7465, -0.5349, -0.6048, -0.5116, -0.5149, -0.2851, -0.6853,
        -0.2851, -1.0063, -1.1529, -1.0176, -0.9086, -0.9491, -0.4391, -0.3646])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1079,  0.4712,  0.8164,  0.5834, -0.1622, -0.1269, -1.4343, -0.8687,
        -1.4343, -1.2617, -1.2571, -1.0569, -1.5630, -1.0861,  0.3939, -0.3646])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.6935,  0.1384, -0.1134, -0.2034, -0.1288, -0.3587, -0.2555, -0.7539,
        -0.2555, -1.1763, -1.1687, -0.8941, -0.9029, -0.8167,  0.2058, -1.1488])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4827, -0.4737, -0.2559, -0.4165,  0.4037, -0.0215,  1.5794,  0.9811,
         1.5794,  0.3370, -0.1606, -0.0699,  0.8736,  0.7551, -0.1892,  0.0966])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.6155, -1.0273, -1.2085, -0.8484, -1.1113, -0.6245, -0.5279, -0.4143,
        -0.5279,  0.1985,  0.6108,  0.9762,  0.0593,  0.1977, -1.2828, -1.0566])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2628,  0.8103,  0.1014, -0.3448,  0.1510, -0.2266, -0.0716, -0.0869,
        -0.0716,  0.9275,  1.3223,  0.9445,  0.6800,  0.2491,  0.0395,  1.1576])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.0231, -0.5505, -0.1361, -0.0842,  0.1174, -0.3510,  0.4095, -0.8498,
         0.4095, -1.2828, -1.2688, -1.2422, -0.9261, -1.2231,  0.2669, -1.1027])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8921,  0.6981,  1.7942,  2.1059,  2.3115,  2.8950,  0.4404,  0.6241,
         0.4404,  0.6080,  0.2066,  0.4390,  0.1913,  0.2590,  1.7389,  0.8347])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.0109,  0.7159,  0.2106, -0.2081, -0.1137, -0.4138, -0.7801, -0.9005,
        -0.7801, -0.2791,  0.0287, -0.5416, -0.3924, -0.8323,  0.1915,  0.7424])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1285,  0.5754, -0.3593, -0.5958, -0.3639, -0.4736, -0.3058, -0.4262,
        -0.3058,  0.1373,  0.3306, -0.0588,  0.0903, -0.2925, -0.5584,  1.2960])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7153,  0.3462,  1.4064,  1.4219,  1.0226,  0.5347, -0.4704, -0.5804,
        -0.4704, -0.2822, -0.0620,  0.0628, -0.1310, -0.2027,  1.0113,  1.4805])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.9939,  0.7513,  0.3958, -0.0355,  0.9893,  1.0060,  0.8821,  2.0610,
         0.8821,  1.5063,  1.1267,  0.8402,  1.3394,  1.7575,  0.1063,  0.4195])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 4.4113e-01,  9.8455e-02,  3.0375e-01,  6.3538e-04, -1.0239e-01,
        -3.8302e-01, -8.7900e-01, -9.7964e-01, -8.7900e-01, -8.4745e-01,
        -5.2407e-01, -5.6653e-01, -8.4790e-01, -9.5407e-01,  2.9773e-01,
        -1.0566e+00])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.2264, -0.4474, -1.2109, -0.8483, -1.0727, -0.6222,  0.8536,  1.5453,
         0.8536,  1.2999,  1.0080,  1.3698,  1.0926,  1.4630, -1.2955, -0.1340])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.1496, -2.0356, -0.0372, -0.2566, -0.7716, -0.5729, -1.8891, -1.3271,
        -1.8891, -1.8497, -1.7881, -1.3865, -2.2219, -1.5431,  0.1116, -1.1950])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0333,  0.3049,  0.1817, -0.0136, -0.0069, -0.3038, -0.5307, -0.8035,
        -0.5307, -0.9271, -0.8748, -0.9230, -0.7820, -0.8872,  0.0490, -0.1340])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.1777,  0.2914, -0.7548, -0.7284, -0.1544, -0.3018,  2.6604,  3.2169,
         2.6604,  0.8389,  0.3151, -0.0655,  1.3465,  1.2732, -0.5265,  0.0505])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0112,  0.4295, -0.2103, -0.2281,  0.6016, -0.0779,  1.9215,  0.0742,
         1.9215, -0.4828, -0.5770, -1.1294,  0.1806, -0.7125,  0.0715, -0.6875])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9784,  0.6837,  2.0721,  2.4087,  2.6945,  3.5740,  0.4996,  0.7970,
         0.4996,  1.0433,  0.7103,  0.8672,  1.0537,  1.3799,  1.8000,  1.4344])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4393,  0.3098, -1.1617, -0.8459, -1.0458, -0.6215,  0.0848,  0.1611,
         0.0848,  1.2379,  1.6028,  1.7233,  1.1998,  1.1511, -1.2423,  0.4195])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3629,  0.5511,  0.3766, -0.0177, -0.1074, -0.4160, -0.9726, -1.0386,
        -0.9726, -0.6390, -0.3964, -0.8228, -0.6907, -1.0108,  0.3240, -0.2724])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.0581,  0.7134, -0.5056, -0.6877, -0.5154, -0.5432, -0.3932, -0.5866,
        -0.3932,  0.4956,  0.9660,  0.3811,  0.4059, -0.1956, -0.6565,  0.6502])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.0487, -0.8231, -1.2312, -0.8492, -1.0998, -0.6238,  0.8002,  1.4923,
         0.8002,  1.5279,  1.2966,  1.6337,  1.2619,  1.5277, -1.2885, -1.0104])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7347, -0.7369,  0.3355,  0.5952,  1.0293,  1.1673,  1.0905,  0.7116,
         1.0905, -0.9097, -1.2366, -0.8796, -0.5210, -0.3318,  0.7659,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2620,  0.8064, -0.1904, -0.4665,  0.4487,  0.1701,  1.4359,  2.1860,
         1.4359,  1.4711,  0.9747,  0.7483,  1.3265,  1.3081, -0.1959,  1.0192])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4199, -0.5348, -0.0591, -0.1872, -0.4979, -0.5386, -1.2320, -1.2519,
        -1.2320, -1.6026, -1.4256, -1.2760, -1.6698, -1.4435,  0.1144, -1.4717])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8030,  0.6801,  2.0215,  2.1051,  1.8168,  1.9781, -0.2150,  0.0754,
        -0.2150,  0.5757,  0.7404,  1.3932,  0.7130,  1.2962,  1.8056,  0.6502])
tensor([0., 0., 0., 0., 1.])
Epoch: [0][500/616]	Loss 3.2422e+01 (3.1581e+01)	Acc 0.189453 (0.201400)
torch.Size([1024, 16])
tensor([-0.7059,  0.6873,  0.2075, -0.2578,  0.0123, -0.3210, -0.5334, -0.5741,
        -0.5334,  0.2969,  0.7026,  0.4499,  0.3053,  0.0287,  0.0822, -0.0417])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1341,  0.4116,  1.9761,  2.2735,  1.0677,  0.8608, -0.8413, -0.6421,
        -0.8413, -0.4432, -0.4150, -0.3399, -0.5647, -0.4115,  1.5584,  0.7886])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.5525,  0.4134, -1.0220, -0.8307, -0.8783, -0.6015,  0.3671,  0.7044,
         0.3671,  1.3949,  1.6107,  1.2741,  1.0576,  0.8104, -1.1122,  0.3273])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2176,  0.5186, -0.8735, -0.7932, -0.5455, -0.4903,  1.5243,  2.7041,
         1.5243,  1.4190,  0.8495,  0.4473,  1.3244,  1.3721, -0.8512,  0.0044])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3054,  0.5016,  0.0937,  0.0013,  0.3938, -0.2382,  0.4493, -0.6789,
         0.4493, -0.6786, -0.6168, -1.0172, -0.2368, -0.8508,  0.2997, -0.5030])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 2.3261, -5.1978, -1.2673, -0.8499, -1.1676, -0.6256, -1.5040, -0.9307,
        -1.5040, -2.0954, -2.2030, -1.4178, -2.5776, -1.4030, -1.3210, -0.7798])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3284,  0.5228,  0.3547, -0.0034, -0.4006, -0.4988, -1.4620, -1.2192,
        -1.4620, -1.2238, -1.0160, -1.0703, -1.3815, -1.2528,  0.2544, -0.2724])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.1124,  0.2162, -0.6029, -0.6261,  0.1353, -0.1633,  2.6671,  2.1655,
         2.6671,  0.3132, -0.2656, -0.3436,  0.9460,  0.6543, -0.4801,  0.2350])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.2982,  0.4299,  0.0733, -0.2087, -0.6534, -0.5537, -1.7152, -1.2859,
        -1.7152, -1.6077, -1.4266, -1.3039, -1.8983, -1.5050,  0.0826, -1.1950])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3198,  0.2002, -0.3939, -0.6063, -0.2205, -0.3812,  0.2511,  0.2894,
         0.2511,  0.5671,  0.4432,  0.3335,  0.2659,  0.0767, -0.4788, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7036, -1.2053, -1.2483, -0.8498, -1.1258, -0.6249,  0.5191,  1.1130,
         0.5191,  1.2711,  1.1130,  1.9262,  1.1353,  1.8190, -1.2762, -0.1340])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.9028, -2.1799, -1.2419, -0.8495, -1.1348, -0.6250, -0.3595, -0.1202,
        -0.3595, -0.3283, -0.2937,  0.1881, -0.3977,  0.1164, -1.2947, -1.3795])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.8698, -0.3420, -0.0443,  0.0142,  0.0233, -0.3697, -0.0458, -0.9603,
        -0.0458, -1.4057, -1.4493, -1.2638, -1.1575, -1.2695,  0.2742, -0.7798])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0741,  0.3967, -1.0671, -0.8355, -0.8628, -0.5955,  1.1957,  2.1117,
         1.1957,  1.8264,  1.6245,  1.3189,  1.6579,  1.6889, -1.1450, -0.5492])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.6826, -1.4363,  0.0272,  0.2485, -0.0255, -0.2015, -0.3031, -0.8011,
        -0.3031, -1.6876, -1.8162, -1.4068, -1.6699, -1.3362,  0.6359, -0.9643])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4182,  0.6408,  0.1133, -0.0538,  0.1854, -0.3181, -0.0243, -0.8008,
        -0.0243, -0.7039, -0.6117, -1.1001, -0.4348, -0.9916,  0.2482, -0.0417])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5998,  0.2887,  0.0457, -0.2526, -0.8069, -0.5910, -2.0233, -1.3818,
        -2.0233, -1.8309, -1.6744, -1.3998, -2.2252, -1.5977,  0.0837, -1.2411])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0596,  0.3821,  0.1406, -0.2047, -0.2098, -0.4429, -0.8737, -0.9832,
        -0.8737, -0.6819, -0.3553, -0.6029, -0.7185, -0.9761,  0.0897, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6215, -0.3011, -1.1958, -0.8478, -1.0650, -0.6217,  0.5225,  1.2117,
         0.5225,  1.5181,  1.3759,  1.7345,  1.2969,  1.7510, -1.2627, -0.7337])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2507,  0.5841,  0.2180, -0.1739, -0.3748, -0.5236, -1.2893, -1.2173,
        -1.2893, -0.9408, -0.6411, -0.9787, -1.0695, -1.2514,  0.1161, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.9255, -1.7065, -1.2099, -0.8483, -1.1168, -0.6244, -0.6757, -0.3743,
        -0.6757, -0.2892, -0.1549,  0.4647, -0.2186,  0.2823, -1.2749, -1.3333])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.8716, -0.6313, -0.0597, -0.2724,  0.1077, -0.2330,  0.1866, -0.2815,
         0.1866, -0.3864, -0.4027, -0.4204, -0.1980, -0.5072,  0.1054, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.9369,  0.7201,  0.3526, -0.0372,  0.4639,  0.0993,  0.0572,  0.0941,
         0.0572,  0.3851,  0.5247,  0.2268,  0.3826,  0.0318,  0.3203,  0.8808])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.6215, -3.9244, -1.2585, -0.8496, -1.1459, -0.6255, -0.1175, -0.7875,
        -0.1175, -1.4535, -1.5570, -1.1532, -1.3173, -1.0978, -1.3185,  0.0966])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6945,  0.6375, -0.1331, -0.2909,  0.3319, -0.2054,  0.9350, -0.1543,
         0.9350, -0.1924, -0.2782, -0.7913,  0.1856, -0.5555, -0.0546,  0.5118])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3487,  0.5322,  0.3913,  0.0875, -0.5573, -0.4572, -1.7605, -1.1665,
        -1.7605, -1.5929, -1.5248, -1.2985, -1.9564, -1.4109,  0.2828, -0.2263])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.1296,  0.4056,  0.0661, -0.1936, -0.5000, -0.5351, -1.3834, -1.2402,
        -1.3834, -1.3933, -1.1849, -1.1119, -1.5346, -1.3676,  0.0899, -0.8721])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.5089, -1.1593, -0.0709, -0.0049, -0.0705, -0.3228, -0.2069, -0.8503,
        -0.2069, -1.5027, -1.6279, -1.3214, -1.3789, -1.2543,  0.4226, -1.0104])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.9710, -1.2178, -1.2287, -0.8492, -1.1148, -0.6245,  0.0175,  0.4336,
         0.0175,  0.8590,  1.1159,  1.9677,  0.8816,  1.6138, -1.2903, -1.1950])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7698, -0.4244, -0.3748, -0.4517, -0.1421, -0.3720,  0.4338, -0.3580,
         0.4338, -0.8551, -1.0066, -0.8942, -0.4607, -0.6665, -0.1879, -0.3646])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5588,  0.1120, -0.8841, -0.7792, -0.3589, -0.4332,  2.9486,  3.3007,
         2.9486,  0.9690,  0.3446, -0.0754,  1.4686,  1.0815, -0.8537,  1.4344])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3415, -0.5941, -1.2184, -0.8488, -1.1104, -0.6242, -0.1964,  0.1524,
        -0.1964,  0.4539,  0.6301,  0.8403,  0.2019,  0.3870, -1.2953, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3501,  0.5453,  0.1269, -0.2144, -0.2753, -0.4653, -0.9881, -1.0378,
        -0.9881, -0.8002, -0.5206, -0.7039, -0.8138, -0.9761,  0.0627, -0.3185])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.3527, -0.4001, -1.1647, -0.8452, -0.9860, -0.6135,  1.4737,  2.6780,
         1.4737,  1.7217,  1.1178,  1.0727,  1.5445,  1.9056, -1.2564,  0.5118])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.9857, -0.1483, -1.1915, -0.8466, -1.0069, -0.6150,  1.9984,  3.5366,
         1.9984,  1.3021,  0.4281,  0.4289,  1.1040,  1.2911, -1.2112, -1.2411])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5145,  0.6308,  1.8258,  2.1170,  2.1528,  2.2781,  0.2603,  0.2481,
         0.2603,  0.5100,  0.1048,  0.1164,  0.3726,  0.4159,  1.7759,  0.1889])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.6661, -0.0420,  0.2061, -0.0099,  0.2027, -0.0985, -0.1644, -0.3738,
        -0.1644, -0.5914, -0.4855, -0.2384, -0.3738, -0.3736,  0.2863, -0.5492])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.7702, -0.0511, -0.0224, -0.0213, -0.1138, -0.3365, -0.4053, -0.8671,
        -0.4053, -1.4315, -1.4838, -1.2789, -1.3372, -1.2528,  0.2715, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2439,  0.3514,  0.1078, -0.0426,  0.3990, -0.0969,  0.4270, -0.3254,
         0.4270, -0.4786, -0.4540, -0.4511, -0.0786, -0.4375,  0.2720,  0.2812])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0654,  0.3845,  1.5534,  2.0204,  2.5249,  3.9286,  0.9336,  1.3244,
         0.9336,  0.4286, -0.3892,  0.0474,  0.4246,  1.1427,  1.7155, -0.1801])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.4492,  0.5069,  0.5344,  0.1703,  0.4931,  0.1456, -0.1834, -0.1466,
        -0.1834,  0.0713,  0.1893,  0.5504,  0.3442,  0.6436,  0.4192,  0.6963])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.1276,  0.5533,  0.0999, -0.2679, -0.3596, -0.5163, -1.1274, -1.1520,
        -1.1274, -0.8079, -0.4205, -0.7877, -0.8764, -1.1423,  0.1004, -0.5492])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5820,  0.3878,  1.0803,  1.2874,  1.0523,  0.2674, -0.1103, -0.7449,
        -0.1103, -0.5992, -0.5676, -0.9229, -0.4106, -0.9028,  1.3695,  0.9731])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.5969,  0.1272,  0.1484, -0.1807, -0.6454, -0.5461, -1.7571, -1.2740,
        -1.7571, -1.5531, -1.4225, -1.2905, -1.8828, -1.4641,  0.1105, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.6655, -0.7494, -1.2267, -0.8489, -1.0949, -0.6233,  0.7715,  1.4625,
         0.7715,  0.8691,  0.2409,  0.4996,  0.6362,  0.9544, -1.2992, -0.6414])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.3590, -2.0030, -1.1227, -0.8401, -0.9385, -0.6066,  1.2226,  1.7978,
         1.2226,  0.7560,  0.3515,  0.6918,  0.9205,  1.1681, -1.1776, -0.7337])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.0930,  0.3077, -0.3611, -0.5899, -0.1315, -0.3863,  0.4184,  0.1432,
         0.4184,  0.7667,  0.7123,  0.2592,  0.8898,  0.4597, -0.5642, -0.6875])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.7857, -0.2403, -0.5940, -0.6778, -0.5923, -0.5348, -0.4035, -0.5512,
        -0.4035, -0.5959, -0.6228, -0.6195, -0.5501, -0.6313, -0.6289, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.4314,  0.4072,  0.1409, -0.0950,  0.9130,  0.6367,  1.3874,  1.4746,
         1.3874,  0.6180,  0.1181,  0.3075,  1.0475,  1.2907,  0.2347,  0.8347])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.7281,  0.6832,  2.2962,  2.6763,  1.7582,  1.6006, -0.4623, -0.3669,
        -0.4623,  0.2094,  0.4675,  0.8616,  0.0486,  0.1516,  1.7955,  0.1428])
tensor([0., 0., 0., 0., 1.])
Epoch: [0][550/616]	Loss 3.1836e+01 (3.1629e+01)	Acc 0.204102 (0.201035)
torch.Size([1024, 16])
tensor([-0.1651,  0.4926, -0.7101, -0.7641, -0.6543, -0.5676, -0.2289, -0.2901,
        -0.2289,  0.8759,  1.4224,  1.0680,  0.7599,  0.3232, -0.8223, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.3142,  0.2484,  0.0498,  0.0164,  0.1287, -0.2967, -0.0138, -0.8126,
        -0.0138, -1.1229, -1.1189, -1.0648, -0.8163, -1.0092,  0.2877, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.9259, -1.8719, -1.2094, -0.8480, -1.1106, -0.6239, -0.4777, -0.0750,
        -0.4777, -0.4096, -0.5590,  0.0194, -0.3418,  0.4430, -1.2718, -0.9182])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.5812, -0.4567,  0.0499,  0.0014, -0.0077, -0.3964, -0.3074, -1.0078,
        -0.3074, -1.2353, -1.2678, -1.1832, -1.0537, -1.2425,  0.2960, -0.3185])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0825,  0.1116, -1.1882, -0.8475, -1.0662, -0.6224,  0.2537,  0.5319,
         0.2537,  1.4290,  1.7484,  1.6136,  1.0954,  0.9089, -1.2085, -0.5030])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 6.1248e-01,  1.0827e-04, -1.0022e+00, -8.2216e-01, -8.3214e-01,
        -5.9791e-01,  6.0726e-01,  2.6169e-01,  6.0726e-01,  4.9109e-01,
         4.4241e-01,  2.4767e-01,  7.9051e-01,  5.9392e-01, -1.0588e+00,
        -1.1488e+00])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.2970, -1.2367, -0.6586, -0.6380, -0.0276, -0.2794,  2.4072,  1.4026,
         2.4072, -0.2429, -0.8606, -0.6769,  0.3852,  0.2027, -0.5408, -0.4108])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-8.4902e-01,  6.4246e-01, -5.6005e-02, -1.8241e-01,  1.0767e+00,
         9.2712e-01,  2.4390e+00,  2.6316e+00,  2.4390e+00,  5.0963e-01,
        -1.5288e-02, -3.2553e-01,  9.3896e-01,  6.0651e-01, -3.0138e-04,
         1.4344e+00])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2103, -0.3516, -1.2401, -0.8496, -1.1224, -0.6250,  0.2065,  0.2121,
         0.2065,  0.9314,  0.9784,  0.9682,  0.7201,  0.6045, -1.2964,  0.5579])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.9750,  0.9187,  1.6904,  1.5258,  2.0398,  2.1697,  0.2909,  0.5984,
         0.2909,  1.2197,  1.2000,  1.1846,  0.9615,  0.9818,  1.8486,  3.1873])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.3124, -2.2599, -1.2398, -0.8493, -1.1071, -0.6240,  0.9874,  1.4651,
         0.9874,  0.5067, -0.4082,  0.2207,  0.1991,  0.9023, -1.2953, -1.5640])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 6.7024e-01,  2.5887e-04, -1.1252e+00, -8.3932e-01, -8.7916e-01,
        -6.0161e-01,  2.2886e+00,  2.3754e+00,  2.2886e+00,  1.0571e+00,
         4.8563e-01, -4.9356e-02,  1.2659e+00,  9.4797e-01, -1.1375e+00,
        -9.6432e-01])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5593,  0.6227, -0.7790, -0.7770, -0.6584, -0.5518,  0.0952,  0.3013,
         0.0952,  0.8238,  0.9870,  0.8718,  0.8159,  0.8028, -0.7942, -0.1340])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1380,  0.1624, -1.1721, -0.8465, -1.0493, -0.6212,  0.2487,  0.6047,
         0.2487,  1.3792,  1.5628,  1.8026,  1.3099,  1.5798, -1.2319, -0.2724])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.1082,  0.3140, -0.9239, -0.8115, -0.8174, -0.5983, -0.0021, -0.2337,
        -0.0021,  0.5976,  0.7892,  0.4043,  0.5967,  0.1033, -1.0045, -1.1027])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.4272, -0.9234, -1.1861, -0.8469, -1.0783, -0.6218, -0.1268,  0.5221,
        -0.1268,  0.3270,  0.1438,  0.3324,  0.0074,  0.2040, -1.2536, -1.0104])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.2846,  0.7903,  1.9345,  2.0148,  1.4334,  1.0998, -0.4882, -0.4183,
        -0.4882,  0.1611,  0.3470,  0.3307,  0.1345,  0.1592,  1.5498,  1.5728])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.1464, -0.6007, -1.0666, -0.8304, -0.7853, -0.5807,  2.1656,  2.5081,
         2.1656,  0.9803,  0.4603,  0.1585,  1.2962,  1.0185, -1.1130,  0.2350])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7548,  0.7660,  0.0901, -0.2307,  0.0077, -0.3915, -0.3484, -0.8154,
        -0.3484, -0.2910, -0.1220, -0.6897, -0.1693, -0.7571,  0.1165, -0.2263])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1907,  0.4883, -0.1639, -0.0942,  0.1200, -0.3506,  0.4958, -0.8404,
         0.4958, -1.3158, -1.3245, -1.3393, -0.9442, -1.2344,  0.2548, -0.2263])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.1706,  0.2664,  0.1001, -0.0117, -0.1175, -0.4296, -0.6257, -1.0706,
        -0.6257, -1.2378, -1.1631, -1.2851, -1.1343, -1.2889,  0.2969, -0.5953])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.6910,  0.1005, -0.0239, -0.2307, -0.5423, -0.5461, -1.3773, -1.2572,
        -1.3773, -1.5149, -1.3714, -1.2475, -1.6313, -1.4027,  0.1567, -1.0566])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.2974,  0.4178,  1.3980,  2.1674,  1.8074,  1.5517,  0.3799, -0.2071,
         0.3799, -0.5500, -0.6085, -0.3096, -0.0875, -0.1281,  1.7367,  0.4195])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.0404,  0.2559, -0.8484, -0.7903, -0.7649, -0.5853, -0.1396, -0.2930,
        -0.1396,  0.1693,  0.1708, -0.1038,  0.1793, -0.1133, -0.9233, -0.0879])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2467,  0.4752,  0.1053, -0.0391,  0.2132, -0.3437,  0.0490, -0.8692,
         0.0490, -0.7375, -0.7523, -1.0756, -0.4496, -1.0390,  0.2879, -0.3646])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2734,  0.5630,  0.2908,  0.0178, -0.4678, -0.5246, -1.5296, -1.2785,
        -1.5296, -1.4665, -1.2959, -1.2400, -1.6244, -1.3901,  0.2942, -0.4108])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.0441,  0.4022,  0.2218, -0.0142,  0.0290,  0.0093, -0.5231, -0.1399,
        -0.5231, -0.7857, -0.9118, -0.9046, -0.9072, -0.7582,  0.3074,  0.1428])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-1.7236,  0.9052, -0.4149, -0.6546, -0.2905, -0.4167,  0.0946,  0.4065,
         0.0946,  1.2821,  1.5256,  1.0710,  1.0223,  0.7569, -0.7788,  1.2499])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4752,  0.5435,  1.1902,  1.0363,  0.1329, -0.2211, -1.3007, -1.1049,
        -1.3007, -1.0295, -0.9120, -1.0523, -1.2404, -1.2015,  0.6016, -0.1801])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-0.7285,  0.4674, -0.1159, -0.4445, -0.1985, -0.4296, -0.4210, -0.6289,
        -0.4210, -0.0009,  0.3115, -0.0828,  0.0047, -0.4481, -0.1698,  0.6041])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 0.4934,  0.1595, -0.2480, -0.1529, -0.0204, -0.3696,  0.3749, -0.8345,
         0.3749, -1.4815, -1.5247, -1.3488, -1.1277, -1.1799,  0.0991, -0.9643])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1347,  0.7491,  0.4134, -0.0821,  0.1985, -0.2491, -0.4949, -0.6167,
        -0.4949,  0.3316,  0.7721,  0.2633,  0.2245, -0.2666,  0.1904,  0.8808])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8783,  0.4070, -1.0454, -0.8345, -0.8974, -0.6015,  0.4449,  1.2233,
         0.4449,  1.7054,  1.6886,  1.7126,  1.4743,  1.8386, -1.1178,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0575,  0.7088,  0.6335,  0.3370,  1.2563,  0.8237,  0.8254,  0.6767,
         0.8254,  0.8228,  0.4621,  0.1533,  0.6986,  0.3697,  0.7165,  1.5266])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.5804, -3.7477, -1.2502, -0.8493, -1.1098, -0.6243,  1.6833,  0.8495,
         1.6833, -0.5992, -1.2195, -0.7462, -0.0266,  0.2852, -1.2919, -1.0104])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1343,  0.4223,  0.4983,  0.5987,  0.7834,  0.7681,  0.3381,  0.2185,
         0.3381, -0.7947, -0.9608, -0.7057, -0.4148, -0.0399,  0.7575,  0.4195])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.8374, -2.3033, -1.2364, -0.8493, -1.1322, -0.6250, -0.4628, -0.3434,
        -0.4628, -0.3853, -0.2831,  0.4183, -0.3629,  0.0934, -1.3039, -1.2872])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 2.9311, -5.0306, -1.2560, -0.8494, -1.0894, -0.6226,  3.8292,  4.1258,
         3.8292, -0.3165, -1.3063, -0.3963, -0.0616,  0.8420, -1.2642, -1.3333])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.5932,  0.7288,  0.0501, -0.1700, -0.0812, -0.3654, -0.4658, -0.8071,
        -0.4658, -0.8309, -0.6907, -1.0402, -0.7291, -1.0332,  0.1154, -0.5030])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-3.9213e-01,  4.5616e-01,  2.3926e-01, -2.4627e-04,  4.4905e-01,
        -3.7024e-02,  2.4243e-01, -2.5848e-01,  2.4243e-01, -1.8581e-01,
        -3.9429e-01, -5.3468e-01, -1.9296e-03, -3.2277e-01,  3.6310e-01,
         1.8890e-01])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.0493,  0.4074,  0.1163, -0.2272, -0.4574, -0.4967, -1.3475, -1.1180,
        -1.3475, -1.1261, -1.0370, -1.1136, -1.3589, -1.2519,  0.0766, -0.6414])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0228,  0.6831,  2.1923,  2.2773,  1.8079,  1.7437, -0.3506, -0.1433,
        -0.3506,  0.6146,  0.9666,  1.5476,  0.6977,  1.0977,  1.7587,  0.8808])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.3023,  0.2301,  0.2597, -0.0258, -0.2674, -0.4237, -1.1308, -1.0509,
        -1.1308, -1.1164, -1.0415, -0.9918, -1.2064, -1.0921,  0.2641, -0.6875])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 0.7316, -0.6184, -1.1861, -0.8472, -1.0603, -0.6216,  0.3504,  0.8145,
         0.3504,  1.2232,  1.2071,  1.7489,  1.2218,  1.9611, -1.2712, -0.5953])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-1.0242,  0.6925, -0.4043, -0.6427, -0.3348, -0.4238, -0.0838,  0.2373,
        -0.0838,  0.8659,  1.0688,  0.7729,  0.6581,  0.4224, -0.5949,  0.3734])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([ 2.6171, -3.1940, -1.2172, -0.8481, -1.1364, -0.6248, -1.1970, -0.7751,
        -1.1970, -1.3790, -1.5166, -1.0213, -1.6738, -1.0237, -1.2641, -1.6101])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6789,  0.6374,  0.3320, -0.0590, -0.3464, -0.5088, -1.3465, -1.2229,
        -1.3465, -1.0261, -0.8215, -1.1086, -1.1719, -1.2860,  0.3375,  0.0966])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.2309,  0.6007,  2.0545,  2.1707,  1.7726,  1.8020, -0.2790, -0.0618,
        -0.2790,  0.4901,  0.4430,  0.9490,  0.5567,  1.0923,  1.4907, -0.6414])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 2.2725, -2.2114, -0.0383, -0.1800, -0.6439, -0.5679, -1.5944, -1.3319,
        -1.5944, -1.7874, -1.7725, -1.4283, -1.9951, -1.5393,  0.0192, -1.7024])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.8802,  0.6617,  2.0567,  2.3049,  1.0804,  0.6185, -0.8781, -0.7865,
        -0.8781, -0.3598, -0.0754, -0.3358, -0.4389, -0.6065,  1.7475,  0.9731])
tensor([0., 0., 0., 0., 1.])
Epoch: [0][600/616]	Loss 3.0742e+01 (3.1655e+01)	Acc 0.231445 (0.201052)
torch.Size([1024, 16])
tensor([-0.7454,  0.4539,  0.8599,  0.5394,  0.5655,  0.2163, -0.4858, -0.4119,
        -0.4858, -0.1601,  0.0427,  0.1618, -0.1071, -0.0180, -0.1413,  1.0653])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.0664, -0.7615, -1.2256, -0.8491, -1.1091, -0.6244,  0.1265,  0.4645,
         0.1265,  1.1087,  1.1179,  1.6841,  0.9984,  1.5681, -1.2789, -1.5179])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([ 1.5126, -1.0332, -1.2119, -0.8484, -1.0787, -0.6230,  0.6961,  0.9657,
         0.6961,  1.2321,  1.0119,  1.4140,  1.1125,  1.3583, -1.2789, -1.4717])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.4861,  0.8920, -0.2109, -0.4667,  0.3602, -0.0102,  1.2801,  1.3559,
         1.2801,  1.1185,  0.8910,  0.4065,  1.3060,  1.0015, -0.1388,  1.3882])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0454,  0.4285, -0.6759, -0.6659, -0.2967, -0.4719,  1.2975, -0.0074,
         1.2975, -0.4790, -0.5766, -0.8597,  0.0856, -0.5060, -0.6236, -0.4569])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1626,  0.8204,  0.6254,  0.2442,  0.1442, -0.2154, -0.8342, -0.8208,
        -0.8342, -0.4864, -0.2329, -0.5956, -0.5566, -0.7948,  0.6744,  1.1576])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1654,  0.8341,  0.1465, -0.1528,  0.5003, -0.1162,  0.5427, -0.1911,
         0.5427,  0.3410,  0.3232, -0.4373,  0.4905, -0.3085,  0.1410,  0.6041])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.1984,  0.5798,  0.0384, -0.2358, -0.2346, -0.4866, -0.7779, -1.0838,
        -0.7779, -0.8568, -0.5961, -1.0440, -0.8373, -1.2063,  0.0941, -0.8721])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-5.5766e-01,  6.7887e-01,  1.8434e+00,  1.9863e+00,  1.7652e+00,
         1.7514e+00, -1.1435e-01, -8.7100e-04, -1.1435e-01,  3.7695e-01,
         1.7756e-01,  5.5815e-01,  4.3472e-01,  8.2455e-01,  1.6659e+00,
         2.3502e-01])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([-1.1691,  0.4876,  1.7395,  1.4964,  1.6443,  1.4988, -0.1366,  0.1183,
        -0.1366,  0.9327,  1.3465,  1.5315,  0.9097,  1.0362,  1.5961,  2.3108])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9022, -0.2265, -0.2387, -0.1836,  0.2560, -0.1483,  1.1032, -0.2167,
         1.1032, -1.1179, -1.3023, -1.1789, -0.6229, -0.8975,  0.1198, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6112,  0.4045, -0.7482, -0.7293, -0.3672, -0.4751,  1.4700,  0.7185,
         1.4700,  0.2364,  0.0453, -0.4449,  0.6961,  0.0741, -0.4164,  1.5266])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-2.5498,  1.0049,  2.2522,  2.4315,  2.5368,  2.9951,  0.2020,  0.4689,
         0.2020,  1.2346,  1.3299,  1.4418,  1.1922,  1.4571,  4.7669,  5.4937])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-0.7408,  0.7145, -0.2639, -0.4578,  0.2336, -0.2237,  1.1364,  0.3285,
         1.1364,  0.3980,  0.2334, -0.4086,  0.6907, -0.0639,  0.0883,  0.6963])
tensor([0., 0., 1., 0., 0.])
torch.Size([240, 16])
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 0: 31.665511493372723
Testing of Epoch 0: 0.20135833333333333
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
torch.Size([1024, 16])
tensor([ 1.4924, -1.5620,  0.1895,  0.5042,  0.5392, -0.0501,  0.5210, -0.7322,
         0.5210, -1.3765, -1.5648, -1.2880, -1.0133, -1.1237,  0.8531, -0.7337])
tensor([0., 1., 0., 0., 0.])
Epoch: [1][  0/616]	Loss 3.1758e+01 (3.1758e+01)	Acc 0.206055 (0.206055)
torch.Size([1024, 16])
tensor([-0.0543,  0.2830, -1.1260, -0.8427, -0.9732, -0.6145,  0.7086,  1.1263,
         0.7086,  1.7247,  1.7626,  1.6236,  1.5784,  1.5193, -1.0951, -0.2724])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.6591,  0.8619,  2.2339,  2.3915,  2.5571,  3.1056,  0.2344,  0.5534,
         0.2344,  1.2858,  1.3928,  1.4348,  1.0903,  1.1590,  1.9005,  2.2647])
tensor([1., 0., 0., 0., 0.])
torch.Size([1024, 16])
tensor([ 1.5232, -0.7014, -1.2072, -0.8484, -1.0923, -0.6234,  0.0604,  0.6090,
         0.0604,  1.1861,  1.3892,  2.2144,  1.1280,  2.0078, -1.2794, -1.3333])
tensor([0., 1., 0., 0., 0.])
torch.Size([1024, 16])
tensor([-1.1595,  0.7067,  0.4032, -0.0274,  0.5143,  0.2268,  0.0571,  0.3496,
         0.0571,  0.6046,  0.5714,  0.4925,  0.4317,  0.4501,  0.1738,  1.4344])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.3762,  0.3594, -0.0340, -0.3444, -0.7069, -0.5888, -1.7431, -1.3554,
        -1.7431, -1.5252, -1.3595, -1.3665, -1.8072, -1.5401,  0.0744, -1.0566])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.4887,  0.6052,  0.0516, -0.3278,  0.2133, -0.1335,  0.1640,  0.1830,
         0.1640,  0.6733,  0.4640,  0.5359,  0.4258,  0.3666,  0.2885,  0.1428])
tensor([0., 0., 0., 1., 0.])
torch.Size([1024, 16])
tensor([-0.8719,  0.4951, -0.2192, -0.5421, -0.3052, -0.4434, -0.4764, -0.4370,
        -0.4764,  0.3051,  0.6012,  0.5504,  0.3668,  0.3411, -0.4599,  0.5118])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.0536,  0.5199,  0.1469, -0.1973, -0.3255, -0.4175, -1.1144, -0.9199,
        -1.1144, -0.9152, -0.7672, -0.8322, -1.0455, -1.0030,  0.0457, -0.4108])
tensor([0., 0., 0., 0., 1.])
torch.Size([1024, 16])
tensor([ 0.9171, -0.4756, -1.1583, -0.8454, -1.0410, -0.6205,  0.1117,  0.3973,
         0.1117,  1.0311,  0.9800,  1.2845,  0.9038,  1.2723, -1.1615, -0.7798])
tensor([0., 0., 1., 0., 0.])
torch.Size([1024, 16])
tensor([-0.6903,  0.6402,  1.6598,  1.8463,  2.2346,  3.0849,  0.5139,  0.9517,
         0.5139,  0.6927,  0.0300,  0.1707,  0.6128,  1.1838,  1.2630,  0.3273])
tensor([0., 0., 0., 0., 1.])
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
tensor([ 1.0632, -1.6971, -1.2566, -0.8498, -1.1474, -0.6253, -0.3650,  0.0163,
        -0.3650, -0.7701, -1.0710, -0.5632, -0.8180, -0.1931, -1.3171, -0.3185])
tensor([0., 1., 0., 0., 0.])
Epoch: [0][  0/616]	Loss 5.0093e-01 (5.0093e-01)	Acc 0.204102 (0.204102)
tensor([ 2.0158, -2.5502, -0.0409, -0.0383,  0.0783, -0.3008,  0.0735, -0.7761,
         0.0735, -1.2320, -1.3476, -1.1235, -0.9248, -1.0301,  0.3776, -0.8259])
tensor([0., 0., 0., 1., 0.])
tensor([-1.5221,  0.9170,  2.0268,  2.3547,  2.8455,  3.9594,  0.6764,  1.0483,
         0.6764,  1.1748,  0.8704,  0.6525,  0.9189,  0.7749,  1.6710,  1.2037])
tensor([0., 0., 0., 0., 1.])
tensor([ 2.6679, -4.5106, -1.2651, -0.8499, -1.1559, -0.6254, -0.4849,  0.0288,
        -0.4849, -1.5141, -1.7863, -0.8477, -1.9004, -0.7790, -1.3198, -1.4717])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0386,  0.0418, -1.1553, -0.8455, -1.0194, -0.6189,  0.4970,  1.0082,
         0.4970,  1.9039,  2.0569,  2.4102,  1.6599,  1.9068, -1.2141, -0.5492])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4317, -0.6327, -1.2207, -0.8489, -1.0991, -0.6240,  0.3203,  0.5564,
         0.3203,  1.0507,  1.1501,  1.3409,  0.9169,  0.9176, -1.2973, -0.4569])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1798,  0.0511, -0.0418, -0.2241, -0.0920, -0.3984, -0.3174, -0.8419,
        -0.3174, -0.8763, -0.8744, -0.9505, -0.7170, -0.9492,  0.0609,  0.0966])
tensor([0., 0., 1., 0., 0.])
tensor([ 2.5005, -4.2874, -1.2335, -0.8484, -1.0951, -0.6235,  1.1577,  0.5085,
         1.1577, -0.7469, -1.0553, -0.4598, -0.1796,  0.1119, -1.2755, -1.2411])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.8918, -0.6420, -1.1258, -0.8424, -0.9733, -0.6139,  0.7022,  1.1479,
         0.7022,  1.4683,  1.2346,  1.4547,  1.4148,  1.7394, -1.1953, -0.9643])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.5242, -1.5843, -1.1351, -0.8385, -0.8676, -0.5974,  2.8127,  2.7296,
         2.8127,  0.4403, -0.4477, -0.3954,  0.8976,  0.7824, -1.1535, -0.9182])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.1358, -0.5227, -0.1651, -0.3771, -0.6877, -0.5710, -1.5679, -1.2798,
        -1.5679, -1.6015, -1.5447, -1.3685, -1.8139, -1.4772,  0.1274, -1.3333])
tensor([0., 0., 1., 0., 0.])
tensor([-1.4608,  0.8385,  2.6178,  3.3539,  2.4615,  3.2767, -0.1369,  0.1589,
        -0.1369,  0.5657,  0.5168,  1.1331,  0.5062,  1.0390,  2.6030,  1.5266])
tensor([0., 0., 0., 0., 1.])
tensor([-1.2171,  0.7215,  0.2924, -0.1747,  0.4026, -0.0120,  0.0549,  0.1237,
         0.0549,  0.9090,  1.1467,  0.8689,  0.6108,  0.3188,  0.0882,  0.6041])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.5425, -0.0063,  0.0903, -0.1353, -0.3047, -0.4406, -1.0010, -1.0262,
        -1.0010, -1.1967, -1.0879, -0.9770, -1.1604, -1.0597,  0.2585, -0.5492])
tensor([0., 0., 0., 1., 0.])
tensor([-0.3994,  0.6314,  1.8635,  2.3451,  0.8357,  0.3889, -0.9829, -0.9225,
        -0.9829, -0.8427, -0.8426, -0.8835, -1.0316, -0.9767,  1.8229, -0.1801])
tensor([0., 0., 0., 0., 1.])
tensor([-0.0430,  0.1037, -1.0988, -0.8407, -0.9596, -0.6127,  0.4188,  0.8936,
         0.4188,  1.7303,  1.9339,  2.0308,  1.4773,  1.6240, -1.1237,  0.0966])
tensor([1., 0., 0., 0., 0.])
tensor([-0.3636,  0.5862, -1.0410, -0.8338, -0.9466, -0.6135, -0.1708, -0.1833,
        -0.1708,  0.8471,  1.1480,  0.6697,  0.6720,  0.2535, -1.1420, -0.5953])
tensor([0., 1., 0., 0., 0.])
tensor([-1.5327e+00,  8.0154e-01,  1.3151e-01, -2.9732e-01,  2.1594e-01,
        -1.1011e-01,  1.7702e-03,  1.6614e-01,  1.7702e-03,  7.7800e-01,
         8.2129e-01,  5.4656e-01,  6.2314e-01,  4.1364e-01, -9.0053e-03,
         2.1263e+00])
tensor([1., 0., 0., 0., 0.])
tensor([-1.0161,  0.8302,  0.3665, -0.0359, -0.2029, -0.4279, -1.1276, -1.0546,
        -1.1276, -0.7703, -0.5949, -1.0218, -0.9361, -1.1673,  0.3162, -0.2263])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.0812,  0.2645, -0.0574, -0.3371, -0.2186, -0.4486, -0.5816, -0.8737,
        -0.5816, -0.6098, -0.5030, -0.7103, -0.4614, -0.7464, -0.1064, -0.4569])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.0597,  0.4431,  0.3031, -0.0454, -0.4280, -0.4847, -1.4676, -1.1744,
        -1.4676, -1.2534, -1.1667, -1.1915, -1.5347, -1.3315,  0.2559, -0.6414])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.1533,  0.0142,  0.2257, -0.0817,  0.1241, -0.2716, -0.3481, -0.6688,
        -0.3481, -0.3851, -0.2650, -0.5983, -0.2551, -0.6345,  0.1333, -0.1801])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.6786, -0.6234, -1.2252, -0.8487, -1.0688, -0.6221,  1.7635,  2.2247,
         1.7635,  1.0906,  0.3505,  0.1493,  1.0878,  0.9689, -1.2836, -0.5953])
tensor([0., 0., 0., 1., 0.])
tensor([-0.2504,  0.3409, -0.9570, -0.8213, -0.8736, -0.6046, -0.2065, -0.1947,
        -0.2065,  0.8686,  1.2185,  1.0065,  0.7872,  0.5829, -1.0660, -0.3646])
tensor([0., 0., 1., 0., 0.])
tensor([-1.5010,  0.8753, -0.5281, -0.6987, -0.2606, -0.3893,  0.6388,  1.2747,
         0.6388,  1.8556,  1.9337,  1.7217,  1.6133,  1.7324, -0.6877,  0.7886])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.4081,  0.2712,  0.0430, -0.0297,  0.0122, -0.2750, -0.2513, -0.7279,
        -0.2513, -1.1525, -1.1178, -1.0381, -0.9030, -0.8996,  0.2915, -0.6875])
tensor([0., 0., 0., 1., 0.])
tensor([ 8.3437e-01, -2.7880e-01, -1.1673e-02,  5.6064e-04, -1.4484e-01,
        -4.4100e-01, -4.9548e-01, -1.1002e+00, -4.9548e-01, -1.4867e+00,
        -1.5140e+00, -1.3754e+00, -1.4019e+00, -1.3959e+00,  2.9326e-01,
        -8.7206e-01])
tensor([0., 0., 0., 1., 0.])
tensor([-0.4080,  0.3937,  2.0779,  2.4836,  2.1876,  1.9764,  0.0592, -0.1027,
         0.0592,  0.4827,  0.3774,  0.2695,  0.3420,  0.1471,  1.6790,  0.5118])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.2529,  0.4267,  0.1513, -0.0324, -0.3990, -0.5479, -1.2665, -1.3162,
        -1.2665, -1.4693, -1.3404, -1.3958, -1.5542, -1.5237,  0.2116, -1.0566])
tensor([0., 0., 0., 1., 0.])
tensor([ 3.5434e-01,  2.8014e-01,  1.9837e-06, -2.2487e-01, -3.2298e-01,
        -4.6343e-01, -9.1432e-01, -1.0252e+00, -9.1432e-01, -1.1356e+00,
        -1.0266e+00, -1.0251e+00, -1.1176e+00, -1.1092e+00,  1.3620e-01,
        -8.7206e-01])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.4154, -0.8062, -1.1909, -0.8473, -1.0453, -0.6203,  0.9118,  1.6248,
         0.9118,  1.5633,  1.3121,  1.6113,  1.4821,  1.8919, -1.2088,  0.1889])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.2252, -0.8334, -1.1772, -0.8457, -1.0121, -0.6179,  1.2873,  1.4536,
         1.2873,  0.9485,  0.4765,  0.5127,  1.0435,  1.0577, -1.2189, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.8110, -1.9673, -1.2317, -0.8492, -1.1314, -0.6250, -0.6020, -0.3667,
        -0.6020, -0.2709, -0.1201,  0.6229,  0.0137,  0.7465, -1.2850, -1.0566])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.5866,  0.0220, -0.1656, -0.3959, -0.4145, -0.4521, -0.8681, -0.8081,
        -0.8681, -1.0007, -0.9632, -0.8598, -1.0422, -0.9251, -0.1840, -0.8259])
tensor([0., 1., 0., 0., 0.])
tensor([-1.0044,  0.6789,  3.2485,  4.1745,  3.1577,  4.1451, -0.0673,  0.1965,
        -0.0673,  1.2742,  1.7433,  2.6626,  1.2707,  1.7319,  2.6592,  1.4344])
tensor([0., 0., 0., 0., 1.])
tensor([-0.3557,  0.6768, -0.0124, -0.3038, -0.4198, -0.4999, -1.1141, -1.0768,
        -1.1141, -1.0449, -0.8844, -1.0518, -1.1537, -1.2038,  0.0906, -0.4108])
tensor([0., 0., 1., 0., 0.])
tensor([-0.9846,  0.5539,  0.7702,  1.0917,  1.8186,  1.2648,  1.3710,  0.2390,
         1.3710, -0.2662, -0.5244, -0.6714,  0.3644, -0.0839,  2.4975,  2.5876])
tensor([0., 1., 0., 0., 0.])
tensor([-0.3203,  0.5787,  0.1819, -0.1814, -0.4240, -0.4913, -1.3479, -1.1289,
        -1.3479, -1.0838, -0.8516, -0.9644, -1.2598, -1.2064,  0.0862, -0.5030])
tensor([0., 0., 1., 0., 0.])
tensor([-0.0372,  0.4475,  0.0606, -0.1783, -0.1835, -0.4132, -0.7023, -0.9248,
        -0.7023, -0.9357, -0.8754, -1.0059, -0.9145, -1.0595,  0.1018, -0.2263])
tensor([0., 0., 1., 0., 0.])
tensor([-0.1695,  0.5890, -0.7344, -0.7449, -0.4229, -0.4890,  1.0765,  0.8108,
         1.0765,  0.8017,  0.7857,  0.1177,  0.9277,  0.3860, -0.7141, -0.7798])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1131,  0.4851, -0.1324, -0.0728,  0.2130, -0.2305,  0.6366, -0.5845,
         0.6366, -1.2119, -1.2722, -1.2513, -0.8504, -1.1170,  0.2913, -0.6875])
tensor([0., 0., 0., 1., 0.])
tensor([-0.0323,  0.4567,  0.0643, -0.1977, -0.5329, -0.5460, -1.4515, -1.2684,
        -1.4515, -1.4407, -1.3241, -1.3160, -1.6002, -1.4222,  0.0964, -0.6414])
tensor([0., 0., 1., 0., 0.])
tensor([-0.3904,  0.5918,  0.8868,  0.6414,  0.3738,  0.2592, -0.7688, -0.4343,
        -0.7688, -0.5846, -0.6859, -0.6092, -0.7777, -0.5514,  0.6774, -0.0417])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.1168,  0.1751, -0.8451, -0.7814, -0.6298, -0.5593,  0.7085,  0.2205,
         0.7085,  0.4215,  0.4507,  0.0871,  0.6816,  0.1533, -0.8056, -0.4108])
tensor([0., 0., 0., 1., 0.])
tensor([-1.1706,  0.7678, -0.9190, -0.8080, -0.6830, -0.5652,  0.9936,  1.0448,
         0.9936,  1.3357,  1.3759,  0.6560,  1.3942,  0.9046, -0.9634,  0.6502])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.3676,  0.2535,  0.1267, -0.2217, -0.4536, -0.4322, -1.3506, -0.9396,
        -1.3506, -1.1162, -1.0852, -0.9541, -1.3548, -1.0084,  0.2164, -0.6414])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4748, -0.2059,  0.0703, -0.2614, -0.4081, -0.5062, -1.1932, -1.1252,
        -1.1932, -1.0023, -0.8259, -0.9528, -1.1454, -1.1814,  0.0300, -0.5492])
tensor([0., 0., 1., 0., 0.])
tensor([-1.1748,  0.7471, -0.2083, -0.4576,  0.1051, -0.1657,  0.5919,  0.5889,
         0.5919,  0.4235,  0.2358,  0.1264,  0.7004,  0.7281, -0.2807,  1.0192])
tensor([0., 0., 0., 1., 0.])
tensor([ 4.1639e-04,  2.5933e-01, -7.1335e-01, -7.4577e-01, -7.0993e-01,
        -5.5751e-01, -4.9066e-01, -3.2956e-01, -4.9066e-01, -2.7352e-01,
        -1.7873e-01, -3.9153e-01, -3.9273e-01, -5.5526e-01, -7.6947e-01,
         2.3502e-01])
tensor([1., 0., 0., 0., 0.])
tensor([-0.4628,  0.5648,  0.1548, -0.2520,  0.0030, -0.2774, -0.4684, -0.4538,
        -0.4684,  0.0441,  0.2841,  0.1063, -0.0323, -0.1848,  0.0025, -0.3185])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.9299,  0.0027, -1.1901, -0.8476, -1.0739, -0.6230,  0.0983,  0.3008,
         0.0983,  1.3366,  1.6390,  1.7622,  1.1230,  1.2070, -1.2526, -1.2411])
tensor([0., 0., 1., 0., 0.])
Epoch: [0][ 50/616]	Loss 3.1379e+01 (2.9463e+01)	Acc 0.213867 (0.203661)
tensor([-2.2451,  1.0049,  1.9886,  2.1252,  2.6376,  3.0416,  0.5342,  0.6976,
         0.5342,  1.3079,  1.2783,  0.8321,  1.0807,  0.8231,  1.9422,  2.5876])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.7045, -0.2155,  0.0377, -0.0219, -0.2901, -0.5162, -0.8971, -1.2505,
        -0.8971, -1.5229, -1.5105, -1.4063, -1.5005, -1.4864,  0.3142, -0.8259])
tensor([0., 0., 0., 1., 0.])
tensor([-0.6433,  0.4220, -1.0985, -0.8405, -0.9502, -0.6117,  0.5527,  1.0310,
         0.5527,  1.8361,  1.9795,  1.9558,  1.5692,  1.5748, -1.2224,  0.0044])
tensor([0., 0., 0., 0., 1.])
tensor([-0.3645,  0.6058, -0.9471, -0.8123, -0.6848, -0.5646,  1.2870,  1.3586,
         1.2870,  1.3484,  1.3483,  0.5256,  1.3985,  0.8338, -0.8284, -0.5030])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.8179, -0.6127, -0.8982, -0.7827, -0.6268, -0.5418,  1.2029,  0.7096,
         1.2029, -0.1563, -0.3957, -0.6836,  0.1641, -0.3416, -0.9189, -0.8259])
tensor([0., 1., 0., 0., 0.])
tensor([-8.4357e-01,  7.9195e-01,  5.2564e-01,  1.5637e-01,  6.3456e-01,
         2.1828e-01,  5.4088e-02, -2.1067e-04,  5.4088e-02,  3.2188e-01,
         1.7333e-01, -1.7426e-01,  1.9033e-01, -9.0744e-02,  4.6411e-01,
         2.8115e-01])
tensor([0., 0., 0., 0., 1.])
tensor([-0.4976,  0.6839,  0.2463, -0.0173, -0.0431, -0.4113, -0.6951, -1.0288,
        -0.6951, -0.8268, -0.5826, -1.0571, -0.7569, -1.1443,  0.2901, -0.5030])
tensor([0., 0., 0., 1., 0.])
tensor([-0.6795,  0.6291,  0.0347, -0.2725,  0.0667, -0.2750, -0.1166, -0.4101,
        -0.1166, -0.1253, -0.0397, -0.2394,  0.0789, -0.2022, -0.0019,  0.2812])
tensor([0., 0., 1., 0., 0.])
tensor([-7.6884e-01,  6.9028e-01,  1.9837e-01, -1.6852e-01,  3.5471e-01,
        -1.1514e-01,  1.4380e-01, -1.5873e-01,  1.4380e-01,  3.8186e-01,
         4.4526e-01, -1.2236e-01,  3.4134e-01, -2.2460e-01, -3.0628e-05,
         6.0405e-01])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.2691,  0.1506, -0.0066, -0.2100, -0.4147, -0.5074, -1.1104, -1.1575,
        -1.1104, -1.3396, -1.2473, -1.2554, -1.4036, -1.3681,  0.1189, -0.6875])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.2600,  0.0969, -1.1650, -0.8461, -1.0421, -0.6207,  0.2390,  0.6030,
         0.2390,  1.4375,  1.7073,  1.7899,  1.2507,  1.4661, -1.2169,  0.1428])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.7517, -0.9097, -1.2141, -0.8486, -1.0916, -0.6237,  0.3307,  0.4582,
         0.3307,  1.0029,  0.9625,  1.1862,  0.9439,  0.9593, -1.2422, -0.0879])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.2031,  0.0477, -0.8480, -0.7956, -0.8037, -0.5830, -0.3935, -0.1023,
        -0.3935,  0.2883,  0.3499,  0.2898,  0.1956,  0.2234, -0.9751, -0.4108])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.8183, -1.1257, -1.2297, -0.8484, -1.0656, -0.6214,  2.2182,  2.4266,
         2.2182,  0.2047, -0.7838, -0.5782,  0.1961,  0.4530, -1.2764, -1.5179])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.6191,  0.1414, -1.1496, -0.8446, -1.0168, -0.6193,  0.4164,  0.4727,
         0.4164,  1.2348,  1.3771,  1.0890,  1.0832,  0.8854, -1.2170, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([-0.0550,  0.5174,  0.1019, -0.1836,  0.0804, -0.3083, -0.2188, -0.6417,
        -0.2188, -0.3650, -0.2146, -0.4951, -0.1964, -0.5784,  0.1031, -0.6875])
tensor([0., 0., 1., 0., 0.])
tensor([-0.7271,  0.7198,  0.1588, -0.2144,  0.2103, -0.1699, -0.0626, -0.2156,
        -0.0626,  0.2452,  0.3988,  0.3732,  0.4825,  0.4058,  0.0787,  0.0044])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.9279, -0.7873, -1.2114, -0.8483, -1.0739, -0.6229,  0.8348,  0.9201,
         0.8348,  1.1212,  0.9185,  0.8650,  1.1731,  1.1647, -1.2452, -0.7337])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0606,  0.1152, -0.0467, -0.3178, -0.0272, -0.2930, -0.1573, -0.3782,
        -0.1573, -0.3144, -0.3094, -0.2973, -0.0888, -0.1451,  0.0046, -0.2263])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.4149,  0.1412,  0.0345, -0.1664, -0.3188, -0.4667, -0.9549, -1.0729,
        -0.9549, -1.2382, -1.1181, -1.1843, -1.2808, -1.2732,  0.0884, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.8319, -0.2707, -0.3348, -0.1935,  0.4499,  0.2827,  2.0808,  0.9639,
         2.0808, -1.1754, -1.4523, -1.1500, -0.5692, -0.4247,  0.1507, -0.8259])
tensor([0., 0., 1., 0., 0.])
tensor([-0.9363,  0.6717, -0.6909, -0.7541, -0.5047, -0.5026,  0.4044,  0.7792,
         0.4044,  1.4229,  1.6839,  1.1613,  1.2224,  0.8678, -0.7950,  0.5118])
tensor([1., 0., 0., 0., 0.])
tensor([-1.1961,  0.8095,  2.3350,  2.7971,  2.5035,  3.3235,  0.1064,  0.4325,
         0.1064,  0.8051,  0.7934,  1.3607,  0.5981,  0.8687,  1.7817,  1.1576])
tensor([0., 0., 0., 0., 1.])
tensor([-0.1998,  0.3449,  1.0747,  0.8226,  0.7015,  0.1832, -0.5321, -0.6284,
        -0.5321, -0.1910,  0.2049,  0.1562, -0.3246, -0.5357,  1.3701,  0.6041])
tensor([0., 0., 0., 0., 1.])
tensor([-0.4244,  0.5871,  1.1039,  1.1732,  0.8554,  0.6918, -0.3745, -0.3318,
        -0.3745, -0.5802, -0.6311, -0.5314, -0.4513, -0.3095,  1.0654,  0.3273])
tensor([0., 0., 0., 0., 1.])
tensor([ 2.1023, -1.8513, -1.1650, -0.8430, -1.0118, -0.6202,  0.9105, -0.1353,
         0.9105, -0.3528, -0.6610, -0.7949, -0.0724, -0.5308, -1.1965, -1.2411])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.4041,  0.1610,  0.0826, -0.0749, -0.2945, -0.4502, -0.9694, -1.0839,
        -0.9694, -1.3484, -1.3023, -1.3094, -1.3912, -1.3153,  0.2597, -0.7337])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.4034,  0.4601, -1.0904, -0.8398, -0.9565, -0.6133,  0.3310,  0.5809,
         0.3310,  1.5743,  1.7903,  1.7050,  1.4543,  1.5264, -1.1528, -1.5179])
tensor([0., 1., 0., 0., 0.])
tensor([-0.1002,  0.2369, -0.9491, -0.7880, -0.4365, -0.4782,  3.3831,  2.6994,
         3.3831,  0.2108, -0.1779, -0.6020,  0.9941,  0.3597, -0.4666,  0.7424])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.3627,  0.0477, -0.0412, -0.2428, -0.3025, -0.4715, -0.8041, -1.0352,
        -0.8041, -1.1322, -1.0703, -1.0376, -1.0179, -1.0643,  0.0672, -0.4569])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.9915, -1.5069, -1.2364, -0.8494, -1.1297, -0.6251, -0.3416, -0.2071,
        -0.3416,  0.2566,  0.3740,  0.7969,  0.2493,  0.5100, -1.2905, -0.0879])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.8893, -2.3377, -1.1014, -0.8358, -0.9079, -0.6073,  1.2341,  0.7466,
         1.2341,  0.2481, -0.1199,  0.0325,  0.6200,  0.3969, -1.1485,  0.1428])
tensor([1., 0., 0., 0., 0.])
tensor([-1.3254,  0.6078,  0.9711,  0.8748,  2.0226,  2.4698,  1.2591,  1.6925,
         1.2591,  0.9444,  0.5372,  0.6082,  1.2436,  1.5537,  1.0614,  2.5876])
tensor([0., 1., 0., 0., 0.])
tensor([-1.7442,  0.8793,  0.7028,  0.2840,  0.8796,  0.6734,  0.1532,  0.5431,
         0.1532,  0.7276,  0.6460,  0.5086,  0.5452,  0.5225,  0.5896,  2.2647])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.5068, -1.2869, -1.1932, -0.8472, -1.0850, -0.6231, -0.1263, -0.0273,
        -0.1263,  0.0804, -0.0466, -0.0200, -0.0295, -0.0606, -1.2319, -0.9182])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.4786, -1.5011, -1.2507, -0.8498, -1.1288, -0.6250,  0.5066,  0.7152,
         0.5066,  0.6499,  0.4042,  0.9568,  0.8188,  1.1825, -1.3129, -1.3333])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.0927, -0.7668, -1.1562, -0.8428, -0.9358, -0.6082,  2.2522,  2.6009,
         2.2522,  0.8861,  0.3619,  0.0402,  1.2367,  1.0430, -1.2043, -0.8721])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.5202, -1.1007, -0.5183, -0.4440,  0.0904, -0.3106,  1.9017, -0.1116,
         1.9017, -1.1101, -1.4263, -1.2627, -0.4992, -0.8886, -0.1236, -0.8259])
tensor([0., 1., 0., 0., 0.])
tensor([-1.1923,  0.6738, -0.8027, -0.7880, -0.6893, -0.5570,  0.0544,  0.4663,
         0.0544,  1.1303,  1.3831,  0.9671,  0.8700,  0.6268, -0.8812,  2.2186])
tensor([1., 0., 0., 0., 0.])
tensor([-1.4679,  0.8587,  0.0981, -0.3713,  0.3324, -0.0152,  0.3114,  0.7718,
         0.3114,  1.7084,  1.9237,  1.9230,  1.4218,  1.4691, -0.0817,  1.7573])
tensor([1., 0., 0., 0., 0.])
tensor([-1.3049,  0.8082,  0.2125, -0.2045,  0.0671, -0.1505, -0.4358, -0.1818,
        -0.4358,  0.0863,  0.1618, -0.2164, -0.1409, -0.3629,  0.2018,  1.4344])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4072, -0.1565, -1.1037, -0.8391, -0.9701, -0.6158,  0.3437,  0.0669,
         0.3437,  0.5470,  0.6124,  0.3140,  0.5761,  0.1500, -1.2013, -0.6875])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.8763,  0.0298, -0.2057, -0.4144, -0.7591, -0.5790, -1.7106, -1.2949,
        -1.7106, -1.6951, -1.5314, -1.2939, -1.9557, -1.4917,  0.1217, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.6387, -0.5224, -1.2099, -0.8485, -1.1007, -0.6239, -0.1290,  0.2167,
        -0.1290,  0.7745,  1.1169,  1.5178,  0.6131,  1.0807, -1.2671, -1.5179])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.3428, -0.6261, -1.1652, -0.8456, -1.0587, -0.6223, -0.1242, -0.2066,
        -0.1242,  0.4500,  0.4827,  0.3021,  0.3007,  0.0026, -1.2607, -0.1340])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.6220, -0.6814, -1.1986, -0.8478, -1.1159, -0.6249, -0.8999, -0.9238,
        -0.8999, -0.3674, -0.0698, -0.3005, -0.4674, -0.6781, -1.2647, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([-0.0540, -0.5907, -1.2099, -0.8483, -1.0699, -0.6223,  0.9104,  1.3773,
         0.9104,  1.4402,  1.0980,  1.0958,  1.1859,  1.2435, -1.2920,  0.2350])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.0141, -0.1604, -0.8516, -0.7886, -0.9581, -0.6112, -1.3798, -1.0660,
        -1.3798, -1.1622, -1.0762, -1.0288, -1.3703, -1.1307, -0.7420, -0.8259])
tensor([1., 0., 0., 0., 0.])
tensor([-1.0723,  0.6267, -0.8649, -0.7996, -0.6660, -0.5620,  0.6275,  0.7357,
         0.6275,  1.4551,  1.5716,  1.2891,  1.4120,  1.1747, -0.8405,  1.4344])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4089, -1.0865, -1.2220, -0.8487, -1.0872, -0.6232,  0.8453,  1.2387,
         0.8453,  0.9080,  0.2357,  0.3712,  0.5338,  0.7132, -1.2548, -0.5030])
tensor([0., 1., 0., 0., 0.])
Epoch: [0][100/616]	Loss 3.2305e+01 (3.0029e+01)	Acc 0.192383 (0.202100)
tensor([-0.1500,  0.4442,  0.1950, -0.2043, -0.3314, -0.4903, -1.1812, -1.1133,
        -1.1812, -0.7900, -0.3630, -0.6266, -0.8790, -1.0382,  0.0781,  0.0966])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0861, -1.9474, -1.2207, -0.8484, -1.0953, -0.6239,  0.4642,  0.1687,
         0.4642,  0.0124, -0.4929, -0.2795, -0.0526, -0.0208, -1.3038,  0.4657])
tensor([1., 0., 0., 0., 0.])
tensor([-0.4303,  0.4900, -0.8365, -0.7964, -0.7280, -0.5794,  0.0224,  0.0354,
         0.0224,  1.1075,  1.5687,  1.1367,  0.8421,  0.3608, -0.9549,  0.0044])
tensor([0., 0., 1., 0., 0.])
tensor([-0.0245,  0.3264, -1.0992, -0.8406, -0.9626, -0.6133,  0.3815,  0.7741,
         0.3815,  1.6423,  1.9824,  1.8835,  1.3592,  1.2745, -1.1821, -0.2263])
tensor([1., 0., 0., 0., 0.])
tensor([-0.2045,  0.3663, -0.8569, -0.7474, -0.3467, -0.4927,  2.6700,  0.8021,
         2.6700, -0.2072, -0.4648, -0.8219,  0.5562, -0.2027, -0.7767, -0.1801])
tensor([0., 0., 1., 0., 0.])
tensor([-2.0056,  0.9507,  1.4562,  1.2642,  1.7544,  1.2590,  0.2564,  0.0935,
         0.2564,  0.9275,  1.1009,  0.4828,  0.9140,  0.3740,  1.2273,  2.3108])
tensor([0., 0., 0., 0., 1.])
tensor([-0.2149,  0.4368,  0.0519, -0.2019, -0.4689, -0.5262, -1.3014, -1.2129,
        -1.3014, -1.3438, -1.2019, -1.1816, -1.4327, -1.3099,  0.1008, -0.1340])
tensor([0., 0., 1., 0., 0.])
tensor([-1.2967,  0.7387,  1.9663,  2.2923,  2.3186,  2.6353,  0.2742,  0.3527,
         0.2742,  0.6672,  0.7250,  0.8175,  0.8102,  0.9771,  1.8864,  1.5266])
tensor([0., 0., 0., 0., 1.])
tensor([-1.0993,  0.7859,  0.5008,  0.1239,  0.1727, -0.2885, -0.6499, -0.8717,
        -0.6499, -0.3561, -0.1472, -0.6290, -0.4025, -0.8439,  0.1880,  0.8808])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.0158,  0.3353,  1.7394,  2.3766,  2.1642,  2.9166,  0.3590,  0.4591,
         0.3590,  0.0137, -0.3490,  0.1920,  0.2253,  0.8007,  1.7464, -0.0417])
tensor([0., 0., 0., 0., 1.])
tensor([-2.0844,  0.9701,  0.9850,  0.5909,  1.4275,  1.1781,  0.4791,  0.7314,
         0.4791,  1.2199,  1.2544,  0.8122,  1.0471,  0.7368,  0.5909,  2.1263])
tensor([1., 0., 0., 0., 0.])
tensor([-0.6557,  0.1166, -1.0327, -0.8280, -0.7704, -0.5763,  1.6853,  2.4203,
         1.6853,  1.5036,  0.9562,  0.5307,  1.4354,  1.3429, -1.1070,  1.5266])
tensor([1., 0., 0., 0., 0.])
tensor([-0.3802,  0.3088, -0.5159, -0.6617, -0.4247, -0.4562, -0.0247,  0.1064,
        -0.0247,  0.1523,  0.1303, -0.0753,  0.1439, -0.0667, -0.3029,  0.9731])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4272, -0.6434, -1.2095, -0.8484, -1.0852, -0.6233,  0.3777,  0.6052,
         0.3777,  1.0906,  1.0873,  1.2354,  1.0099,  1.1331, -1.2846, -0.5492])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.9764, -1.9500, -0.3134, -0.2899, -0.4861, -0.4939, -0.7836, -1.0680,
        -0.7836, -1.7631, -1.8236, -1.3725, -1.7690, -1.3803,  0.0667, -1.2872])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0271,  0.3877, -1.1598, -0.8458, -1.0340, -0.6205,  0.2940,  0.5256,
         0.2940,  1.5515,  1.9239,  1.6597,  1.3525,  1.1153, -1.2003, -0.6875])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.7568, -0.6855, -0.5915, -0.6914, -0.6256, -0.5560, -0.5489, -0.7074,
        -0.5489, -0.4528, -0.1343, -0.1824, -0.3558, -0.4951, -0.5237, -0.2263])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.6588, -2.1594, -1.2613, -0.8500, -1.1506, -0.6255, -0.2979, -0.3158,
        -0.2979, -0.3603, -0.7649, -0.3538, -0.7167, -0.3714, -1.3267, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([ 2.3318, -2.3496, -0.0088, -0.0736, -0.3377, -0.4202, -0.9342, -1.0161,
        -0.9342, -1.5519, -1.5763, -1.1636, -1.6127, -1.2263,  0.2020, -1.5640])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.7075, -3.0520, -1.2156, -0.8481, -1.1209, -0.6245, -0.6713, -0.5020,
        -0.6713, -0.8738, -0.8214, -0.1886, -0.7277, -0.1969, -1.2700, -0.5953])
tensor([1., 0., 0., 0., 0.])
tensor([-0.3115,  0.5079,  0.9162,  0.7122, -0.1963, -0.3350, -1.5419, -1.1552,
        -1.5419, -1.3480, -1.1885, -1.1475, -1.6077, -1.3398,  0.7357,  0.4195])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.2463, -0.2358, -0.9531, -0.8003, -0.5823, -0.5415,  2.2260,  1.4927,
         2.2260,  0.4646,  0.2321, -0.4099,  1.0471,  0.3171, -0.8411, -0.1340])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.5296, -1.8183, -0.0874, -0.1876,  0.3309, -0.0941,  0.7901, -0.0644,
         0.7901, -0.5722, -0.7296, -0.5940, -0.1781, -0.4666,  0.0956, -0.7798])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.4948,  0.1694, -0.0287, -0.3306, -0.5917, -0.5699, -1.4846, -1.2944,
        -1.4846, -1.3208, -1.1458, -1.2574, -1.4880, -1.4224,  0.0648, -1.1488])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.9561, -0.2651, -0.1168, -0.1322,  0.0257, -0.3604,  0.1313, -0.8303,
         0.1313, -1.2098, -1.2227, -1.1382, -0.9304, -1.1721,  0.2681, -0.8259])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.4580, -0.8717, -1.2045, -0.8480, -1.0647, -0.6218,  0.8508,  1.4427,
         0.8508,  1.3448,  0.9838,  1.2057,  1.0105,  1.1365, -1.2647, -1.2411])
tensor([0., 1., 0., 0., 0.])
tensor([-0.5621,  0.6755,  0.2056, -0.0355,  0.3739, -0.2191,  0.1663, -0.6010,
         0.1663, -0.2503, -0.0759, -0.6679, -0.0085, -0.6964,  0.2715, -0.1801])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.1160,  0.1063,  0.5165,  0.2207,  0.2442,  0.2089, -0.5546, -0.1050,
        -0.5546, -0.5094, -0.7104, -0.5728, -0.8247, -0.5501,  0.3805, -0.1340])
tensor([0., 0., 0., 0., 1.])
tensor([ 1.6521, -1.3588, -0.3131, -0.1982,  0.0653, -0.2962,  0.8395, -0.5900,
         0.8395, -1.4351, -1.5977, -1.3924, -1.0901, -1.2174,  0.0697, -1.2411])
tensor([0., 0., 1., 0., 0.])
tensor([-0.1310, -0.3682, -1.2221, -0.8490, -1.1056, -0.6241,  0.1267,  0.6350,
         0.1267,  1.0273,  1.2125,  1.2504,  0.9054,  1.1136, -1.2848,  0.4657])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.1109, -0.2620, -0.7429, -0.7652, -0.7440, -0.5858, -0.5437, -0.6540,
        -0.5437,  0.0366,  0.5587,  0.2623, -0.1130, -0.4793, -0.7570, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([-1.4224,  0.8187, -0.7099, -0.7494, -0.3816, -0.4612,  1.1175,  1.4010,
         1.1175,  1.5549,  1.5412,  0.8828,  1.6023,  1.3240, -0.7861,  1.0653])
tensor([1., 0., 0., 0., 0.])
tensor([-0.1426,  0.1780,  1.5671,  1.8244,  1.3784,  0.7580, -0.2432, -0.5687,
        -0.2432, -0.2353, -0.2491, -0.4777, -0.1214, -0.4317,  1.1946,  0.2812])
tensor([0., 0., 0., 0., 1.])
tensor([ 1.1867, -0.7366, -1.2047, -0.8481, -1.1100, -0.6245, -0.5811, -0.5261,
        -0.5811,  0.0154,  0.1613,  0.1227, -0.0324, -0.0530, -1.2758, -0.7337])
tensor([0., 1., 0., 0., 0.])
tensor([-0.2403,  0.5537,  0.3126, -0.0032, -0.2261, -0.3943, -1.1123, -1.0008,
        -1.1123, -1.0133, -0.8751, -0.9910, -1.1138, -1.0898,  0.4516, -0.3185])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.5413, -1.3115, -0.0718, -0.3015, -0.4306, -0.3991, -1.0563, -0.7536,
        -1.0563, -1.2061, -1.2105, -0.8845, -1.3645, -0.9454, -0.0380, -0.4108])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.5892, -0.4229, -1.1849, -0.8468, -1.0314, -0.6186,  1.0692,  2.0340,
         1.0692,  1.4962,  0.9923,  1.0356,  1.2667,  1.5262, -1.1836, -0.4569])
tensor([0., 0., 0., 1., 0.])
tensor([ 2.1853, -3.0160, -1.2018, -0.8459, -0.9875, -0.6155,  3.1274,  2.5664,
         3.1274,  0.1702, -0.8613, -0.3496,  0.8117,  1.1253, -1.2430, -1.1950])
tensor([0., 1., 0., 0., 0.])
tensor([-1.0336,  0.7674,  0.2875, -0.1478,  0.3174, -0.0424, -0.0918, -0.0146,
        -0.0918,  0.5203,  0.6666,  0.3866,  0.4431,  0.2376,  0.1001,  1.1115])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.7257, -0.5474, -1.2400, -0.8495, -1.1161, -0.6241,  0.5266,  1.7440,
         0.5266,  1.0215,  0.9873,  0.9303,  0.6505,  0.7670, -1.2962, -0.7337])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.1633, -0.0615, -0.5685, -0.5693, -0.0604, -0.3620,  1.6278,  0.1769,
         1.6278, -0.6272, -0.7966, -0.9751, -0.0073, -0.5843, -0.4299, -0.0879])
tensor([0., 0., 1., 0., 0.])
tensor([-0.6360,  0.5811,  1.8885,  1.9116,  1.8325,  1.5588, -0.0916, -0.0842,
        -0.0916,  0.6538,  0.7158,  0.6909,  0.5075,  0.3933,  1.8484,  0.6041])
tensor([0., 0., 0., 0., 1.])
tensor([-0.0450,  0.2678,  0.1899, -0.0084,  0.4870, -0.0941,  0.4183, -0.3667,
         0.4183, -0.2501, -0.2234, -0.5277,  0.1281, -0.4153,  0.3257, -0.2263])
tensor([0., 0., 0., 1., 0.])
tensor([-0.1791,  0.4886,  1.8234,  2.3246,  1.3088,  0.8074, -0.5202, -0.6854,
        -0.5202, -0.4806, -0.4580, -0.5401, -0.3707, -0.4730,  1.7726, -0.0879])
tensor([0., 0., 0., 0., 1.])
tensor([-0.9311,  0.7152,  0.5741,  0.0939,  0.3048, -0.0507, -0.5309, -0.4064,
        -0.5309,  0.1779,  0.5516,  0.3907,  0.1117, -0.0773,  0.3630,  0.8347])
tensor([0., 1., 0., 0., 0.])
tensor([-0.1231,  0.3501, -1.1399, -0.8440, -0.9797, -0.6133,  0.9039,  1.9260,
         0.9039,  1.9563,  1.8875,  1.8974,  1.6789,  1.8697, -1.1285, -0.2263])
tensor([1., 0., 0., 0., 0.])
tensor([-0.4627,  0.4833, -0.4365, -0.6462, -0.4932, -0.5169, -0.5143, -0.5408,
        -0.5143,  0.1003,  0.4008,  0.2009,  0.1190, -0.0952, -0.5442, -0.1801])
tensor([0., 0., 1., 0., 0.])
tensor([-1.7107,  0.8731,  2.2277,  2.2661,  2.3105,  2.4319,  0.0372,  0.2526,
         0.0372,  1.2380,  1.4839,  1.7378,  1.2020,  1.3625,  1.7444,  2.6337])
tensor([0., 0., 0., 0., 1.])
tensor([-0.4065,  0.5185,  1.0589,  1.3131,  2.4583,  3.8210,  1.6420,  2.1547,
         1.6420,  0.5029, -0.3174,  0.2729,  0.5523,  1.1695,  1.0950,  0.3734])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.4390,  0.2210, -0.1062, -0.0737,  0.2845, -0.0224,  0.7343, -0.1092,
         0.7343, -1.0793, -1.2800, -1.1800, -0.7646, -0.9245,  0.2074, -0.9182])
tensor([0., 0., 0., 1., 0.])
Epoch: [0][150/616]	Loss 3.2266e+01 (3.0662e+01)	Acc 0.193359 (0.201896)
tensor([ 2.4652, -5.2700, -1.2828, -0.8503, -1.1721, -0.6257, -0.9107, -1.0522,
        -0.9107, -2.0280, -2.1651, -1.4833, -2.1867, -1.4025, -1.3189, -1.1027])
tensor([0., 0., 1., 0., 0.])
tensor([-0.1088,  0.5644,  0.4989,  0.4750, -0.1165, -0.1986, -1.1139, -0.9140,
        -1.1139, -1.4529, -1.4365, -1.2843, -1.6219, -1.2754,  0.6511, -0.4108])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.6581, -0.2610,  0.1704, -0.0631, -0.2401, -0.4091, -0.9734, -0.9973,
        -0.9734, -1.1434, -1.1183, -1.0993, -1.1723, -1.1573,  0.2133, -0.5492])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.4523,  0.1249, -0.2046, -0.4164, -0.4199, -0.4230, -0.8122, -0.6572,
        -0.8122, -1.0127, -1.1297, -1.0194, -1.1288, -0.8890, -0.1709, -0.8721])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.0801,  0.4976,  0.0865, -0.1884,  0.0365, -0.3623, -0.2816, -0.7800,
        -0.2816, -0.4635, -0.4536, -0.9123, -0.3954, -0.8846,  0.1073, -0.6414])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.8684, -0.4002, -1.2070, -0.8484, -1.0976, -0.6240, -0.1176,  0.1106,
        -0.1176,  0.9325,  1.1449,  1.3042,  0.8212,  0.9554, -1.2810, -1.0566])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.0254, -1.2574, -0.9012, -0.7984, -0.7960, -0.5927, -0.0073, -0.3574,
        -0.0073, -0.1148,  0.0570, -0.0190,  0.1118, -0.1642, -0.9214, -0.6414])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.2517, -0.4484, -1.2238, -0.8491, -1.1100, -0.6244,  0.0185,  0.3331,
         0.0185,  1.0442,  1.2238,  1.6973,  0.8845,  1.0993, -1.2993, -0.5953])
tensor([0., 0., 0., 1., 0.])
tensor([-0.7102,  0.2145,  1.0156,  0.7473,  1.3192,  0.8699,  0.2999,  0.1729,
         0.2999,  0.6335,  0.6404,  0.5788,  0.7776,  0.6016,  1.5032,  2.4953])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.2969, -1.6788, -1.1544, -0.8435, -0.9700, -0.6132,  1.4853,  1.7444,
         1.4853,  0.9822,  0.4627,  0.6443,  1.2124,  1.3349, -1.2017, -0.5953])
tensor([0., 0., 0., 1., 0.])
tensor([-0.1227,  0.0921, -0.9393, -0.8152, -0.7339, -0.5662,  0.7978,  1.5139,
         0.7978,  1.5797,  1.2830,  1.3474,  1.4361,  1.8193, -1.0645, -0.2724])
tensor([0., 0., 0., 1., 0.])
tensor([-0.3603,  0.5612,  0.9943,  0.7786, -0.0273, -0.2753, -1.3723, -1.1038,
        -1.3723, -1.1361, -1.0920, -1.1157, -1.4163, -1.2441,  0.9475,  0.0505])
tensor([1., 0., 0., 0., 0.])
tensor([-1.0405,  0.6867,  0.3202,  0.4782,  2.3115,  2.3782,  3.4236,  2.5189,
         3.4236,  0.3186, -0.4456, -0.5114,  1.1078,  0.8705,  1.0402,  1.6189])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.1201, -0.3182,  0.3402,  0.0477, -0.6777, -0.5721, -1.9401, -1.3790,
        -1.9401, -1.7706, -1.6633, -1.4363, -2.1254, -1.5931,  0.3104, -1.3333])
tensor([0., 0., 0., 1., 0.])
tensor([-0.4249,  0.3469, -0.5175, -0.6152, -0.1980, -0.3889,  0.8241,  0.2982,
         0.8241, -0.0341, -0.2323, -0.3173,  0.3729,  0.0957, -0.5323,  0.7886])
tensor([1., 0., 0., 0., 0.])
tensor([-1.0560,  0.7274, -0.8353, -0.7930, -0.5421, -0.4915,  1.1840,  2.6558,
         1.1840,  2.1743,  1.9693,  1.6799,  1.8478,  2.0881, -0.8576,  1.2960])
tensor([1., 0., 0., 0., 0.])
tensor([-0.8485,  0.7870,  0.0519, -0.3060, -0.4969, -0.5521, -1.3615, -1.2449,
        -1.3615, -1.0489, -0.7426, -1.0332, -1.1944, -1.3106,  0.0638, -0.1801])
tensor([0., 0., 1., 0., 0.])
tensor([-0.4703,  0.3557,  0.6074,  0.2862,  0.8510,  0.4227,  0.2592,  0.1486,
         0.2592,  0.3751,  0.4074,  0.3990,  0.6070,  0.5157,  0.7536,  0.2350])
tensor([0., 0., 1., 0., 0.])
tensor([-0.5353,  0.6058,  0.2369, -0.1764,  0.0577, -0.3444, -0.4918, -0.7456,
        -0.4918, -0.0150,  0.3966, -0.0616, -0.0057, -0.5090,  0.0924,  0.2350])
tensor([0., 0., 1., 0., 0.])
tensor([-0.7716,  0.4515,  2.6942,  3.9734,  2.4966,  3.1903, -0.1629, -0.0839,
        -0.1629,  0.1141,  0.3165,  0.7503,  0.3832,  0.8049,  2.1366,  1.5728])
tensor([0., 1., 0., 0., 0.])
tensor([-0.9932,  0.5736, -0.8728, -0.7906, -0.6044, -0.5359,  1.1131,  1.1758,
         1.1131,  0.8408,  0.5092,  0.3410,  1.0878,  1.1273, -0.9538,  2.1724])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.8845, -2.4421, -0.0190, -0.0637,  0.4171, -0.0393,  0.7915, -0.1647,
         0.7915, -0.7428, -0.8632, -0.7509, -0.3063, -0.6231,  0.3660, -0.6414])
tensor([0., 0., 0., 1., 0.])
tensor([-0.0732,  0.2329, -0.9146, -0.8138, -0.7658, -0.5840,  0.3208,  0.5362,
         0.3208,  1.5830,  1.7733,  1.6864,  1.3150,  1.2159, -1.0513, -0.5030])
tensor([0., 1., 0., 0., 0.])
tensor([-1.1323,  0.7624,  0.5370,  0.1271, -0.0061, -0.2382, -0.9752, -0.7826,
        -0.9752, -0.5759, -0.3784, -0.4709, -0.6193, -0.4974,  0.4285,  0.8808])
tensor([0., 1., 0., 0., 0.])
tensor([-0.2882,  0.2722,  1.9552,  2.5893,  0.0947, -0.2058, -1.6944, -1.2685,
        -1.6944, -1.5164, -1.3780, -1.2462, -1.7734, -1.3846,  1.9124,  0.3273])
tensor([0., 1., 0., 0., 0.])
tensor([-0.9340,  0.7151,  1.5872,  2.0889,  2.6730,  3.5543,  1.0381,  1.0334,
         1.0381,  0.5109, -0.1723, -0.1014,  0.5392,  0.6458,  1.6934,  0.6963])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.0591,  0.3324, -0.2493, -0.5232, -0.5826, -0.5403, -1.1758, -1.0222,
        -1.1758, -0.8546, -0.6758, -0.8191, -1.0055, -1.0036, -0.4973, -0.4108])
tensor([0., 0., 1., 0., 0.])
tensor([-0.7111,  0.6788,  2.1421,  2.3112,  1.7445,  1.3649, -0.3677, -0.3698,
        -0.3677,  0.4123,  0.7594,  0.9041,  0.3207,  0.2284,  2.0344,  0.1428])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.2350,  0.3221, -0.1145, -0.4302, -0.5446, -0.5513, -1.2714, -1.1710,
        -1.2714, -0.9698, -0.5908, -0.7900, -1.0802, -1.1669, -0.2295, -1.0104])
tensor([0., 0., 1., 0., 0.])
tensor([-1.0975,  0.7966,  0.5423,  0.0442,  0.3708, -0.0853, -0.3872, -0.4150,
        -0.3872,  0.4334,  0.5973,  0.1580,  0.3775,  0.0291,  0.2470,  0.4195])
tensor([0., 0., 0., 0., 1.])
tensor([ 1.3722, -0.6528, -0.0481, -0.2176, -0.4771, -0.5266, -1.1980, -1.2072,
        -1.1980, -1.4870, -1.3777, -1.2587, -1.5513, -1.3966,  0.0920, -1.0104])
tensor([0., 0., 1., 0., 0.])
tensor([-1.1666,  0.8456,  0.1567, -0.2297,  0.0360, -0.3439, -0.4060, -0.6806,
        -0.4060, -0.0188,  0.1624, -0.3772,  0.0692, -0.4531,  0.0498,  0.2350])
tensor([0., 0., 1., 0., 0.])
tensor([-1.2492,  0.7418,  2.1528,  2.3101,  1.9961,  1.9666, -0.1642, -0.0323,
        -0.1642,  0.6866,  0.8127,  0.9845,  0.5102,  0.5565,  1.9066,  1.6189])
tensor([0., 0., 0., 0., 1.])
tensor([-1.5026,  0.8115, -0.6693, -0.7520, -0.4935, -0.5085,  0.3447,  0.6263,
         0.3447,  1.6462,  1.9490,  1.5837,  1.3578,  1.0697, -0.7847,  1.9879])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.0209, -0.1258, -0.6807, -0.7369, -0.6428, -0.5464, -0.2987, -0.2465,
        -0.2987,  0.0147,  0.1090,  0.0081, -0.0171, -0.1348, -0.8004,  0.2350])
tensor([0., 0., 0., 1., 0.])
tensor([-1.2005,  0.7482,  2.1785,  2.2177,  1.7369,  1.4999, -0.3998, -0.2579,
        -0.3998,  0.6049,  0.9729,  1.2823,  0.6259,  0.7819,  1.7174,  1.1576])
tensor([0., 0., 0., 0., 1.])
tensor([-0.1144,  0.4696,  0.6912,  0.5052,  0.0644,  0.0676, -1.0164, -0.5791,
        -1.0164, -1.0382, -1.0978, -0.8595, -1.1955, -0.7614,  0.6363,  0.1889])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.3353,  0.2728,  0.2376, -0.0320, -0.4693, -0.4917, -1.4872, -1.1947,
        -1.4872, -1.4469, -1.2613, -1.0786, -1.5901, -1.2415,  0.2724, -0.7798])
tensor([0., 0., 0., 1., 0.])
tensor([-0.5663,  0.6634, -0.5990, -0.7095, -0.5319, -0.5174, -0.1354, -0.1235,
        -0.1354,  0.3174,  0.5094,  0.0194,  0.2047, -0.2522, -0.5972, -0.1801])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.8277, -0.4238, -1.2117, -0.8485, -1.0800, -0.6230,  0.6385,  1.1139,
         0.6385,  1.6179,  1.6115,  1.7897,  1.3665,  1.4173, -1.2874, -1.0104])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.7517, -1.4036, -1.1853, -0.8467, -1.0708, -0.6223,  0.0508,  0.1557,
         0.0508,  0.2794,  0.3187,  0.7462,  0.4032,  0.6578, -1.2281,  0.4195])
tensor([1., 0., 0., 0., 0.])
tensor([-0.0651,  0.5577,  0.2058, -0.1830, -0.3797, -0.5207, -1.2862, -1.2058,
        -1.2862, -0.9438, -0.5208, -0.8255, -1.0947, -1.2448,  0.0805, -1.1027])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.9088, -2.2971, -0.9856, -0.8063, -0.7251, -0.5845,  1.4213,  0.1744,
         1.4213, -0.2670, -0.7817, -0.8043,  0.1210, -0.4216, -1.0108, -0.9643])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1856,  0.4039,  0.1451, -0.2283, -0.4609, -0.5416, -1.3842, -1.2451,
        -1.3842, -1.0714, -0.6826, -0.9125, -1.2086, -1.2902,  0.0777, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([-0.4689,  0.2381, -0.9939, -0.8266, -0.7957, -0.5831,  0.8614,  1.6902,
         0.8614,  2.0298,  1.9689,  2.0511,  1.7788,  2.0495, -1.0518,  0.3273])
tensor([1., 0., 0., 0., 0.])
tensor([-1.3047,  0.7789,  2.2263,  2.6008,  2.6607,  3.2371,  0.3261,  0.4972,
         0.3261,  1.0252,  0.9136,  1.1330,  0.9660,  1.1215,  1.4100,  1.8957])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.9655, -0.6402,  0.2483,  0.0939, -0.0408, -0.3263, -0.6935, -0.9232,
        -0.6935, -1.1114, -1.0120, -1.0261, -1.0521, -1.1242,  0.2763, -0.6875])
tensor([0., 0., 0., 0., 1.])
tensor([-0.3281, -0.6648, -1.1745, -0.8467, -1.0648, -0.6221, -0.0611,  0.2313,
        -0.0611,  1.0165,  1.2743,  1.8476,  1.0254,  1.5060, -1.2701,  0.8347])
tensor([1., 0., 0., 0., 0.])
tensor([-0.5084,  0.4229, -0.1408, -0.2801,  0.8028,  0.4066,  2.1396,  1.7206,
         2.1396,  0.4083,  0.0799, -0.1884,  1.1202,  0.9876, -0.4144,  0.1889])
tensor([1., 0., 0., 0., 0.])
tensor([-0.3756,  0.4169,  0.4365,  0.0086, -0.0444, -0.3712, -0.9316, -0.9600,
        -0.9316, -0.4802,  0.0804, -0.1709, -0.5564, -0.8150,  0.3012, -0.3185])
tensor([0., 0., 0., 1., 0.])
Epoch: [0][200/616]	Loss 3.1523e+01 (3.1002e+01)	Acc 0.211914 (0.201250)
tensor([ 1.0970, -1.0560, -0.4654, -0.5970, -0.2276, -0.3858,  0.4919,  0.1926,
         0.4919, -0.0655, -0.3049, -0.0120,  0.3058,  0.4442, -0.4687, -0.0879])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1245,  0.3404,  0.2171, -0.1667, -0.2920, -0.4270, -1.1299, -0.9699,
        -1.1299, -0.8073, -0.6192, -0.7605, -0.9077, -0.9393,  0.1478, -0.5030])
tensor([0., 0., 1., 0., 0.])
tensor([-1.2470,  0.7801,  0.4619, -0.0247,  0.5403,  0.0333,  0.0035, -0.0714,
         0.0035,  0.8594,  1.0941,  1.0485,  0.9311,  0.7799,  0.2698,  1.1576])
tensor([0., 0., 0., 1., 0.])
tensor([-1.0641,  0.6538,  1.4659,  1.3834,  2.3146,  3.0157,  0.8324,  1.4018,
         0.8324,  1.2887,  0.9352,  1.0659,  1.0045,  1.0751,  1.0575,  1.7111])
tensor([0., 0., 0., 0., 1.])
tensor([-0.8446,  0.6366, -0.2988, -0.5696,  0.0608, -0.2000,  0.7738,  1.2003,
         0.7738,  1.4355,  1.3000,  1.1246,  1.3970,  1.4569, -0.4542,  0.1428])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.0384, -1.0179, -1.2207, -0.8486, -1.0832, -0.6228,  0.9332,  1.4243,
         0.9332,  0.9014,  0.4829,  0.4995,  0.7004,  0.8122, -1.2816, -0.3646])
tensor([0., 1., 0., 0., 0.])
tensor([-0.3046,  0.4713,  1.7364,  1.8200,  2.0253,  2.6193,  0.2297,  0.6670,
         0.2297,  0.7011,  0.3224,  0.6304,  0.6286,  1.2045,  1.7292,  0.5579])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.9635, -0.7939, -1.2285, -0.8492, -1.1192, -0.6248, -0.1820, -0.0027,
        -0.1820,  0.7375,  1.1020,  1.5425,  0.7316,  0.9713, -1.3010, -1.1950])
tensor([0., 1., 0., 0., 0.])
tensor([-0.2565,  0.4688, -0.8469, -0.7857, -0.6483, -0.5613,  0.6028,  0.2790,
         0.6028,  0.5815,  0.7764,  0.0079,  0.7303,  0.0908, -0.9068, -0.5492])
tensor([0., 0., 0., 1., 0.])
tensor([-0.2495,  0.3468, -0.2706, -0.4496, -0.1688, -0.3670,  0.0266, -0.3416,
         0.0266, -0.5241, -0.5399, -0.5193, -0.2844, -0.3674, -0.3395,  0.2350])
tensor([0., 0., 0., 0., 1.])
tensor([-1.2605,  0.8144, -0.8742, -0.8018, -0.5815, -0.5101,  1.2841,  2.7296,
         1.2841,  2.2201,  2.0324,  1.6769,  1.9287,  2.2090, -0.9463,  0.8808])
tensor([1., 0., 0., 0., 0.])
tensor([-0.4834,  0.4430, -0.0949, -0.4577, -0.1331, -0.3743, -0.3055, -0.3506,
        -0.3055,  0.4068,  0.7515,  0.7051,  0.3492,  0.1071, -0.4078,  0.7424])
tensor([0., 1., 0., 0., 0.])
tensor([-1.1742,  0.8112,  0.4726, -0.0324,  0.2703, -0.1813, -0.4555, -0.5225,
        -0.4555,  0.4041,  1.0255,  0.7356,  0.2798, -0.1274,  0.2925,  0.5579])
tensor([0., 0., 0., 1., 0.])
tensor([-0.7028,  0.6091,  1.7535,  1.8455,  1.2954,  0.8833, -0.4801, -0.4935,
        -0.4801, -0.0410,  0.2492,  0.5431, -0.3229, -0.3535,  1.7328,  0.3273])
tensor([0., 0., 0., 0., 1.])
tensor([-1.4552,  0.8192, -0.7665, -0.7804, -0.6782, -0.5720, -0.0822, -0.1242,
        -0.0822,  1.1050,  1.5497,  0.9648,  0.8839,  0.3478, -0.7869,  1.3421])
tensor([1., 0., 0., 0., 0.])
tensor([-0.2171,  0.0999, -1.1572, -0.8449, -0.9920, -0.6155,  1.1116,  1.8216,
         1.1116,  1.7025,  1.3992,  1.2318,  1.4765,  1.4564, -1.1935, -0.3646])
tensor([0., 1., 0., 0., 0.])
tensor([-0.5107,  0.5208,  1.2758,  1.4481,  1.8904,  1.7826,  0.6258,  0.3706,
         0.6258,  0.2585, -0.1068, -0.1052,  0.4353,  0.3912,  1.5050,  0.1889])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.3028, -0.3163, -1.2002, -0.8478, -1.0887, -0.6234, -0.0416,  0.1148,
        -0.0416,  0.5361,  0.7465,  0.9919,  0.6192,  0.8628, -1.2505, -0.2724])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.1707, -0.2993, -0.0574, -0.1613, -0.2133, -0.3786, -0.5692, -0.8494,
        -0.5692, -1.2871, -1.3460, -1.1039, -1.1893, -1.0241,  0.0998, -1.4256])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.2991, -0.7910,  0.0561, -0.0156, -0.1672, -0.1485, -0.6603, -0.4725,
        -0.6603, -1.3662, -1.5032, -1.2213, -1.4082, -1.1154,  0.3208, -0.7337])
tensor([0., 0., 0., 1., 0.])
tensor([-1.2560,  0.7963,  1.8521,  2.0430,  1.8752,  1.5289, -0.0207, -0.1661,
        -0.0207,  0.4136,  0.6515,  0.5796,  0.5417,  0.3306,  1.4001,  1.1115])
tensor([0., 0., 0., 0., 1.])
tensor([-1.0204,  0.6314,  0.8669,  0.4702,  0.8392,  0.4853, -0.1272,  0.0050,
        -0.1272,  0.4478,  0.5614,  0.8046,  0.5786,  0.7607,  0.4194,  1.1115])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.3799,  0.3984,  0.1720, -0.1545, -0.6359, -0.5647, -1.7558, -1.3294,
        -1.7558, -1.5603, -1.3908, -1.3008, -1.8075, -1.4516,  0.2680, -1.1950])
tensor([0., 0., 0., 1., 0.])
tensor([-1.5616,  0.8344,  0.4478, -0.0196,  0.6390,  0.4491,  0.1902,  0.8061,
         0.1902,  0.9637,  0.8806,  0.8911,  0.7105,  0.9066,  0.0775,  1.8034])
tensor([0., 0., 0., 0., 1.])
tensor([-0.4749,  0.6393,  0.0772, -0.2502, -0.0103, -0.3860, -0.3630, -0.7775,
        -0.3630, -0.2596, -0.0252, -0.5875, -0.2090, -0.7655,  0.0792, -0.3646])
tensor([0., 0., 1., 0., 0.])
tensor([-0.8579,  0.7109,  0.3641, -0.0334, -0.2515, -0.4757, -1.2099, -1.1596,
        -1.2099, -0.8699, -0.6409, -1.0105, -0.9927, -1.1973,  0.2658,  0.0044])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.6880,  0.0081, -0.0522, -0.2265, -0.0094, -0.3713, -0.1042, -0.7625,
        -0.1042, -0.7703, -0.6611, -0.7599, -0.5543, -0.9321,  0.0852, -1.0104])
tensor([0., 0., 1., 0., 0.])
tensor([-0.6651,  0.5932,  0.7218,  1.1501,  0.5412, -0.0504, -0.3602, -0.9754,
        -0.3602, -1.3426, -1.3491, -1.3007, -1.1805, -1.2580,  1.2458,  0.4657])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.6570, -1.1188, -1.0877, -0.8357, -0.8990, -0.6033,  1.0904,  1.2192,
         1.0904,  0.7316,  0.4327,  0.5060,  0.9916,  1.0236, -1.1359,  0.3734])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.0617,  0.2822,  0.1203, -0.2671, -0.3311, -0.4813, -1.0936, -1.0463,
        -1.0936, -0.6995, -0.2430, -0.4841, -0.7918, -0.9435,  0.0813, -0.2724])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0981, -0.0525, -1.0655, -0.8319, -0.8194, -0.5894,  1.7136,  2.0003,
         1.7136,  1.1121,  0.6837,  0.4935,  1.3932,  1.2174, -1.1418, -0.1801])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.2514,  0.1891, -0.1312, -0.1981, -0.0587, -0.4316, -0.0418, -0.9576,
        -0.0418, -1.1464, -1.1817, -1.2883, -0.8663, -1.2287,  0.1303, -0.6414])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.8987, -1.4795, -1.2049, -0.8480, -1.1053, -0.6237, -0.4267, -0.0217,
        -0.4267, -0.0881, -0.2542,  0.0559, -0.2915, -0.0178, -1.2825, -0.2724])
tensor([0., 1., 0., 0., 0.])
tensor([-1.1868,  0.7253, -0.6913, -0.7388, -0.2962, -0.4050,  1.4054,  2.0172,
         1.4054,  1.6121,  1.2636,  1.0719,  1.6889,  1.8618, -0.8027,  1.3421])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1260, -0.0509, -0.3082, -0.5387, -0.1434, -0.2499,  0.2096,  0.6504,
         0.2096,  0.2504, -0.1660,  0.0315,  0.0919,  0.3639, -0.4070,  0.0966])
tensor([0., 0., 1., 0., 0.])
tensor([-0.9340,  0.7865,  0.4970,  0.0892,  0.1573, -0.1077, -0.6702, -0.5084,
        -0.6702, -0.2705, -0.2772, -0.4617, -0.4531, -0.5184,  0.3278,  0.4195])
tensor([0., 0., 0., 0., 1.])
tensor([ 1.2907, -1.1256, -0.1479, -0.2823, -0.2567, -0.4889, -0.5004, -1.0583,
        -0.5004, -1.1679, -1.1862, -1.1959, -1.0267, -1.2346,  0.0451, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([-0.3766,  0.2804, -1.1305, -0.8434, -1.0179, -0.6191,  0.0220,  0.2182,
         0.0220,  1.1180,  1.4705,  1.2307,  0.8540,  0.6464, -1.2139, -0.1340])
tensor([1., 0., 0., 0., 0.])
tensor([-0.3768,  0.6123, -0.2398, -0.3033,  0.9253,  0.3226,  2.9416,  1.5844,
         2.9416,  0.2455,  0.0477, -0.7429,  0.9463,  0.0185, -0.0113,  0.1428])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.8727, -1.8398, -1.2144, -0.8482, -1.1355, -0.6253, -1.2221, -1.0892,
        -1.2221, -1.1359, -0.9953, -0.8785, -1.2695, -1.0898, -1.2593,  0.1889])
tensor([0., 1., 0., 0., 0.])
tensor([-1.8538,  0.9182,  0.4585, -0.1021,  0.6555,  0.2299,  0.1991,  0.5399,
         0.1991,  1.6438,  1.9139,  2.0636,  1.4985,  1.8078,  0.1909,  2.0340])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.3447, -0.0573,  0.2948, -0.0790,  0.5091,  0.1884,  0.2445,  0.3843,
         0.2445,  0.4882,  0.4696,  0.7613,  0.7709,  1.0460,  0.2481, -0.1340])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.4155,  0.2012,  0.2377, -0.0586, -0.5913, -0.5338, -1.7174, -1.2790,
        -1.7174, -1.5865, -1.4232, -1.2222, -1.8610, -1.4152,  0.2953, -0.8259])
tensor([0., 0., 0., 1., 0.])
tensor([-0.0522,  0.4182,  0.3565, -0.0330, -0.1804, -0.2729, -1.0779, -0.7202,
        -1.0779, -0.7609, -0.6174, -0.5008, -0.9144, -0.6628,  0.2639,  0.2350])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.7353, -0.3559,  0.2848, -0.0381, -0.4931, -0.4090, -1.5709, -1.0121,
        -1.5709, -1.4053, -1.3255, -1.0988, -1.7193, -1.2120,  0.2703, -0.7337])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.4425,  0.2576,  0.1719, -0.1795, -0.5431, -0.5453, -1.5727, -1.2723,
        -1.5727, -1.3323, -1.1522, -1.2083, -1.5406, -1.3636,  0.1055, -0.9643])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.0618,  0.2481, -0.6444, -0.7102, -0.4425, -0.5056,  0.4496,  0.0320,
         0.4496,  0.3215,  0.3218,  0.0430,  0.5365,  0.0529, -0.6845, -0.3646])
tensor([0., 0., 1., 0., 0.])
tensor([ 2.3450, -2.7182, -0.3025, -0.2232,  0.2839, -0.1129,  1.4372, -0.0367,
         1.4372, -1.1366, -1.4087, -1.0250, -0.5105, -0.5991,  0.1088, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([-1.2842,  0.7656,  2.1901,  2.2764,  2.1148,  2.0219, -0.0942,  0.0147,
        -0.0942,  0.9343,  1.0252,  1.0927,  0.8493,  0.8975,  1.6860,  1.4805])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.1173,  0.4900,  0.0666, -0.2472, -0.7537, -0.5847, -1.9227, -1.3641,
        -1.9227, -1.7180, -1.5473, -1.3953, -2.0685, -1.5789, -0.0063, -1.0104])
tensor([0., 0., 1., 0., 0.])
Epoch: [0][250/616]	Loss 3.1484e+01 (3.1162e+01)	Acc 0.212891 (0.201969)
tensor([-1.0484,  0.7624,  0.2222, -0.2112,  0.2282, -0.2298, -0.1439, -0.3878,
        -0.1439,  0.5085,  0.9156,  0.3912,  0.4551, -0.0769,  0.0881,  0.3273])
tensor([0., 0., 1., 0., 0.])
tensor([-0.6919,  0.6851,  0.1987, -0.1328, -0.1190, -0.4156, -0.7740, -0.9661,
        -0.7740, -0.6626, -0.4562, -0.8218, -0.6129, -0.9028,  0.2900, -0.1340])
tensor([0., 0., 0., 1., 0.])
tensor([-0.5666,  0.6120, -0.7477, -0.7661, -0.6754, -0.5624, -0.1613, -0.1540,
        -0.1613,  0.4347,  0.5404,  0.2649,  0.3909,  0.1046, -0.8801, -0.4108])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.6725, -1.1891, -1.1446, -0.8429, -0.9876, -0.6159,  0.8678,  0.8387,
         0.8678,  0.6909,  0.2403,  0.4942,  0.8039,  1.1352, -1.1911, -1.4256])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.2237, -0.6359, -1.1917, -0.8475, -1.0865, -0.6233, -0.2101,  0.0419,
        -0.2101,  0.5503,  0.8444,  0.9656,  0.2986,  0.3434, -1.2805,  0.5118])
tensor([1., 0., 0., 0., 0.])
tensor([-1.3596,  0.8026, -0.2568, -0.4310,  0.5748,  0.2207,  2.0595,  2.0888,
         2.0595,  0.8064,  0.4842,  0.0030,  1.2354,  0.8514,  0.0233,  2.2186])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.0457,  0.3417,  0.3057, -0.0797, -0.2963, -0.4605, -1.2316, -1.1051,
        -1.2316, -0.9248, -0.6777, -0.8136, -1.0150, -1.0449,  0.2675, -0.3646])
tensor([0., 0., 0., 1., 0.])
tensor([-1.3743,  0.8631,  1.8568,  1.8419,  1.7272,  1.5426, -0.1607, -0.0586,
        -0.1607,  0.5997,  0.6175,  0.7712,  0.3947,  0.4447,  1.7095,  1.0653])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.0118,  0.1865, -0.3615, -0.5813, -0.6632, -0.5656, -1.2270, -1.0887,
        -1.2270, -0.9805, -0.9484, -1.0838, -1.1822, -1.1774, -0.5116, -0.3185])
tensor([0., 0., 0., 1., 0.])
tensor([-1.3707,  0.7687,  2.2140,  2.5274,  1.9686,  2.2295, -0.2333,  0.0120,
        -0.2333,  0.4597,  0.6525,  0.9403,  0.5492,  0.8992,  1.8196,  2.1263])
tensor([0., 0., 0., 0., 1.])
tensor([-1.4556,  0.8894,  1.8803,  2.1556,  1.7365,  1.0824, -0.1721, -0.4785,
        -0.1721,  0.1716,  0.3302, -0.0926,  0.1588, -0.2974,  1.7343,  0.8808])
tensor([0., 0., 0., 0., 1.])
tensor([-1.0173e-03,  3.2398e-01, -8.1981e-01, -7.6773e-01, -5.0566e-01,
        -5.2154e-01,  1.2749e+00,  7.4770e-01,  1.2749e+00,  5.4461e-01,
         2.4906e-01, -3.0991e-01,  7.7814e-01,  1.5887e-01, -8.9218e-01,
        -4.5691e-01])
tensor([0., 1., 0., 0., 0.])
tensor([-0.0297,  0.4799, -0.8484, -0.7940, -0.7151, -0.5584,  0.1822,  0.6322,
         0.1822,  0.7971,  0.8329,  0.3300,  0.5931,  0.2405, -0.8757, -1.0104])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.0282,  0.4356,  0.1042,  0.0379, -0.0796, -0.4119, -0.5539, -1.0584,
        -0.5539, -1.2948, -1.2238, -1.2760, -1.1965, -1.3137,  0.2790, -0.8721])
tensor([0., 0., 0., 1., 0.])
tensor([-0.9487,  0.7802,  0.1429, -0.1368,  0.3055, -0.1384,  0.1594, -0.2754,
         0.1594, -0.0884, -0.2682, -0.6383, -0.0543, -0.4514,  0.0640,  0.5118])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.0388,  0.2163,  1.7200,  2.2831,  1.3133,  1.3085, -0.4368, -0.3917,
        -0.4368, -0.5723, -0.7966, -0.6545, -0.6832, -0.5094,  1.9459, -0.0879])
tensor([0., 0., 0., 0., 1.])
tensor([-0.5300,  0.4783,  0.2655, -0.0548,  0.1430, -0.2779, -0.3764, -0.7105,
        -0.3764, -0.3541, -0.2344, -0.6261, -0.2843, -0.7062,  0.0771,  0.1889])
tensor([0., 0., 0., 0., 1.])
tensor([-0.4879,  0.0986, -0.9930, -0.8263, -0.8745, -0.6017,  0.0977,  0.2893,
         0.0977,  1.0615,  1.3675,  1.1722,  0.9219,  0.7167, -1.1167,  0.3734])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.9348, -2.3937, -1.1594, -0.8417, -0.9502, -0.6138,  2.0665,  0.9416,
         2.0665, -0.0250, -0.6542, -0.6605,  0.5565,  0.1803, -1.1691, -1.4717])
tensor([0., 0., 1., 0., 0.])
tensor([ 1.9981, -1.8516, -1.1335, -0.8403, -0.9280, -0.6068,  1.6796,  1.8306,
         1.6796,  0.5734, -0.2872,  0.0289,  0.7829,  0.9428, -1.0925, -1.1950])
tensor([0., 1., 0., 0., 0.])
tensor([-0.8369,  0.2310, -0.8009, -0.7873, -0.7521, -0.5879, -0.3235, -0.4209,
        -0.3235,  0.6366,  1.0006,  0.5541,  0.5447,  0.0841, -0.8563,  1.2037])
tensor([1., 0., 0., 0., 0.])
tensor([ 1.4851, -3.2408, -1.2597, -0.8499, -1.1498, -0.6254, -0.3419,  0.0221,
        -0.3419, -0.7646, -0.9044,  0.1059, -0.9812, -0.1398, -1.3225, -1.1027])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.7321, -0.5371, -1.2129, -0.8486, -1.0829, -0.6231,  0.5890,  1.1027,
         0.5890,  1.6438,  1.7027,  2.2533,  1.4280,  1.7905, -1.2798, -1.2411])
tensor([0., 0., 1., 0., 0.])
tensor([-0.7498,  0.6663,  0.0749, -0.0158,  0.6999,  0.2126,  1.1404,  0.2939,
         1.1404, -0.3126, -0.4160, -0.4920,  0.1911, -0.2198,  0.2383,  1.0192])
tensor([0., 0., 0., 0., 1.])
tensor([-0.9047,  0.7774,  0.4417, -0.0160,  0.4854, -0.0694, -0.0550, -0.3040,
        -0.0550,  0.6263,  0.7442,  0.2142,  0.5612,  0.0546,  0.2906, -0.0417])
tensor([0., 0., 0., 1., 0.])
tensor([ 1.2031, -0.9942, -1.1954, -0.8476, -1.0896, -0.6233, -0.2006,  0.0456,
        -0.2006,  0.3864,  0.5175,  0.7699,  0.2768,  0.6403, -1.2655, -0.8721])
tensor([0., 1., 0., 0., 0.])
tensor([-0.5876,  0.7017,  0.0997, -0.2279, -0.3592, -0.5258, -1.1263, -1.2003,
        -1.1263, -0.9704, -0.6668, -0.9646, -1.0212, -1.2628,  0.0980, -0.3185])
tensor([0., 0., 1., 0., 0.])
tensor([-0.0801,  0.5125,  0.1517, -0.1896, -0.3699, -0.4961, -1.2089, -1.1373,
        -1.2089, -1.0156, -0.7224, -0.8586, -1.1339, -1.1914,  0.0987, -0.6875])
tensor([0., 0., 1., 0., 0.])
tensor([-1.1314,  0.7830, -0.5030, -0.6657, -0.1608, -0.3598,  0.8932,  1.0650,
         0.8932,  1.3297,  1.2679,  0.6843,  1.3534,  1.0254, -0.5175,  0.6963])
tensor([1., 0., 0., 0., 0.])
tensor([-0.5713,  0.4825, -0.4148, -0.5067,  0.0551, -0.2593,  1.2297,  0.4030,
         1.2297, -0.2532, -0.4490, -0.4822,  0.3173,  0.0378, -0.4166,  0.4195])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.7639, -0.0056, -0.2176, -0.1167,  0.0537, -0.3090,  0.4833, -0.7201,
         0.4833, -1.4354, -1.5880, -1.3479, -1.0871, -1.1415,  0.2538, -0.8259])
tensor([0., 0., 0., 1., 0.])
tensor([-0.1127,  0.4145,  0.0531,  0.1660,  1.3371,  0.9605,  2.5714,  1.2787,
         2.5714, -0.3905, -0.7286, -0.9853,  0.2144, -0.2971,  0.3759, -0.3185])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.5761,  0.0388,  0.1605, -0.2092, -0.4591, -0.4951, -1.3958, -1.1239,
        -1.3958, -1.1025, -0.9021, -0.9267, -1.2207, -1.0718,  0.1046, -0.7798])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.4741, -0.4498, -1.1994, -0.8480, -1.0699, -0.6222,  0.5022,  1.1656,
         0.5022,  1.6924,  1.6570,  2.0841,  1.4656,  1.8796, -1.2623, -0.3646])
tensor([0., 1., 0., 0., 0.])
tensor([ 4.1893e-01,  3.5658e-01,  3.4296e-01, -2.6221e-04, -3.9461e-01,
        -4.9340e-01, -1.4417e+00, -1.2090e+00, -1.4417e+00, -1.2396e+00,
        -1.0141e+00, -1.0006e+00, -1.3936e+00, -1.2433e+00,  1.9137e-01,
        -1.2872e+00])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.6550, -0.1828, -0.9570, -0.8176, -0.8743, -0.6000, -0.2122, -0.0933,
        -0.2122,  0.2942,  0.2794,  0.2572,  0.0566,  0.0335, -1.0157, -0.0417])
tensor([0., 1., 0., 0., 0.])
tensor([-0.6041,  0.6441,  1.9806,  2.6603,  2.7883,  4.0461,  0.6754,  0.8717,
         0.6754,  0.5686,  0.0418,  0.4951,  0.2823,  0.5759,  1.8598,  0.2350])
tensor([0., 0., 0., 0., 1.])
tensor([-0.3947,  0.4648,  0.0811, -0.2756, -0.1639, -0.1849, -0.6928, -0.1265,
        -0.6928, -0.4131, -0.5228, -0.4494, -0.7190, -0.4765,  0.3513,  0.6963])
tensor([1., 0., 0., 0., 0.])
tensor([-1.2124e+00,  7.1435e-01, -1.8541e-03, -3.9896e-01,  1.9039e-01,
        -7.4205e-02,  2.3650e-01,  6.7869e-01,  2.3650e-01,  1.0889e+00,
         1.1047e+00,  8.7101e-01,  8.2049e-01,  7.6898e-01, -1.8802e-01,
         2.0802e+00])
tensor([1., 0., 0., 0., 0.])
tensor([-0.8228,  0.7146,  0.3367, -0.1440,  0.2571, -0.1589, -0.2812, -0.3144,
        -0.2812,  0.5570,  0.7911,  0.6277,  0.6163,  0.4687,  0.1305,  0.1889])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.6111,  0.1997,  0.2146, -0.0387, -0.6559, -0.5699, -1.8243, -1.3628,
        -1.8243, -1.7440, -1.6581, -1.4281, -2.0513, -1.5587,  0.3176, -1.2872])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.3596,  0.1325, -1.0090, -0.8258, -0.8669, -0.6050,  0.3377,  0.0095,
         0.3377,  0.6521,  0.7057,  0.1479,  0.6323,  0.0483, -1.0795, -0.7798])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.4019,  0.3334,  0.2674,  0.0080, -0.5653, -0.5413, -1.6906, -1.3104,
        -1.6906, -1.6228, -1.4254, -1.2416, -1.8801, -1.4834,  0.3179, -1.2411])
tensor([0., 0., 0., 1., 0.])
tensor([-0.4291,  0.5979,  0.1901, -0.1986, -0.3651, -0.5209, -1.2415, -1.1999,
        -1.2415, -0.8915, -0.5925, -0.9406, -0.9970, -1.2136,  0.1347, -0.5953])
tensor([0., 0., 0., 1., 0.])
tensor([-0.7188,  0.7583,  0.3157, -0.0525, -0.1723, -0.4433, -1.0191, -1.0797,
        -1.0191, -0.7710, -0.4722, -0.8880, -0.8059, -1.0522,  0.2994, -0.3185])
tensor([0., 0., 0., 1., 0.])
tensor([-4.0708e-02,  4.3761e-01, -6.9707e-01, -7.5268e-01, -5.9542e-01,
        -5.3701e-01, -7.0731e-04,  1.2361e-01, -7.0731e-04,  7.5246e-01,
         7.9705e-01,  4.5554e-01,  5.8144e-01,  2.9769e-01, -8.2620e-01,
        -3.6465e-01])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.6334, -1.6727, -1.2249, -0.8489, -1.1230, -0.6248, -0.4734, -0.3627,
        -0.4734, -0.1063,  0.2432,  0.6500, -0.0345,  0.2866, -1.2780, -1.2872])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.3988,  0.3489,  0.2073, -0.1422, -0.5164, -0.4630, -1.5509, -1.0777,
        -1.5509, -1.3233, -1.1501, -1.0192, -1.5317, -1.0960,  0.1837, -0.9182])
tensor([0., 0., 1., 0., 0.])
tensor([-0.3384,  0.5720,  0.1294, -0.1951, -0.4337, -0.5169, -1.3131, -1.1905,
        -1.3131, -1.1599, -0.8821, -0.9489, -1.2611, -1.2281,  0.0776,  0.0505])
tensor([0., 0., 0., 0., 1.])
tensor([ 1.5285, -1.0803,  0.0773, -0.2582, -0.3775, -0.3451, -1.1370, -0.6455,
        -1.1370, -0.9389, -0.9761, -0.7769, -1.2801, -0.8889,  0.0587, -0.8259])
tensor([0., 0., 1., 0., 0.])
Epoch: [0][300/616]	Loss 3.2227e+01 (3.1282e+01)	Acc 0.194336 (0.202106)
tensor([ 8.2433e-01, -2.0208e-04,  1.5727e-01, -1.6936e-01, -5.9435e-01,
        -5.5979e-01, -1.6620e+00, -1.3132e+00, -1.6620e+00, -1.4739e+00,
        -1.2504e+00, -1.2117e+00, -1.7068e+00, -1.4460e+00,  1.9258e-01,
        -1.1488e+00])
tensor([0., 0., 1., 0., 0.])
tensor([-0.2298,  0.5652,  0.1390, -0.2353, -0.4099, -0.5253, -1.2751, -1.1954,
        -1.2751, -0.9548, -0.6626, -0.9590, -1.0788, -1.2271,  0.0778, -0.6875])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.9545, -0.1758, -0.3347, -0.3082, -0.3426, -0.4505, -0.3063, -0.9123,
        -0.3063, -1.6001, -1.7125, -1.3714, -1.4670, -1.2609, -0.0328, -1.0566])
tensor([0., 0., 1., 0., 0.])
tensor([ 0.5453,  0.2215, -1.1001, -0.8371, -0.9097, -0.6101,  1.1797,  0.5949,
         1.1797,  0.6969,  0.5305, -0.1824,  1.0100,  0.4380, -1.1177, -1.2872])
tensor([0., 0., 0., 1., 0.])
tensor([-0.5452,  0.5988,  2.5272,  3.2442,  1.9885,  2.5425, -0.4310, -0.1146,
        -0.4310,  0.1449,  0.1978,  0.7817,  0.1419,  0.6761,  1.8525,  0.3734])
tensor([0., 0., 0., 0., 1.])
tensor([ 2.6606, -3.8962, -1.2404, -0.8490, -1.0671, -0.6214,  3.1260,  3.8460,
         3.1260,  0.4903, -0.7562, -0.0422,  0.6637,  1.3684, -1.2735, -1.2872])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.3735, -0.1143, -1.0679, -0.8344, -0.9066, -0.6088,  0.6527,  0.4007,
         0.6527,  0.8342,  0.6745,  0.3475,  0.8666,  0.4953, -0.9510, -0.2263])
tensor([1., 0., 0., 0., 0.])
tensor([-0.5669,  0.6154,  0.2112, -0.1904, -0.3042, -0.4860, -1.1467, -1.1099,
        -1.1467, -0.7531, -0.4496, -0.8251, -0.8623, -1.0845,  0.0900,  0.1889])
tensor([0., 0., 1., 0., 0.])
tensor([-1.1994,  0.8405,  2.1680,  2.4832,  2.7438,  3.6819,  0.4486,  0.8034,
         0.4486,  1.1702,  1.1412,  1.3032,  1.0403,  1.3896,  1.8890,  0.8808])
tensor([0., 0., 0., 0., 1.])
tensor([ 0.2529,  0.3338, -0.1389, -0.0575,  0.2571, -0.3692,  0.7665, -0.9118,
         0.7665, -1.2242, -1.1674, -1.3125, -0.7570, -1.2819,  0.2009, -0.7337])
tensor([0., 0., 0., 1., 0.])
tensor([-0.6800,  0.6644,  0.1852, -0.1703, -0.3148, -0.4731, -1.1379, -1.0872,
        -1.1379, -0.9087, -0.7117, -1.0115, -1.0053, -1.1372,  0.2730,  0.0505])
tensor([0., 0., 0., 1., 0.])
tensor([-0.8466,  0.3963, -1.0268, -0.8322, -0.8660, -0.6005,  0.5574,  0.9719,
         0.5574,  1.8791,  1.9905,  2.1227,  1.6764,  1.8404, -1.1440,  1.1115])
tensor([1., 0., 0., 0., 0.])
tensor([-0.5888,  0.6012, -0.7668, -0.7703, -0.6230, -0.5476,  0.2214,  0.2422,
         0.2214,  0.7588,  0.7128,  0.3843,  0.7391,  0.6208, -0.8852,  0.6041])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1292, -0.0699, -1.2257, -0.8490, -1.1063, -0.6244,  0.2446,  0.2288,
         0.2446,  0.8337,  0.8903,  0.7178,  0.7529,  0.5398, -1.2957, -0.4569])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.8910, -0.3475, -1.2004, -0.8481, -1.0822, -0.6230,  0.1610,  0.6329,
         0.1610,  1.3302,  1.5812,  2.1826,  1.1528,  1.4569, -1.2701, -1.0566])
tensor([0., 1., 0., 0., 0.])
tensor([-1.2099,  0.7633,  2.0333,  1.8580,  1.8673,  1.8126, -0.1805,  0.1095,
        -0.1805,  1.0948,  1.5001,  2.0300,  1.1415,  1.5592,  1.5215,  1.0192])
tensor([0., 0., 0., 0., 1.])
tensor([-1.2170,  0.8485,  0.2657, -0.2306,  0.2175, -0.1983, -0.2387, -0.2637,
        -0.2387,  0.8110,  1.3837,  1.0135,  0.6138,  0.1982,  0.0668,  0.4195])
tensor([0., 0., 1., 0., 0.])
tensor([-0.2298,  0.6319,  0.1794, -0.1863, -0.4805, -0.5524, -1.4563, -1.2892,
        -1.4563, -1.1813, -0.8896, -1.1496, -1.3653, -1.4146,  0.1029, -0.9643])
tensor([0., 0., 1., 0., 0.])
tensor([-0.0519,  0.3487, -0.8637, -0.7981, -0.7565, -0.5850,  0.0116, -0.1050,
         0.0116,  0.6373,  0.8141,  0.5303,  0.5761,  0.2289, -0.9522, -0.0417])
tensor([0., 1., 0., 0., 0.])
tensor([ 1.1885, -0.4780, -0.2009, -0.1302,  0.5449, -0.0932,  1.7309, -0.1753,
         1.7309, -0.9094, -1.0962, -1.1371, -0.2434, -0.7489,  0.2326, -1.1950])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.0019, -0.3446, -1.1964, -0.8478, -1.0812, -0.6232,  0.0722,  0.2781,
         0.0722,  1.0337,  1.2027,  1.4134,  0.9900,  1.0202, -1.2360,  0.5579])
tensor([1., 0., 0., 0., 0.])
tensor([ 0.1687,  0.4551,  0.0849, -0.1746, -0.1400, -0.4159, -0.6486, -0.9348,
        -0.6486, -0.8206, -0.7747, -1.0695, -0.8180, -1.0888,  0.0610, -0.7337])
tensor([0., 0., 1., 0., 0.])
tensor([-0.2260,  0.3790, -0.4123, -0.6178, -0.4509, -0.4923, -0.4394, -0.4688,
        -0.4394, -0.1014,  0.1762, -0.0962, -0.1178, -0.3956, -0.5531, -0.1801])
tensor([0., 1., 0., 0., 0.])
tensor([ 0.1729, -0.4984, -1.2116, -0.8486, -1.0942, -0.6237,  0.1458,  0.5394,
         0.1458,  1.2729,  1.4180,  1.9672,  1.0902,  1.4171, -1.2889, -0.5953])
tensor([0., 0., 0., 1., 0.])
tensor([ 0.0904,  0.3043, -0.6488, -0.7128, -0.5970, -0.5498, -0.2191, -0.5076,
        -0.2191, -0.2404, -0.1110, -0.4809, -0.1054, -0.4632, -0.7101, -0.4569])
tensor([0., 1., 0., 0., 0.])
tensor([-1.6074,  0.9116,  2.1039,  2.3130,  1.8536,  1.6114, -0.2471, -0.2325,
        -0.2471,  0.4519,  0.6205,  0.5364,  0.4623,  0.3514,  1.3724,  1.6189])
tensor([0., 0., 0., 0., 1.])
tensor([-0.0555,  0.4084,  0.3477, -0.0302, -0.1608, -0.3763, -1.0340, -0.9461,
        -1.0340, -0.7544, -0.5467, -0.5511, -0.7877, -0.7618,  0.2404, -0.6414])
tensor([0., 0., 0., 1., 0.])
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0.1945, 0.2022, 0.2042, 0.1971, 0.2020], device='cuda:0',
       grad_fn=<SelectBackward0>)
Epoch: [0][  0/616]	Loss 5.0063e-01 (5.0063e-01)	Acc 0.215820 (0.215820)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0.1945, 0.2022, 0.2042, 0.1971, 0.2020], device='cuda:0',
       grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0.1032, 0.8016, 0.0021, 0.0172, 0.0760], device='cuda:0',
       grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([7.7923e-05, 2.6183e-23, 1.5061e-05, 2.4670e-01, 7.5321e-01],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([4.2219e-03, 0.0000e+00, 4.7436e-08, 9.9578e-01, 4.3926e-24],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([1.0000e+00, 0.0000e+00, 6.9021e-24, 0.0000e+00, 0.0000e+00],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([2.7866e-04, 0.0000e+00, 9.9972e-01, 0.0000e+00, 0.0000e+00],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([1.0000e+00, 0.0000e+00, 9.8697e-21, 0.0000e+00, 0.0000e+00],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([1.8025e-24, 0.0000e+00, 1.0000e+00, 0.0000e+00, 0.0000e+00],
       device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][ 50/616]	Loss 3.2422e+01 (2.9324e+01)	Acc 0.189453 (0.201995)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][100/616]	Loss 3.1172e+01 (3.0617e+01)	Acc 0.220703 (0.201810)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][150/616]	Loss 3.2969e+01 (3.1081e+01)	Acc 0.175781 (0.201049)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][200/616]	Loss 3.1523e+01 (3.1275e+01)	Acc 0.211914 (0.201658)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][250/616]	Loss 3.2344e+01 (3.1412e+01)	Acc 0.191406 (0.201510)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][300/616]	Loss 3.1641e+01 (3.1507e+01)	Acc 0.208984 (0.201324)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][350/616]	Loss 3.1797e+01 (3.1565e+01)	Acc 0.205078 (0.201453)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][400/616]	Loss 3.2422e+01 (3.1622e+01)	Acc 0.189453 (0.201196)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][450/616]	Loss 3.1719e+01 (3.1662e+01)	Acc 0.207031 (0.201122)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 1., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([1., 0., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 1., 0., 0., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 0., 1.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
Epoch: [0][500/616]	Loss 3.2578e+01 (3.1694e+01)	Acc 0.185547 (0.201051)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
tensor([0., 0., 0., 1., 0.], device='cuda:0')
tensor([0., 0., 1., 0., 0.], device='cuda:0', grad_fn=<SelectBackward0>)
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 4.9705e-01 (4.9705e-01)	Acc 0.280273 (0.280273)
tensor([3, 0, 3,  ..., 4, 0, 0], device='cuda:0')
tensor([3, 0, 1,  ..., 2, 3, 4], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1445e+01 (2.9545e+01)	Acc 0.213867 (0.204465)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 4, 1,  ..., 0, 3, 4], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1484e+01 (3.0784e+01)	Acc 0.212891 (0.201675)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 2, 1,  ..., 0, 4, 1], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1719e+01 (3.1189e+01)	Acc 0.207031 (0.201055)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 3, 0,  ..., 2, 0, 1], device='cuda:0')
Epoch: [0][200/616]	Loss 3.2148e+01 (3.1372e+01)	Acc 0.196289 (0.201259)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 0, 0,  ..., 0, 3, 2], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2539e+01 (3.1459e+01)	Acc 0.186523 (0.201958)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 1, 2,  ..., 3, 4, 0], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2188e+01 (3.1532e+01)	Acc 0.195312 (0.202045)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 3, 3,  ..., 3, 0, 3], device='cuda:0')
Epoch: [0][350/616]	Loss 3.2031e+01 (3.1579e+01)	Acc 0.199219 (0.202243)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 0, 1,  ..., 4, 4, 3], device='cuda:0')
Epoch: [0][400/616]	Loss 3.1719e+01 (3.1621e+01)	Acc 0.207031 (0.202224)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 3, 4,  ..., 3, 2, 2], device='cuda:0')
Epoch: [0][450/616]	Loss 3.1797e+01 (3.1665e+01)	Acc 0.205078 (0.201902)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 2, 4,  ..., 0, 3, 1], device='cuda:0')
Epoch: [0][500/616]	Loss 3.1680e+01 (3.1679e+01)	Acc 0.208008 (0.202205)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 3, 4,  ..., 4, 3, 0], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1992e+01 (3.1706e+01)	Acc 0.200195 (0.202051)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 0, 0,  ..., 3, 2, 0], device='cuda:0')
Epoch: [0][600/616]	Loss 3.1836e+01 (3.1726e+01)	Acc 0.204102 (0.201991)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 0, 1,  ..., 4, 3, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.200521 (0.201000)
Training Loss of Epoch 0: 31.731724221095806
Training Acc of Epoch 0: 0.20196106453252033
Testing of Epoch 0: 0.201
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.2188e+01 (3.2188e+01)	Acc 0.195312 (0.195312)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 0, 3,  ..., 3, 1, 1], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.2461e+01 (3.1896e+01)	Acc 0.188477 (0.202589)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 4, 4,  ..., 4, 0, 4], device='cuda:0')
Epoch: [1][100/616]	Loss 3.1782e+01 (3.1929e+01)	Acc 0.205078 (0.201704)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 0, 2,  ..., 1, 2, 4], device='cuda:0')
Epoch: [1][150/616]	Loss 3.2266e+01 (3.1927e+01)	Acc 0.193359 (0.201541)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 0, 1,  ..., 4, 2, 3], device='cuda:0')
Epoch: [1][200/616]	Loss 3.2420e+01 (3.1932e+01)	Acc 0.189453 (0.201478)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 4, 0,  ..., 2, 3, 0], device='cuda:0')
Epoch: [1][250/616]	Loss 3.2014e+01 (3.1924e+01)	Acc 0.198242 (0.201635)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 1, 3,  ..., 1, 0, 1], device='cuda:0')
Epoch: [1][300/616]	Loss 3.1968e+01 (3.1909e+01)	Acc 0.198242 (0.201652)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 0, 3,  ..., 4, 3, 1], device='cuda:0')
Epoch: [1][350/616]	Loss 3.3239e+01 (3.1893e+01)	Acc 0.168945 (0.202051)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 3, 0,  ..., 4, 3, 3], device='cuda:0')
Epoch: [1][400/616]	Loss 3.2070e+01 (3.1900e+01)	Acc 0.198242 (0.201871)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 3, 3,  ..., 3, 3, 4], device='cuda:0')
Epoch: [1][450/616]	Loss 3.1749e+01 (3.1912e+01)	Acc 0.206055 (0.201644)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 1, 1,  ..., 2, 3, 3], device='cuda:0')
Epoch: [1][500/616]	Loss 3.2695e+01 (3.1920e+01)	Acc 0.182617 (0.201493)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 2, 2,  ..., 0, 3, 3], device='cuda:0')
Epoch: [1][550/616]	Loss 3.1992e+01 (3.1926e+01)	Acc 0.200195 (0.201385)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 3, 2,  ..., 4, 4, 1], device='cuda:0')
Epoch: [1][600/616]	Loss 3.0818e+01 (3.1924e+01)	Acc 0.229492 (0.201459)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 3, 3,  ..., 4, 0, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using quant model
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using quant model
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0037e-01 (5.0037e-01)	Acc 0.221680 (0.221680)
tensor([2, 2, 4,  ..., 2, 2, 3], device='cuda:0')
tensor([3, 2, 0,  ..., 3, 2, 2], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1914e+01 (3.0279e+01)	Acc 0.202148 (0.205002)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 1,  ..., 4, 1, 4], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1953e+01 (3.1147e+01)	Acc 0.201172 (0.202129)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1719e+01 (3.1394e+01)	Acc 0.207031 (0.202304)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 0,  ..., 1, 4, 1], device='cuda:0')
Epoch: [0][200/616]	Loss 3.2422e+01 (3.1526e+01)	Acc 0.189453 (0.202202)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 2,  ..., 2, 4, 3], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2383e+01 (3.1595e+01)	Acc 0.190430 (0.202394)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 0,  ..., 4, 3, 2], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2148e+01 (3.1634e+01)	Acc 0.196289 (0.202703)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 1,  ..., 3, 2, 1], device='cuda:0')
Epoch: [0][350/616]	Loss 3.2305e+01 (3.1666e+01)	Acc 0.192383 (0.202813)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 3,  ..., 4, 1, 0], device='cuda:0')
Epoch: [0][400/616]	Loss 3.2070e+01 (3.1682e+01)	Acc 0.198242 (0.203103)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 4,  ..., 1, 0, 4], device='cuda:0')
Epoch: [0][450/616]	Loss 3.2227e+01 (3.1710e+01)	Acc 0.194336 (0.202930)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 1,  ..., 4, 4, 3], device='cuda:0')
Epoch: [0][500/616]	Loss 3.2266e+01 (3.1738e+01)	Acc 0.193359 (0.202677)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 2,  ..., 3, 4, 3], device='cuda:0')
Epoch: [0][550/616]	Loss 3.0977e+01 (3.1760e+01)	Acc 0.225586 (0.202464)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 3,  ..., 2, 0, 2], device='cuda:0')
Epoch: [0][600/616]	Loss 3.2734e+01 (3.1771e+01)	Acc 0.181641 (0.202482)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 1,  ..., 1, 3, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201942)
Training Loss of Epoch 0: 31.77247532305679
Training Acc of Epoch 0: 0.20252794715447153
Testing of Epoch 0: 0.20194166666666666
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.2500e+01 (3.2500e+01)	Acc 0.187500 (0.187500)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 4,  ..., 1, 3, 4], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.2773e+01 (3.1924e+01)	Acc 0.180664 (0.201900)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 3,  ..., 4, 0, 1], device='cuda:0')
Epoch: [1][100/616]	Loss 3.2734e+01 (3.1874e+01)	Acc 0.181641 (0.203144)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 0,  ..., 3, 3, 0], device='cuda:0')
Epoch: [1][150/616]	Loss 3.2305e+01 (3.1914e+01)	Acc 0.192383 (0.202136)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 3,  ..., 3, 2, 2], device='cuda:0')
Epoch: [1][200/616]	Loss 3.0820e+01 (3.1917e+01)	Acc 0.229492 (0.202076)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 4,  ..., 2, 1, 1], device='cuda:0')
Epoch: [1][250/616]	Loss 3.1719e+01 (3.1907e+01)	Acc 0.207031 (0.202316)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 1,  ..., 0, 1, 1], device='cuda:0')
Epoch: [1][300/616]	Loss 3.1680e+01 (3.1906e+01)	Acc 0.208008 (0.202343)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 4,  ..., 3, 3, 0], device='cuda:0')
Epoch: [1][350/616]	Loss 3.2031e+01 (3.1896e+01)	Acc 0.199219 (0.202591)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 4,  ..., 2, 3, 4], device='cuda:0')
Epoch: [1][400/616]	Loss 3.2461e+01 (3.1901e+01)	Acc 0.188477 (0.202477)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 1,  ..., 0, 1, 0], device='cuda:0')
Epoch: [1][450/616]	Loss 3.2695e+01 (3.1901e+01)	Acc 0.182617 (0.202462)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 4,  ..., 4, 1, 4], device='cuda:0')
Epoch: [1][500/616]	Loss 3.1016e+01 (3.1892e+01)	Acc 0.224609 (0.202688)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 1,  ..., 3, 2, 1], device='cuda:0')
Epoch: [1][550/616]	Loss 3.2422e+01 (3.1906e+01)	Acc 0.189453 (0.202349)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 2,  ..., 0, 3, 0], device='cuda:0')
Epoch: [1][600/616]	Loss 3.1641e+01 (3.1903e+01)	Acc 0.208008 (0.202410)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 1,  ..., 4, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201937)
Training Loss of Epoch 1: 31.90333222179878
Training Acc of Epoch 1: 0.20241044207317074
Testing of Epoch 1: 0.2019375
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 3.1641e+01 (3.1641e+01)	Acc 0.208984 (0.208984)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 2,  ..., 0, 0, 2], device='cuda:0')
Epoch: [2][ 50/616]	Loss 3.1523e+01 (3.1929e+01)	Acc 0.211914 (0.201765)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 2,  ..., 4, 1, 2], device='cuda:0')
Epoch: [2][100/616]	Loss 3.1797e+01 (3.1895e+01)	Acc 0.205078 (0.202632)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 2,  ..., 4, 1, 0], device='cuda:0')
Epoch: [2][150/616]	Loss 3.0742e+01 (3.1865e+01)	Acc 0.231445 (0.203377)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 4,  ..., 4, 2, 0], device='cuda:0')
Epoch: [2][200/616]	Loss 3.1875e+01 (3.1867e+01)	Acc 0.203125 (0.203324)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 4,  ..., 3, 4, 0], device='cuda:0')
Epoch: [2][250/616]	Loss 3.1602e+01 (3.1875e+01)	Acc 0.209961 (0.203109)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 3,  ..., 2, 4, 1], device='cuda:0')
Epoch: [2][300/616]	Loss 3.1562e+01 (3.1875e+01)	Acc 0.210938 (0.203119)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 3,  ..., 4, 4, 3], device='cuda:0')
Epoch: [2][350/616]	Loss 3.1523e+01 (3.1893e+01)	Acc 0.211914 (0.202674)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 0,  ..., 2, 0, 1], device='cuda:0')
Epoch: [2][400/616]	Loss 3.1289e+01 (3.1892e+01)	Acc 0.217773 (0.202694)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 4,  ..., 1, 0, 3], device='cuda:0')
Epoch: [2][450/616]	Loss 3.0977e+01 (3.1902e+01)	Acc 0.225586 (0.202443)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 3,  ..., 0, 3, 4], device='cuda:0')
Epoch: [2][500/616]	Loss 3.1445e+01 (3.1895e+01)	Acc 0.213867 (0.202616)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 3,  ..., 0, 2, 3], device='cuda:0')
Epoch: [2][550/616]	Loss 3.1367e+01 (3.1900e+01)	Acc 0.215820 (0.202489)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 1,  ..., 2, 1, 3], device='cuda:0')
Epoch: [2][600/616]	Loss 3.1836e+01 (3.1905e+01)	Acc 0.204102 (0.202376)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 3,  ..., 0, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201942)
Training Loss of Epoch 2: 31.90409441692073
Training Acc of Epoch 2: 0.20239297510162602
Testing of Epoch 2: 0.20194166666666666
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 3.1719e+01 (3.1719e+01)	Acc 0.207031 (0.207031)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 4,  ..., 4, 1, 4], device='cuda:0')
Epoch: [3][ 50/616]	Loss 3.2578e+01 (3.1860e+01)	Acc 0.185547 (0.203470)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 4,  ..., 1, 2, 3], device='cuda:0')
Epoch: [3][100/616]	Loss 3.2617e+01 (3.1928e+01)	Acc 0.184570 (0.201771)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 3,  ..., 1, 1, 3], device='cuda:0')
Epoch: [3][150/616]	Loss 3.1914e+01 (3.1901e+01)	Acc 0.202148 (0.202446)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 1,  ..., 0, 4, 4], device='cuda:0')
Epoch: [3][200/616]	Loss 3.1914e+01 (3.1895e+01)	Acc 0.202148 (0.202600)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 3,  ..., 3, 3, 0], device='cuda:0')
Epoch: [3][250/616]	Loss 3.1562e+01 (3.1900e+01)	Acc 0.210938 (0.202483)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 4,  ..., 0, 1, 4], device='cuda:0')
Epoch: [3][300/616]	Loss 3.1289e+01 (3.1904e+01)	Acc 0.217773 (0.202382)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 3,  ..., 4, 4, 4], device='cuda:0')
Epoch: [3][350/616]	Loss 3.2031e+01 (3.1896e+01)	Acc 0.199219 (0.202580)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [3][400/616]	Loss 3.1680e+01 (3.1911e+01)	Acc 0.208008 (0.202221)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 3,  ..., 3, 2, 4], device='cuda:0')
Epoch: [3][450/616]	Loss 3.1367e+01 (3.1905e+01)	Acc 0.215820 (0.202358)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 4,  ..., 0, 2, 3], device='cuda:0')
Epoch: [3][500/616]	Loss 3.2031e+01 (3.1904e+01)	Acc 0.199219 (0.202386)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 3,  ..., 0, 0, 2], device='cuda:0')
Epoch: [3][550/616]	Loss 3.1289e+01 (3.1908e+01)	Acc 0.217773 (0.202296)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 4,  ..., 4, 0, 3], device='cuda:0')
Epoch: [3][600/616]	Loss 3.1641e+01 (3.1904e+01)	Acc 0.208984 (0.202397)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 4,  ..., 1, 1, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201942)
Training Loss of Epoch 3: 31.904222243394308
Training Acc of Epoch 3: 0.2023850355691057
Testing of Epoch 3: 0.20194166666666666
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
Epoch: [4][  0/616]	Loss 3.2383e+01 (3.2383e+01)	Acc 0.190430 (0.190430)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 1,  ..., 2, 3, 3], device='cuda:0')
Epoch: [4][ 50/616]	Loss 3.0859e+01 (3.1917e+01)	Acc 0.228516 (0.202072)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 4,  ..., 1, 0, 4], device='cuda:0')
Epoch: [4][100/616]	Loss 3.1367e+01 (3.1921e+01)	Acc 0.215820 (0.201965)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 0,  ..., 4, 4, 3], device='cuda:0')
Epoch: [4][150/616]	Loss 3.2305e+01 (3.1935e+01)	Acc 0.192383 (0.201612)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 0,  ..., 0, 3, 4], device='cuda:0')
Epoch: [4][200/616]	Loss 3.2188e+01 (3.1927e+01)	Acc 0.195312 (0.201823)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 4,  ..., 2, 2, 3], device='cuda:0')
Epoch: [4][250/616]	Loss 3.1797e+01 (3.1911e+01)	Acc 0.205078 (0.202211)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 4,  ..., 1, 4, 4], device='cuda:0')
Epoch: [4][300/616]	Loss 3.1797e+01 (3.1919e+01)	Acc 0.205078 (0.202025)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 2,  ..., 3, 4, 4], device='cuda:0')
Epoch: [4][350/616]	Loss 3.1992e+01 (3.1920e+01)	Acc 0.200195 (0.201979)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 4,  ..., 4, 1, 0], device='cuda:0')
Epoch: [4][400/616]	Loss 3.2227e+01 (3.1916e+01)	Acc 0.194336 (0.202102)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 4,  ..., 4, 2, 0], device='cuda:0')
Epoch: [4][450/616]	Loss 3.1523e+01 (3.1915e+01)	Acc 0.211914 (0.202112)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 3,  ..., 1, 1, 4], device='cuda:0')
Epoch: [4][500/616]	Loss 3.2383e+01 (3.1916e+01)	Acc 0.190430 (0.202102)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 0,  ..., 1, 0, 3], device='cuda:0')
Epoch: [4][550/616]	Loss 3.0703e+01 (3.1904e+01)	Acc 0.232422 (0.202397)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 4,  ..., 2, 4, 0], device='cuda:0')
Epoch: [4][600/616]	Loss 3.2227e+01 (3.1901e+01)	Acc 0.194336 (0.202464)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 4,  ..., 3, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201937)
Training Loss of Epoch 4: 31.904540618648372
Training Acc of Epoch 4: 0.2023755081300813
Testing of Epoch 4: 0.2019375
Early stopping not satisfied.
---------------------
Start epoch 5
---------------------
Epoch: [5][  0/616]	Loss 3.1133e+01 (3.1133e+01)	Acc 0.221680 (0.221680)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 0,  ..., 1, 1, 2], device='cuda:0')
Epoch: [5][ 50/616]	Loss 3.2461e+01 (3.1936e+01)	Acc 0.188477 (0.201612)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 0,  ..., 1, 4, 4], device='cuda:0')
Epoch: [5][100/616]	Loss 3.1289e+01 (3.1885e+01)	Acc 0.217773 (0.202854)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 3,  ..., 1, 4, 3], device='cuda:0')
Epoch: [5][150/616]	Loss 3.2109e+01 (3.1875e+01)	Acc 0.197266 (0.203119)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 4,  ..., 2, 1, 3], device='cuda:0')
Epoch: [5][200/616]	Loss 3.1406e+01 (3.1869e+01)	Acc 0.214844 (0.203261)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 3,  ..., 0, 3, 0], device='cuda:0')
Epoch: [5][250/616]	Loss 3.1914e+01 (3.1895e+01)	Acc 0.202148 (0.202611)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 0,  ..., 2, 1, 3], device='cuda:0')
Epoch: [5][300/616]	Loss 3.1680e+01 (3.1915e+01)	Acc 0.208008 (0.202126)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 4,  ..., 1, 3, 4], device='cuda:0')
Epoch: [5][350/616]	Loss 3.1523e+01 (3.1912e+01)	Acc 0.211914 (0.202204)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 4,  ..., 4, 2, 0], device='cuda:0')
Epoch: [5][400/616]	Loss 3.1523e+01 (3.1903e+01)	Acc 0.211914 (0.202421)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 3, 1,  ..., 3, 0, 1], device='cuda:0')
Epoch: [5][450/616]	Loss 3.2109e+01 (3.1905e+01)	Acc 0.197266 (0.202365)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 0,  ..., 1, 4, 1], device='cuda:0')
Epoch: [5][500/616]	Loss 3.1289e+01 (3.1905e+01)	Acc 0.217773 (0.202363)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 4,  ..., 4, 1, 4], device='cuda:0')
Epoch: [5][550/616]	Loss 3.2617e+01 (3.1907e+01)	Acc 0.184570 (0.202311)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 2,  ..., 0, 0, 4], device='cuda:0')
Epoch: [5][600/616]	Loss 3.1719e+01 (3.1901e+01)	Acc 0.207031 (0.202464)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 0,  ..., 0, 0, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201937)
Training Loss of Epoch 5: 31.903587874745934
Training Acc of Epoch 5: 0.2024025025406504
Testing of Epoch 5: 0.2019375
Early stopping not satisfied.
---------------------
Start epoch 6
---------------------
Epoch: [6][  0/616]	Loss 3.1055e+01 (3.1055e+01)	Acc 0.223633 (0.223633)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 0,  ..., 2, 1, 3], device='cuda:0')
Epoch: [6][ 50/616]	Loss 3.1758e+01 (3.1939e+01)	Acc 0.206055 (0.201536)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 0,  ..., 3, 0, 1], device='cuda:0')
Epoch: [6][100/616]	Loss 3.1445e+01 (3.1859e+01)	Acc 0.213867 (0.203531)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 4,  ..., 4, 1, 3], device='cuda:0')
Epoch: [6][150/616]	Loss 3.2070e+01 (3.1899e+01)	Acc 0.198242 (0.202530)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 4,  ..., 1, 0, 3], device='cuda:0')
Epoch: [6][200/616]	Loss 3.2656e+01 (3.1891e+01)	Acc 0.183594 (0.202712)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 0,  ..., 3, 1, 3], device='cuda:0')
Epoch: [6][250/616]	Loss 3.1914e+01 (3.1884e+01)	Acc 0.202148 (0.202903)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 4,  ..., 1, 2, 1], device='cuda:0')
Epoch: [6][300/616]	Loss 3.1836e+01 (3.1883e+01)	Acc 0.204102 (0.202901)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 1,  ..., 4, 3, 2], device='cuda:0')
Epoch: [6][350/616]	Loss 3.2109e+01 (3.1898e+01)	Acc 0.197266 (0.202538)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 4,  ..., 2, 3, 0], device='cuda:0')
Epoch: [6][400/616]	Loss 3.2266e+01 (3.1901e+01)	Acc 0.193359 (0.202463)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 3,  ..., 3, 2, 3], device='cuda:0')
Epoch: [6][450/616]	Loss 3.3320e+01 (3.1897e+01)	Acc 0.166992 (0.202558)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 0,  ..., 3, 4, 4], device='cuda:0')
Epoch: [6][500/616]	Loss 3.1875e+01 (3.1912e+01)	Acc 0.203125 (0.202201)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 3,  ..., 4, 0, 1], device='cuda:0')
Epoch: [6][550/616]	Loss 3.1914e+01 (3.1910e+01)	Acc 0.202148 (0.202239)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 4,  ..., 1, 2, 0], device='cuda:0')
Epoch: [6][600/616]	Loss 3.2188e+01 (3.1906e+01)	Acc 0.195312 (0.202330)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 4,  ..., 1, 3, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201937)
Training Loss of Epoch 6: 31.903779217479673
Training Acc of Epoch 6: 0.2023977388211382
Testing of Epoch 6: 0.2019375
Early stopping not satisfied.
---------------------
Start epoch 7
---------------------
Epoch: [7][  0/616]	Loss 3.2031e+01 (3.2031e+01)	Acc 0.199219 (0.199219)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 0,  ..., 3, 2, 3], device='cuda:0')
Epoch: [7][ 50/616]	Loss 3.1953e+01 (3.1870e+01)	Acc 0.201172 (0.203240)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 1,  ..., 4, 2, 3], device='cuda:0')
Epoch: [7][100/616]	Loss 3.1250e+01 (3.1808e+01)	Acc 0.218750 (0.204798)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 2,  ..., 4, 1, 2], device='cuda:0')
Epoch: [7][150/616]	Loss 3.1836e+01 (3.1851e+01)	Acc 0.204102 (0.203726)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 0,  ..., 4, 2, 0], device='cuda:0')
Epoch: [7][200/616]	Loss 3.1758e+01 (3.1852e+01)	Acc 0.206055 (0.203698)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 1,  ..., 0, 3, 3], device='cuda:0')
Epoch: [7][250/616]	Loss 3.1836e+01 (3.1866e+01)	Acc 0.204102 (0.203343)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 1,  ..., 3, 3, 3], device='cuda:0')
Epoch: [7][300/616]	Loss 3.2344e+01 (3.1876e+01)	Acc 0.191406 (0.203096)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 3, 3,  ..., 2, 4, 3], device='cuda:0')
Epoch: [7][350/616]	Loss 3.2188e+01 (3.1888e+01)	Acc 0.195312 (0.202786)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 2,  ..., 0, 4, 4], device='cuda:0')
Epoch: [7][400/616]	Loss 3.2891e+01 (3.1893e+01)	Acc 0.177734 (0.202679)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 2,  ..., 4, 0, 2], device='cuda:0')
Epoch: [7][450/616]	Loss 3.2578e+01 (3.1904e+01)	Acc 0.185547 (0.202404)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 0,  ..., 0, 0, 0], device='cuda:0')
Epoch: [7][500/616]	Loss 3.3008e+01 (3.1916e+01)	Acc 0.174805 (0.202098)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 4,  ..., 2, 1, 2], device='cuda:0')
Epoch: [7][550/616]	Loss 3.2305e+01 (3.1912e+01)	Acc 0.192383 (0.202200)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 0,  ..., 4, 3, 1], device='cuda:0')
Epoch: [7][600/616]	Loss 3.1953e+01 (3.1906e+01)	Acc 0.201172 (0.202316)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 0,  ..., 2, 1, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201879)
Training Loss of Epoch 7: 31.90265375462974
Training Acc of Epoch 7: 0.2024072662601626
Testing of Epoch 7: 0.20187916666666667
Early stopping not satisfied.
---------------------
Start epoch 8
---------------------
Epoch: [8][  0/616]	Loss 3.2070e+01 (3.2070e+01)	Acc 0.198242 (0.198242)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 4,  ..., 3, 4, 1], device='cuda:0')
Epoch: [8][ 50/616]	Loss 3.2539e+01 (3.1952e+01)	Acc 0.186523 (0.200980)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 2,  ..., 2, 4, 2], device='cuda:0')
Epoch: [8][100/616]	Loss 3.2344e+01 (3.1927e+01)	Acc 0.191406 (0.201597)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 4,  ..., 0, 4, 0], device='cuda:0')
Epoch: [8][150/616]	Loss 3.2109e+01 (3.1885e+01)	Acc 0.197266 (0.202621)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 0,  ..., 4, 3, 1], device='cuda:0')
Epoch: [8][200/616]	Loss 3.1950e+01 (3.1877e+01)	Acc 0.201172 (0.202838)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 1,  ..., 4, 1, 1], device='cuda:0')
Epoch: [8][250/616]	Loss 3.2188e+01 (3.1851e+01)	Acc 0.195312 (0.203471)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 0,  ..., 4, 1, 0], device='cuda:0')
Epoch: [8][300/616]	Loss 3.2812e+01 (3.1884e+01)	Acc 0.179688 (0.202651)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 1, 0,  ..., 2, 0, 3], device='cuda:0')
Epoch: [8][350/616]	Loss 3.2031e+01 (3.1905e+01)	Acc 0.199219 (0.202165)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 2, 4,  ..., 3, 2, 4], device='cuda:0')
Epoch: [8][400/616]	Loss 3.1055e+01 (3.1903e+01)	Acc 0.223633 (0.202241)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 3, 3,  ..., 3, 4, 0], device='cuda:0')
Epoch: [8][450/616]	Loss 3.1680e+01 (3.1912e+01)	Acc 0.208008 (0.202029)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 0,  ..., 4, 0, 2], device='cuda:0')
Epoch: [8][500/616]	Loss 3.1602e+01 (3.1921e+01)	Acc 0.209961 (0.201827)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 0,  ..., 1, 0, 1], device='cuda:0')
Epoch: [8][550/616]	Loss 3.2109e+01 (3.1920e+01)	Acc 0.197266 (0.201874)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 2,  ..., 2, 2, 4], device='cuda:0')
Epoch: [8][600/616]	Loss 3.1992e+01 (3.1926e+01)	Acc 0.200195 (0.201724)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 2,  ..., 3, 1, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 8: 31.92341503670545
Training Acc of Epoch 8: 0.20179433434959348
Testing of Epoch 8: 0.20135833333333333
Early stopping not satisfied.
---------------------
Start epoch 9
---------------------
Epoch: [9][  0/616]	Loss 3.1484e+01 (3.1484e+01)	Acc 0.212891 (0.212891)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 3, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [9][ 50/616]	Loss 3.2461e+01 (3.2014e+01)	Acc 0.188477 (0.199640)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 1,  ..., 3, 3, 0], device='cuda:0')
Epoch: [9][100/616]	Loss 3.1523e+01 (3.1942e+01)	Acc 0.211914 (0.201462)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 3, 3,  ..., 1, 3, 2], device='cuda:0')
Epoch: [9][150/616]	Loss 3.1914e+01 (3.1940e+01)	Acc 0.202148 (0.201495)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 2,  ..., 0, 2, 1], device='cuda:0')
Epoch: [9][200/616]	Loss 3.1367e+01 (3.1960e+01)	Acc 0.215820 (0.200997)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 0, 2,  ..., 1, 0, 0], device='cuda:0')
Epoch: [9][250/616]	Loss 3.1133e+01 (3.1951e+01)	Acc 0.221680 (0.201230)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 2, 3,  ..., 1, 3, 4], device='cuda:0')
Epoch: [9][300/616]	Loss 3.2109e+01 (3.1948e+01)	Acc 0.197266 (0.201311)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 4,  ..., 3, 1, 1], device='cuda:0')
Epoch: [9][350/616]	Loss 3.1758e+01 (3.1960e+01)	Acc 0.206055 (0.201008)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 0, 4,  ..., 0, 0, 2], device='cuda:0')
Epoch: [9][400/616]	Loss 3.2656e+01 (3.1965e+01)	Acc 0.183594 (0.200875)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 3,  ..., 0, 2, 2], device='cuda:0')
Epoch: [9][450/616]	Loss 3.1445e+01 (3.1975e+01)	Acc 0.213867 (0.200631)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 2,  ..., 3, 0, 1], device='cuda:0')
Epoch: [9][500/616]	Loss 3.3203e+01 (3.1973e+01)	Acc 0.169922 (0.200675)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 3, 0,  ..., 4, 2, 1], device='cuda:0')
Epoch: [9][550/616]	Loss 3.2227e+01 (3.1960e+01)	Acc 0.194336 (0.200998)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 4, 3,  ..., 1, 2, 3], device='cuda:0')
Epoch: [9][600/616]	Loss 3.1992e+01 (3.1967e+01)	Acc 0.200195 (0.200829)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 1, 4,  ..., 2, 1, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 9: 31.96220782520325
Training Acc of Epoch 9: 0.2009448043699187
Testing of Epoch 9: 0.20135833333333333
Early stopping not satisfied.
---------------------
Start epoch 10
---------------------
Epoch: [10][  0/616]	Loss 3.2344e+01 (3.2344e+01)	Acc 0.191406 (0.191406)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 3, 2,  ..., 3, 3, 2], device='cuda:0')
Epoch: [10][ 50/616]	Loss 3.1445e+01 (3.1882e+01)	Acc 0.213867 (0.202953)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 1, 0,  ..., 1, 1, 4], device='cuda:0')
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0022e-01 (5.0022e-01)	Acc 0.199219 (0.199219)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 1,  ..., 4, 4, 1], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.2930e+01 (3.1355e+01)	Acc 0.176758 (0.199659)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 4, 0,  ..., 1, 1, 0], device='cuda:0')
Epoch: [0][100/616]	Loss 3.2070e+01 (3.1719e+01)	Acc 0.198242 (0.198706)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 1,  ..., 0, 0, 4], device='cuda:0')
Epoch: [0][150/616]	Loss 3.2031e+01 (3.1814e+01)	Acc 0.199219 (0.199096)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 2, 2,  ..., 1, 0, 4], device='cuda:0')
Epoch: [0][200/616]	Loss 3.2031e+01 (3.1834e+01)	Acc 0.199219 (0.199972)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 1, 1,  ..., 1, 0, 2], device='cuda:0')
Epoch: [0][250/616]	Loss 3.1406e+01 (3.1857e+01)	Acc 0.214844 (0.200226)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 1, 4,  ..., 2, 4, 3], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2422e+01 (3.1856e+01)	Acc 0.189453 (0.200818)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 3, 4,  ..., 4, 2, 4], device='cuda:0')
Epoch: [0][350/616]	Loss 3.1367e+01 (3.1882e+01)	Acc 0.215820 (0.200568)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 3, 3,  ..., 0, 2, 3], device='cuda:0')
Epoch: [0][400/616]	Loss 3.1484e+01 (3.1872e+01)	Acc 0.212891 (0.201109)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 1,  ..., 2, 0, 3], device='cuda:0')
Epoch: [0][450/616]	Loss 3.2734e+01 (3.1883e+01)	Acc 0.181641 (0.201053)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 4, 0,  ..., 3, 2, 1], device='cuda:0')
Epoch: [0][500/616]	Loss 3.1680e+01 (3.1903e+01)	Acc 0.208008 (0.200759)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 2, 0,  ..., 1, 2, 2], device='cuda:0')
Epoch: [0][550/616]	Loss 3.2109e+01 (3.1911e+01)	Acc 0.197266 (0.200702)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 1, 1,  ..., 4, 3, 2], device='cuda:0')
Epoch: [0][600/616]	Loss 3.1406e+01 (3.1912e+01)	Acc 0.214844 (0.200810)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 3,  ..., 4, 0, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 0: 31.905841358502705
Training Acc of Epoch 0: 0.20098926575203252
Testing of Epoch 0: 0.20135833333333333
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.2227e+01 (3.2227e+01)	Acc 0.194336 (0.194336)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 2, 2,  ..., 4, 4, 1], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.3086e+01 (3.2071e+01)	Acc 0.172852 (0.198223)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 1, 2,  ..., 2, 4, 0], device='cuda:0')
Epoch: [1][100/616]	Loss 3.2188e+01 (3.1983e+01)	Acc 0.195312 (0.200437)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 4,  ..., 3, 4, 0], device='cuda:0')
Epoch: [1][150/616]	Loss 3.2305e+01 (3.1988e+01)	Acc 0.192383 (0.200312)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 2,  ..., 2, 1, 4], device='cuda:0')
Epoch: [1][200/616]	Loss 3.0898e+01 (3.1984e+01)	Acc 0.227539 (0.200409)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 4, 0,  ..., 3, 0, 2], device='cuda:0')
Epoch: [1][250/616]	Loss 3.1602e+01 (3.1978e+01)	Acc 0.209961 (0.200557)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 2, 0,  ..., 3, 2, 4], device='cuda:0')
Epoch: [1][300/616]	Loss 3.2383e+01 (3.1990e+01)	Acc 0.190430 (0.200260)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 4,  ..., 2, 3, 4], device='cuda:0')
Epoch: [1][350/616]	Loss 3.2148e+01 (3.1981e+01)	Acc 0.196289 (0.200476)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 3, 1,  ..., 2, 1, 1], device='cuda:0')
Epoch: [1][400/616]	Loss 3.1875e+01 (3.1963e+01)	Acc 0.203125 (0.200923)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 2, 2,  ..., 0, 1, 2], device='cuda:0')
Epoch: [1][450/616]	Loss 3.2188e+01 (3.1965e+01)	Acc 0.195312 (0.200873)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 1,  ..., 4, 3, 3], device='cuda:0')
Epoch: [1][500/616]	Loss 3.0859e+01 (3.1971e+01)	Acc 0.228516 (0.200737)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 1, 2,  ..., 4, 4, 3], device='cuda:0')
Epoch: [1][550/616]	Loss 3.2266e+01 (3.1963e+01)	Acc 0.193359 (0.200922)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 3,  ..., 0, 0, 4], device='cuda:0')
Epoch: [1][600/616]	Loss 3.2422e+01 (3.1959e+01)	Acc 0.189453 (0.201014)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 1, 2,  ..., 3, 0, 3], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 1: 31.961128048780488
Training Acc of Epoch 1: 0.2009717987804878
Testing of Epoch 1: 0.20135833333333333
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 3.1602e+01 (3.1602e+01)	Acc 0.209961 (0.209961)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 3, 3,  ..., 2, 3, 1], device='cuda:0')
Epoch: [2][ 50/616]	Loss 3.2109e+01 (3.2004e+01)	Acc 0.197266 (0.199889)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 2,  ..., 1, 2, 1], device='cuda:0')
Epoch: [2][100/616]	Loss 3.1602e+01 (3.1971e+01)	Acc 0.209961 (0.200727)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 2, 3,  ..., 1, 0, 2], device='cuda:0')
Epoch: [2][150/616]	Loss 3.2148e+01 (3.1954e+01)	Acc 0.196289 (0.201140)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 2, 0,  ..., 2, 2, 1], device='cuda:0')
Epoch: [2][200/616]	Loss 3.1641e+01 (3.1947e+01)	Acc 0.208984 (0.201337)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 2,  ..., 4, 3, 1], device='cuda:0')
Epoch: [2][250/616]	Loss 3.1758e+01 (3.1946e+01)	Acc 0.206055 (0.201359)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 2, 4,  ..., 3, 0, 0], device='cuda:0')
Epoch: [2][300/616]	Loss 3.1797e+01 (3.1946e+01)	Acc 0.205078 (0.201354)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 3, 3,  ..., 0, 2, 0], device='cuda:0')
Epoch: [2][350/616]	Loss 3.1992e+01 (3.1977e+01)	Acc 0.200195 (0.200571)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 1, 1,  ..., 1, 3, 4], device='cuda:0')
Epoch: [2][400/616]	Loss 3.2812e+01 (3.1978e+01)	Acc 0.179688 (0.200551)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 0,  ..., 2, 2, 0], device='cuda:0')
Epoch: [2][450/616]	Loss 3.1484e+01 (3.1979e+01)	Acc 0.212891 (0.200520)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 0,  ..., 0, 2, 0], device='cuda:0')
Epoch: [2][500/616]	Loss 3.2305e+01 (3.1989e+01)	Acc 0.192383 (0.200285)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 0,  ..., 2, 4, 3], device='cuda:0')
Epoch: [2][550/616]	Loss 3.1992e+01 (3.1970e+01)	Acc 0.200195 (0.200745)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 0, 4,  ..., 1, 0, 0], device='cuda:0')
Epoch: [2][600/616]	Loss 3.1992e+01 (3.1964e+01)	Acc 0.200195 (0.200892)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 3, 4,  ..., 1, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 2: 31.9614456300813
Training Acc of Epoch 2: 0.20096385924796747
Testing of Epoch 2: 0.20135833333333333
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 3.2305e+01 (3.2305e+01)	Acc 0.192383 (0.192383)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 2,  ..., 4, 0, 1], device='cuda:0')
Epoch: [3][ 50/616]	Loss 3.2461e+01 (3.2037e+01)	Acc 0.188477 (0.199066)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 1,  ..., 2, 0, 1], device='cuda:0')
Epoch: [3][100/616]	Loss 3.1758e+01 (3.2000e+01)	Acc 0.206055 (0.200002)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 2, 1,  ..., 4, 4, 4], device='cuda:0')
Epoch: [3][150/616]	Loss 3.1484e+01 (3.1984e+01)	Acc 0.212891 (0.200396)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 1, 4,  ..., 3, 0, 1], device='cuda:0')
Epoch: [3][200/616]	Loss 3.1875e+01 (3.1988e+01)	Acc 0.203125 (0.200302)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 3,  ..., 2, 4, 2], device='cuda:0')
Epoch: [3][250/616]	Loss 3.2109e+01 (3.1971e+01)	Acc 0.197266 (0.200724)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 2, 3,  ..., 2, 2, 4], device='cuda:0')
Epoch: [3][300/616]	Loss 3.1055e+01 (3.1956e+01)	Acc 0.223633 (0.201110)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 1, 1,  ..., 0, 4, 1], device='cuda:0')
Epoch: [3][350/616]	Loss 3.2305e+01 (3.1959e+01)	Acc 0.192383 (0.201022)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 4, 0,  ..., 4, 1, 0], device='cuda:0')
Epoch: [3][400/616]	Loss 3.1094e+01 (3.1960e+01)	Acc 0.222656 (0.201004)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 0, 1,  ..., 1, 2, 3], device='cuda:0')
Epoch: [3][450/616]	Loss 3.1914e+01 (3.1952e+01)	Acc 0.202148 (0.201194)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 1, 4,  ..., 2, 3, 0], device='cuda:0')
Epoch: [3][500/616]	Loss 3.2344e+01 (3.1956e+01)	Acc 0.191406 (0.201098)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 2, 2,  ..., 0, 0, 3], device='cuda:0')
Epoch: [3][550/616]	Loss 3.1445e+01 (3.1959e+01)	Acc 0.213867 (0.201019)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 0,  ..., 4, 0, 0], device='cuda:0')
Epoch: [3][600/616]	Loss 3.2188e+01 (3.1956e+01)	Acc 0.195312 (0.201109)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 3, 4,  ..., 0, 3, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 3: 31.9614456300813
Training Acc of Epoch 3: 0.20096385924796747
Testing of Epoch 3: 0.20135833333333333
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0202e-01 (5.0202e-01)	Acc 0.157227 (0.157227)
tensor([4, 2, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 3,  ..., 3, 2, 1], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.2930e+01 (3.0969e+01)	Acc 0.176758 (0.202914)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 3, 4,  ..., 1, 4, 4], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1992e+01 (3.1478e+01)	Acc 0.200195 (0.201491)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 0, 4,  ..., 3, 3, 4], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1875e+01 (3.1634e+01)	Acc 0.203125 (0.201431)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 4,  ..., 4, 2, 3], device='cuda:0')
Epoch: [0][200/616]	Loss 3.1992e+01 (3.1735e+01)	Acc 0.200195 (0.200812)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 2, 4,  ..., 3, 1, 4], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2383e+01 (3.1784e+01)	Acc 0.190430 (0.200752)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 3, 3,  ..., 1, 1, 2], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2578e+01 (3.1819e+01)	Acc 0.185547 (0.200643)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 1, 2,  ..., 0, 1, 2], device='cuda:0')
Epoch: [0][350/616]	Loss 3.2070e+01 (3.1833e+01)	Acc 0.198242 (0.200860)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 3, 0,  ..., 4, 2, 1], device='cuda:0')
Epoch: [0][400/616]	Loss 3.2227e+01 (3.1829e+01)	Acc 0.194336 (0.201372)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 3, 1,  ..., 3, 2, 4], device='cuda:0')
Epoch: [0][450/616]	Loss 3.3164e+01 (3.1870e+01)	Acc 0.170898 (0.200657)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 2, 1,  ..., 4, 0, 2], device='cuda:0')
Epoch: [0][500/616]	Loss 3.2422e+01 (3.1869e+01)	Acc 0.189453 (0.200946)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([4, 2, 1,  ..., 0, 4, 4], device='cuda:0')
Epoch: [0][550/616]	Loss 3.2500e+01 (3.1883e+01)	Acc 0.187500 (0.200817)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([3, 4, 1,  ..., 2, 0, 3], device='cuda:0')
Epoch: [0][600/616]	Loss 3.1094e+01 (3.1879e+01)	Acc 0.222656 (0.201079)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 4, 0,  ..., 0, 2, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.208333 (0.201358)
Training Loss of Epoch 0: 31.88195636815172
Training Acc of Epoch 0: 0.20105436991869918
Testing Acc of Epoch 0: 0.20135833333333333
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.2031e+01 (3.2031e+01)	Acc 0.199219 (0.199219)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 0, 4,  ..., 0, 3, 1], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.1562e+01 (3.1926e+01)	Acc 0.210938 (0.201861)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 3, 3,  ..., 4, 0, 4], device='cuda:0')
Epoch: [1][100/616]	Loss 3.2734e+01 (3.1976e+01)	Acc 0.181641 (0.200601)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([1, 1, 2,  ..., 4, 1, 4], device='cuda:0')
Epoch: [1][150/616]	Loss 3.1914e+01 (3.1968e+01)	Acc 0.202148 (0.200810)
tensor([3, 3, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([0, 0, 0,  ..., 2, 0, 2], device='cuda:0')
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0214e-01 (5.0214e-01)	Acc 0.187500 (0.187500)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 4, 1,  ..., 1, 2, 1], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1875e+01 (3.1093e+01)	Acc 0.203125 (0.202704)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 1,  ..., 0, 2, 3], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1211e+01 (3.1543e+01)	Acc 0.219727 (0.201327)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1875e+01 (3.1681e+01)	Acc 0.203125 (0.201230)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 2,  ..., 0, 4, 4], device='cuda:0')
Epoch: [0][200/616]	Loss 3.1797e+01 (3.1716e+01)	Acc 0.205078 (0.202042)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 2,  ..., 2, 4, 2], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2188e+01 (3.1740e+01)	Acc 0.195312 (0.202436)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 2,  ..., 2, 4, 0], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2773e+01 (3.1784e+01)	Acc 0.180664 (0.202006)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 1,  ..., 0, 4, 0], device='cuda:0')
Epoch: [0][350/616]	Loss 3.2148e+01 (3.1811e+01)	Acc 0.196289 (0.201823)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 2,  ..., 2, 2, 4], device='cuda:0')
Epoch: [0][400/616]	Loss 3.1406e+01 (3.1832e+01)	Acc 0.214844 (0.201649)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 3,  ..., 4, 2, 3], device='cuda:0')
Epoch: [0][450/616]	Loss 3.1992e+01 (3.1832e+01)	Acc 0.200195 (0.201954)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 1,  ..., 0, 3, 4], device='cuda:0')
Epoch: [0][500/616]	Loss 3.0664e+01 (3.1830e+01)	Acc 0.233398 (0.202215)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 1,  ..., 2, 1, 2], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1875e+01 (3.1833e+01)	Acc 0.203125 (0.202331)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 1,  ..., 3, 3, 0], device='cuda:0')
Epoch: [0][600/616]	Loss 3.2070e+01 (3.1839e+01)	Acc 0.198242 (0.202337)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 1,  ..., 2, 4, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195312 (0.201942)
Training Loss of Epoch 0: 31.840119365172658
Training Acc of Epoch 0: 0.20234057418699186
Testing Acc of Epoch 0: 0.20194166666666666
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0172e-01 (5.0172e-01)	Acc 0.190430 (0.190430)
tensor([4, 4, 0,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 3, 0,  ..., 3, 3, 2], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.2031e+01 (3.1574e+01)	Acc 0.199219 (0.194030)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 0, 2,  ..., 0, 3, 3], device='cuda:0')
Epoch: [0][100/616]	Loss 3.2852e+01 (3.1940e+01)	Acc 0.178711 (0.193108)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 1, 1,  ..., 4, 1, 2], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1094e+01 (3.2022e+01)	Acc 0.222656 (0.193851)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 3, 0,  ..., 4, 1, 2], device='cuda:0')
Epoch: [0][200/616]	Loss 3.1914e+01 (3.2078e+01)	Acc 0.202148 (0.193840)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 0, 0,  ..., 1, 4, 3], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2188e+01 (3.2143e+01)	Acc 0.195312 (0.193056)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([3, 4, 0,  ..., 2, 1, 4], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2461e+01 (3.2174e+01)	Acc 0.188477 (0.192847)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 1, 4,  ..., 0, 2, 2], device='cuda:0')
Epoch: [0][350/616]	Loss 3.1250e+01 (3.2176e+01)	Acc 0.218750 (0.193176)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 1, 4,  ..., 3, 2, 3], device='cuda:0')
Epoch: [0][400/616]	Loss 3.2461e+01 (3.2179e+01)	Acc 0.188477 (0.193413)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([1, 1, 4,  ..., 1, 1, 4], device='cuda:0')
Epoch: [0][450/616]	Loss 3.2500e+01 (3.2180e+01)	Acc 0.187500 (0.193617)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 1, 0,  ..., 0, 0, 2], device='cuda:0')
Epoch: [0][500/616]	Loss 3.1914e+01 (3.2181e+01)	Acc 0.202148 (0.193775)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 1, 2,  ..., 3, 2, 0], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1836e+01 (3.2191e+01)	Acc 0.204102 (0.193675)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 0, 1,  ..., 0, 3, 0], device='cuda:0')
Epoch: [0][600/616]	Loss 3.2109e+01 (3.2191e+01)	Acc 0.197266 (0.193826)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 0, 4,  ..., 4, 2, 3], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.158854 (0.194650)
Training Loss of Epoch 0: 32.19241311714901
Training Acc of Epoch 0: 0.19381192835365854
Testing Acc of Epoch 0: 0.19465
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.1367e+01 (3.1367e+01)	Acc 0.215820 (0.215820)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 0, 4,  ..., 1, 2, 1], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.2461e+01 (3.2168e+01)	Acc 0.188477 (0.195791)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 4, 3,  ..., 0, 1, 2], device='cuda:0')
Epoch: [1][100/616]	Loss 3.2188e+01 (3.2200e+01)	Acc 0.195312 (0.194993)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([1, 2, 1,  ..., 3, 4, 3], device='cuda:0')
Epoch: [1][150/616]	Loss 3.1484e+01 (3.2231e+01)	Acc 0.212891 (0.194220)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([1, 1, 4,  ..., 2, 4, 2], device='cuda:0')
Epoch: [1][200/616]	Loss 3.1367e+01 (3.2249e+01)	Acc 0.215820 (0.193772)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([3, 2, 2,  ..., 1, 1, 4], device='cuda:0')
Epoch: [1][250/616]	Loss 3.1680e+01 (3.2243e+01)	Acc 0.208008 (0.193924)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([1, 2, 4,  ..., 0, 1, 1], device='cuda:0')
Epoch: [1][300/616]	Loss 3.2188e+01 (3.2249e+01)	Acc 0.195312 (0.193775)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([0, 4, 2,  ..., 3, 4, 3], device='cuda:0')
Epoch: [1][350/616]	Loss 3.1758e+01 (3.2255e+01)	Acc 0.206055 (0.193635)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 2, 4,  ..., 4, 0, 3], device='cuda:0')
Epoch: [1][400/616]	Loss 3.1953e+01 (3.2250e+01)	Acc 0.201172 (0.193744)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([3, 1, 3,  ..., 2, 4, 3], device='cuda:0')
Epoch: [1][450/616]	Loss 3.2070e+01 (3.2248e+01)	Acc 0.198242 (0.193801)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([3, 2, 1,  ..., 4, 0, 1], device='cuda:0')
Epoch: [1][500/616]	Loss 3.2500e+01 (3.2243e+01)	Acc 0.187500 (0.193934)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 3, 0,  ..., 3, 4, 2], device='cuda:0')
Epoch: [1][550/616]	Loss 3.1523e+01 (3.2251e+01)	Acc 0.211914 (0.193726)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 1, 3,  ..., 0, 3, 1], device='cuda:0')
Epoch: [1][600/616]	Loss 3.1719e+01 (3.2247e+01)	Acc 0.207031 (0.193835)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([3, 4, 1,  ..., 3, 4, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.158854 (0.194650)
Training Loss of Epoch 1: 32.24752286585366
Training Acc of Epoch 1: 0.19381192835365854
Testing Acc of Epoch 1: 0.19465
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 3.1680e+01 (3.1680e+01)	Acc 0.208008 (0.208008)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([2, 1, 1,  ..., 1, 3, 2], device='cuda:0')
Epoch: [2][ 50/616]	Loss 3.3320e+01 (3.2229e+01)	Acc 0.166992 (0.194278)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([2, 4, 2,  ..., 1, 2, 3], device='cuda:0')
Epoch: [2][100/616]	Loss 3.2070e+01 (3.2247e+01)	Acc 0.198242 (0.193823)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([2, 3, 4,  ..., 4, 2, 1], device='cuda:0')
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0130e-01 (5.0130e-01)	Acc 0.196289 (0.196289)
tensor([1, 1, 1,  ..., 1, 1, 1], device='cuda:0')
tensor([4, 2, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1406e+01 (3.1204e+01)	Acc 0.214844 (0.202072)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 4, 0,  ..., 4, 3, 0], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1484e+01 (3.1608e+01)	Acc 0.212891 (0.200804)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 1, 1,  ..., 0, 4, 4], device='cuda:0')
Epoch: [0][150/616]	Loss 3.1719e+01 (3.1733e+01)	Acc 0.207031 (0.200648)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 3, 3,  ..., 0, 0, 0], device='cuda:0')
Epoch: [0][200/616]	Loss 3.2344e+01 (3.1783e+01)	Acc 0.191406 (0.200910)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 4, 3,  ..., 0, 3, 4], device='cuda:0')
Epoch: [0][250/616]	Loss 3.2305e+01 (3.1822e+01)	Acc 0.192383 (0.200826)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 1, 4,  ..., 2, 1, 4], device='cuda:0')
Epoch: [0][300/616]	Loss 3.1562e+01 (3.1832e+01)	Acc 0.210938 (0.201172)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 2, 0,  ..., 1, 0, 1], device='cuda:0')
Epoch: [0][350/616]	Loss 3.1758e+01 (3.1861e+01)	Acc 0.206055 (0.200885)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 1, 1,  ..., 4, 4, 1], device='cuda:0')
Epoch: [0][400/616]	Loss 3.1758e+01 (3.1872e+01)	Acc 0.206055 (0.200943)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 2, 2,  ..., 4, 1, 0], device='cuda:0')
Epoch: [0][450/616]	Loss 3.1797e+01 (3.1876e+01)	Acc 0.205078 (0.201085)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 3, 0,  ..., 2, 0, 0], device='cuda:0')
Epoch: [0][500/616]	Loss 3.1445e+01 (3.1885e+01)	Acc 0.213867 (0.201053)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 2, 2,  ..., 1, 4, 0], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1484e+01 (3.1878e+01)	Acc 0.212891 (0.201401)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 3, 1,  ..., 2, 4, 3], device='cuda:0')
Epoch: [0][600/616]	Loss 3.2305e+01 (3.1885e+01)	Acc 0.192383 (0.201370)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 4, 2,  ..., 3, 1, 3], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.216346 (0.201170)
Training Loss of Epoch 0: 31.88890804614478
Training Acc of Epoch 0: 0.2012989075203252
Testing Acc of Epoch 0: 0.2011695652173913
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.1641e+01 (3.1641e+01)	Acc 0.208984 (0.208984)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 0, 0,  ..., 2, 2, 3], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.1602e+01 (3.1904e+01)	Acc 0.209961 (0.202397)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 3, 0,  ..., 1, 1, 4], device='cuda:0')
Epoch: [1][100/616]	Loss 3.1953e+01 (3.1890e+01)	Acc 0.201172 (0.202758)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 3, 1,  ..., 2, 1, 1], device='cuda:0')
Epoch: [1][150/616]	Loss 3.1953e+01 (3.1905e+01)	Acc 0.201172 (0.202381)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 1, 0,  ..., 0, 2, 1], device='cuda:0')
Epoch: [1][200/616]	Loss 3.2422e+01 (3.1928e+01)	Acc 0.189453 (0.201794)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([2, 0, 2,  ..., 3, 0, 1], device='cuda:0')
Epoch: [1][250/616]	Loss 3.2266e+01 (3.1937e+01)	Acc 0.193359 (0.201565)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 3, 2,  ..., 1, 2, 3], device='cuda:0')
Epoch: [1][300/616]	Loss 3.2188e+01 (3.1944e+01)	Acc 0.195312 (0.201405)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([3, 3, 2,  ..., 3, 1, 3], device='cuda:0')
Epoch: [1][350/616]	Loss 3.2031e+01 (3.1945e+01)	Acc 0.199219 (0.201372)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 2, 1,  ..., 0, 1, 4], device='cuda:0')
Epoch: [1][400/616]	Loss 3.1758e+01 (3.1941e+01)	Acc 0.206055 (0.201476)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 2, 3,  ..., 1, 2, 0], device='cuda:0')
Epoch: [1][450/616]	Loss 3.2031e+01 (3.1941e+01)	Acc 0.199219 (0.201482)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([1, 1, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [1][500/616]	Loss 3.2500e+01 (3.1944e+01)	Acc 0.187500 (0.201390)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 1, 0,  ..., 4, 1, 2], device='cuda:0')
Epoch: [1][550/616]	Loss 3.1914e+01 (3.1948e+01)	Acc 0.202148 (0.201307)
tensor([2, 2, 2,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 4, 0,  ..., 2, 4, 0], device='cuda:0')
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/train/jetImage_6_100p_20000_30000.h5
Could not load file: ../../data/train/jetImage_1_100p_20000_30000.h5
Could not load file: ../../data/train/jetImage_6_100p_60000_70000.h5
Could not load file: ../../data/train/jetImage_6_100p_80000_90000.h5
Could not load file: ../../data/train/jetImage_4_100p_70000_80000.h5
Could not load file: ../../data/train/jetImage_4_100p_30000_40000.h5
Could not load file: ../../data/train/jetImage_0_100p_40000_50000.h5
Could not load file: ../../data/train/jetImage_5_100p_0_10000.h5
Could not load file: ../../data/train/jetImage_1_100p_50000_60000.h5
Could not load file: ../../data/train/jetImage_3_100p_70000_80000.h5
Could not load file: ../../data/test/jetImage_9_100p_50000_60000.h5
Could not load file: ../../data/test/jetImage_8_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_8_100p_30000_40000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=0)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 1.3868e+00 (1.3868e+00)	Acc 0.213867 (0.213867)
tensor([0, 4, 1,  ..., 1, 4, 4], device='cuda:0')
tensor([4, 1, 2,  ..., 1, 2, 2], device='cuda:0')
Epoch: [0][ 50/616]	Loss 2.0020e+01 (1.9542e+01)	Acc 0.210938 (0.204102)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 0,  ..., 0, 0, 1], device='cuda:0')
Epoch: [0][100/616]	Loss 2.0059e+01 (1.9793e+01)	Acc 0.204102 (0.204218)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 4,  ..., 0, 0, 0], device='cuda:0')
Epoch: [0][150/616]	Loss 2.0059e+01 (1.9876e+01)	Acc 0.182617 (0.203073)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 3, 2,  ..., 3, 4, 2], device='cuda:0')
Epoch: [0][200/616]	Loss 2.0059e+01 (1.9922e+01)	Acc 0.194336 (0.202683)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 0, 2,  ..., 3, 1, 1], device='cuda:0')
Epoch: [0][250/616]	Loss 2.0059e+01 (1.9949e+01)	Acc 0.215820 (0.202728)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 3, 0,  ..., 1, 0, 2], device='cuda:0')
Epoch: [0][300/616]	Loss 2.0059e+01 (1.9967e+01)	Acc 0.187500 (0.202684)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 3, 0,  ..., 2, 4, 4], device='cuda:0')
Epoch: [0][350/616]	Loss 2.0059e+01 (1.9980e+01)	Acc 0.210938 (0.202532)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 2, 0,  ..., 3, 1, 0], device='cuda:0')
Epoch: [0][400/616]	Loss 2.0059e+01 (1.9990e+01)	Acc 0.188477 (0.202519)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 3, 1,  ..., 3, 4, 1], device='cuda:0')
Epoch: [0][450/616]	Loss 2.0059e+01 (1.9998e+01)	Acc 0.197266 (0.202003)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 2,  ..., 1, 1, 1], device='cuda:0')
Epoch: [0][500/616]	Loss 2.0059e+01 (2.0004e+01)	Acc 0.213867 (0.202150)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 0, 3,  ..., 0, 0, 2], device='cuda:0')
Epoch: [0][550/616]	Loss 2.0059e+01 (2.0009e+01)	Acc 0.199219 (0.201891)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 2,  ..., 2, 1, 1], device='cuda:0')
Epoch: [0][600/616]	Loss 2.0059e+01 (2.0013e+01)	Acc 0.197266 (0.201625)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 3,  ..., 3, 3, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.197115 (0.200522)
Training Loss of Epoch 0: 20.013906437594716
Training Acc of Epoch 0: 0.20155138465447153
Testing Acc of Epoch 0: 0.20052173913043478
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.203125 (0.203125)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 0,  ..., 1, 0, 0], device='cuda:0')
Epoch: [1][ 50/616]	Loss 2.0048e+01 (2.0057e+01)	Acc 0.194336 (0.199142)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 1,  ..., 3, 2, 0], device='cuda:0')
Epoch: [1][100/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.179688 (0.200137)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 1, 4,  ..., 3, 0, 2], device='cuda:0')
Epoch: [1][150/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.220703 (0.200790)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 1, 3,  ..., 0, 1, 2], device='cuda:0')
Epoch: [1][200/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.192383 (0.201201)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 1, 1,  ..., 3, 0, 1], device='cuda:0')
Epoch: [1][250/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.194336 (0.201584)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 0,  ..., 4, 0, 0], device='cuda:0')
Epoch: [1][300/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.187500 (0.201221)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 2,  ..., 3, 4, 0], device='cuda:0')
Epoch: [1][350/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.205078 (0.201812)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 2,  ..., 4, 4, 0], device='cuda:0')
Epoch: [1][400/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.184570 (0.201946)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 4, 2,  ..., 1, 2, 4], device='cuda:0')
Epoch: [1][450/616]	Loss 1.9082e+01 (2.0052e+01)	Acc 0.171875 (0.201410)
tensor([0, 1, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 3,  ..., 3, 1, 2], device='cuda:0')
Epoch: [1][500/616]	Loss 2.0059e+01 (1.9996e+01)	Acc 0.184570 (0.199591)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 0, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [1][550/616]	Loss 2.0059e+01 (2.0002e+01)	Acc 0.230469 (0.199660)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 1,  ..., 1, 2, 3], device='cuda:0')
Epoch: [1][600/616]	Loss 2.0059e+01 (2.0007e+01)	Acc 0.194336 (0.199765)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 1, 3,  ..., 2, 0, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195513 (0.201217)
Training Loss of Epoch 1: 20.0078720930146
Training Acc of Epoch 1: 0.19978245680894308
Testing Acc of Epoch 1: 0.20121739130434782
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.202148 (0.202148)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 2, 3,  ..., 2, 3, 3], device='cuda:0')
Epoch: [2][ 50/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.203125 (0.202857)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 2, 2,  ..., 1, 0, 2], device='cuda:0')
Epoch: [2][100/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.208008 (0.201781)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 0, 3,  ..., 1, 1, 3], device='cuda:0')
Epoch: [2][150/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.216797 (0.202789)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 4, 4,  ..., 2, 1, 3], device='cuda:0')
Epoch: [2][200/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.191406 (0.202892)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 0,  ..., 1, 2, 2], device='cuda:0')
Epoch: [2][250/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.191406 (0.201767)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 4, 3,  ..., 3, 0, 4], device='cuda:0')
Epoch: [2][300/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.193359 (0.201506)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 2, 0,  ..., 2, 1, 1], device='cuda:0')
Epoch: [2][350/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.186523 (0.201631)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 3,  ..., 2, 4, 0], device='cuda:0')
Epoch: [2][400/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.206055 (0.201562)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 3,  ..., 3, 2, 0], device='cuda:0')
Epoch: [2][450/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.217773 (0.201488)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 1, 2,  ..., 2, 4, 3], device='cuda:0')
Epoch: [2][500/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.224609 (0.201371)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 2,  ..., 4, 0, 4], device='cuda:0')
Epoch: [2][550/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.198242 (0.201636)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 0,  ..., 3, 2, 2], device='cuda:0')
Epoch: [2][600/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.187500 (0.201502)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 4,  ..., 3, 3, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195513 (0.201217)
Training Loss of Epoch 2: 20.058444908576284
Training Acc of Epoch 2: 0.2014672256097561
Testing Acc of Epoch 2: 0.20121739130434782
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.177734 (0.177734)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 2, 1,  ..., 3, 0, 1], device='cuda:0')
Epoch: [3][ 50/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.182617 (0.201689)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 4, 1,  ..., 3, 1, 4], device='cuda:0')
Epoch: [3][100/616]	Loss 2.0020e+01 (2.0058e+01)	Acc 0.185547 (0.201182)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 1,  ..., 4, 3, 2], device='cuda:0')
Epoch: [3][150/616]	Loss 2.0059e+01 (2.0040e+01)	Acc 0.179688 (0.200829)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 0, 2,  ..., 4, 3, 4], device='cuda:0')
Epoch: [3][200/616]	Loss 2.0059e+01 (2.0045e+01)	Acc 0.212891 (0.200783)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 4, 1,  ..., 2, 0, 1], device='cuda:0')
Epoch: [3][250/616]	Loss 2.0059e+01 (2.0048e+01)	Acc 0.208008 (0.201277)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 0, 1,  ..., 4, 4, 0], device='cuda:0')
Epoch: [3][300/616]	Loss 2.0059e+01 (2.0049e+01)	Acc 0.203125 (0.201302)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 1, 3,  ..., 0, 4, 0], device='cuda:0')
Epoch: [3][350/616]	Loss 2.0059e+01 (2.0051e+01)	Acc 0.192383 (0.201495)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 3, 2,  ..., 3, 0, 4], device='cuda:0')
Epoch: [3][400/616]	Loss 2.0098e+01 (2.0053e+01)	Acc 0.178711 (0.201262)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 1, 4,  ..., 0, 1, 2], device='cuda:0')
Epoch: [3][450/616]	Loss 2.0059e+01 (2.0056e+01)	Acc 0.242188 (0.201271)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 2,  ..., 4, 0, 4], device='cuda:0')
Epoch: [3][500/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.221680 (0.201556)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 2, 3,  ..., 3, 0, 1], device='cuda:0')
Epoch: [3][550/616]	Loss 2.0098e+01 (2.0061e+01)	Acc 0.207031 (0.201401)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 4, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [3][600/616]	Loss 2.0098e+01 (2.0063e+01)	Acc 0.192383 (0.201146)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 1,  ..., 4, 0, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.200709)
Training Loss of Epoch 3: 20.06342967583881
Training Acc of Epoch 3: 0.20108771595528455
Testing Acc of Epoch 3: 0.20070869565217392
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
Epoch: [4][  0/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.217773 (0.217773)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 0,  ..., 4, 2, 2], device='cuda:0')
Epoch: [4][ 50/616]	Loss 2.0059e+01 (2.0079e+01)	Acc 0.198242 (0.201306)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 2,  ..., 1, 2, 0], device='cuda:0')
Epoch: [4][100/616]	Loss 2.0098e+01 (2.0079e+01)	Acc 0.199219 (0.201791)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 0,  ..., 3, 2, 1], device='cuda:0')
Epoch: [4][150/616]	Loss 2.0078e+01 (2.0080e+01)	Acc 0.199219 (0.201870)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 2, 2,  ..., 0, 0, 2], device='cuda:0')
Epoch: [4][200/616]	Loss 2.0059e+01 (2.0081e+01)	Acc 0.202148 (0.201906)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 4, 0,  ..., 0, 0, 3], device='cuda:0')
Epoch: [4][250/616]	Loss 2.0098e+01 (2.0082e+01)	Acc 0.201172 (0.201592)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 2, 3,  ..., 3, 0, 3], device='cuda:0')
Epoch: [4][300/616]	Loss 2.0098e+01 (2.0083e+01)	Acc 0.199219 (0.201139)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 1, 2,  ..., 4, 1, 1], device='cuda:0')
Epoch: [4][350/616]	Loss 2.0059e+01 (2.0083e+01)	Acc 0.200195 (0.201211)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 2, 4,  ..., 4, 4, 2], device='cuda:0')
Epoch: [4][400/616]	Loss 2.0098e+01 (2.0083e+01)	Acc 0.195312 (0.201133)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 0, 4,  ..., 2, 3, 4], device='cuda:0')
Epoch: [4][450/616]	Loss 2.0059e+01 (2.0083e+01)	Acc 0.208984 (0.201083)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 0, 0,  ..., 0, 2, 3], device='cuda:0')
Epoch: [4][500/616]	Loss 2.0059e+01 (2.0084e+01)	Acc 0.211914 (0.200852)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 3, 4,  ..., 3, 3, 4], device='cuda:0')
Epoch: [4][550/616]	Loss 2.0059e+01 (2.0084e+01)	Acc 0.217773 (0.200895)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 4,  ..., 0, 1, 0], device='cuda:0')
Epoch: [4][600/616]	Loss 2.0098e+01 (2.0083e+01)	Acc 0.190430 (0.201037)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 0,  ..., 2, 1, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
three_layer_model(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act1): ReLU()
  (act2): ReLU()
  (act3): ReLU()
  (softmax): Softmax(dim=0)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
three_layer_model(
  (fc1): Linear(in_features=16, out_features=64, bias=True)
  (fc2): Linear(in_features=64, out_features=32, bias=True)
  (fc3): Linear(in_features=32, out_features=32, bias=True)
  (fc4): Linear(in_features=32, out_features=5, bias=True)
  (act1): ReLU()
  (act2): ReLU()
  (act3): ReLU()
  (softmax): Softmax(dim=0)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 1.3841e+00 (1.3841e+00)	Acc 0.392578 (0.392578)
tensor([3, 3, 2,  ..., 2, 2, 1], device='cuda:0')
tensor([3, 2, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [0][ 50/616]	Loss 2.0020e+01 (1.9501e+01)	Acc 0.208984 (0.204599)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 2,  ..., 4, 0, 1], device='cuda:0')
Epoch: [0][100/616]	Loss 2.0059e+01 (1.9780e+01)	Acc 0.202148 (0.203454)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 1,  ..., 0, 4, 4], device='cuda:0')
Epoch: [0][150/616]	Loss 2.0059e+01 (1.9872e+01)	Acc 0.200195 (0.202355)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 4,  ..., 3, 1, 3], device='cuda:0')
Epoch: [0][200/616]	Loss 2.0059e+01 (1.9918e+01)	Acc 0.204102 (0.202571)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 4,  ..., 0, 0, 4], device='cuda:0')
Epoch: [0][250/616]	Loss 2.0059e+01 (1.9946e+01)	Acc 0.231445 (0.202374)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 4,  ..., 1, 0, 4], device='cuda:0')
Epoch: [0][300/616]	Loss 2.0059e+01 (1.9965e+01)	Acc 0.193359 (0.202496)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 0, 1,  ..., 1, 2, 4], device='cuda:0')
Epoch: [0][350/616]	Loss 2.0059e+01 (1.9978e+01)	Acc 0.216797 (0.202132)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 3, 1,  ..., 2, 2, 4], device='cuda:0')
Epoch: [0][400/616]	Loss 2.0059e+01 (1.9989e+01)	Acc 0.194336 (0.201924)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 4, 3,  ..., 0, 2, 0], device='cuda:0')
Epoch: [0][450/616]	Loss 2.0059e+01 (1.9996e+01)	Acc 0.190430 (0.202075)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 4, 4,  ..., 4, 0, 4], device='cuda:0')
Epoch: [0][500/616]	Loss 2.0059e+01 (2.0002e+01)	Acc 0.212891 (0.201850)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 2, 4,  ..., 3, 0, 1], device='cuda:0')
Epoch: [0][550/616]	Loss 2.0059e+01 (2.0007e+01)	Acc 0.195312 (0.201767)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 3, 1,  ..., 4, 1, 2], device='cuda:0')
Epoch: [0][600/616]	Loss 2.0059e+01 (2.0012e+01)	Acc 0.182617 (0.201786)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 1,  ..., 2, 2, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195513 (0.201217)
Training Loss of Epoch 0: 20.012689092876464
Training Acc of Epoch 0: 0.20176892784552847
Testing Acc of Epoch 0: 0.20121739130434782
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.208008 (0.208008)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 1, 2,  ..., 4, 3, 4], device='cuda:0')
Epoch: [1][ 50/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.202148 (0.199200)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 0, 2,  ..., 2, 3, 0], device='cuda:0')
Epoch: [1][100/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.202148 (0.201955)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 0, 0,  ..., 0, 0, 3], device='cuda:0')
Epoch: [1][150/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.188477 (0.202148)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 1,  ..., 3, 1, 0], device='cuda:0')
Epoch: [1][200/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.179688 (0.201969)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 2,  ..., 4, 0, 4], device='cuda:0')
Epoch: [1][250/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.199219 (0.202242)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 3, 0,  ..., 1, 0, 0], device='cuda:0')
Epoch: [1][300/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.201172 (0.202350)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 0,  ..., 0, 3, 4], device='cuda:0')
Epoch: [1][350/616]	Loss 2.0059e+01 (2.0059e+01)	Acc 0.199219 (0.202079)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([4, 4, 2,  ..., 0, 4, 0], device='cuda:0')
Epoch: [1][400/616]	Loss 2.0059e+01 (2.0058e+01)	Acc 0.202148 (0.201781)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 1,  ..., 3, 1, 1], device='cuda:0')
Epoch: [1][450/616]	Loss 2.0059e+01 (2.0057e+01)	Acc 0.196289 (0.201828)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 4,  ..., 2, 3, 0], device='cuda:0')
Epoch: [1][500/616]	Loss 2.0059e+01 (2.0057e+01)	Acc 0.213867 (0.201538)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([0, 0, 3,  ..., 4, 4, 3], device='cuda:0')
Epoch: [1][550/616]	Loss 2.0059e+01 (2.0057e+01)	Acc 0.211914 (0.201681)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 1,  ..., 2, 4, 3], device='cuda:0')
Epoch: [1][600/616]	Loss 2.0059e+01 (2.0057e+01)	Acc 0.208008 (0.201505)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([3, 1, 3,  ..., 0, 4, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.195513 (0.201213)
Training Loss of Epoch 1: 20.057293223559373
Training Acc of Epoch 1: 0.20143387957317074
Testing Acc of Epoch 1: 0.20121304347826088
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
three_layer_model(
  (fc1): Linear(in_features=16, out_features=64, bias=True)
  (fc2): Linear(in_features=64, out_features=32, bias=True)
  (fc3): Linear(in_features=32, out_features=32, bias=True)
  (fc4): Linear(in_features=32, out_features=5, bias=True)
  (act1): ReLU()
  (act2): ReLU()
  (act3): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0218e-01 (5.0218e-01)	Acc 0.232422 (0.232422)
tensor([2, 3, 2,  ..., 2, 3, 2], device='cuda:0')
tensor([0, 3, 4,  ..., 2, 3, 4], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1875e+01 (3.1307e+01)	Acc 0.203125 (0.201134)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 1,  ..., 2, 3, 2], device='cuda:0')
Epoch: [0][100/616]	Loss 3.1719e+01 (3.1635e+01)	Acc 0.207031 (0.200940)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 4,  ..., 1, 3, 2], device='cuda:0')
Epoch: [0][150/616]	Loss 3.2695e+01 (3.1748e+01)	Acc 0.182617 (0.200823)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 3,  ..., 4, 1, 3], device='cuda:0')
Epoch: [0][200/616]	Loss 3.1953e+01 (3.1751e+01)	Acc 0.201172 (0.202110)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 0,  ..., 2, 4, 0], device='cuda:0')
Epoch: [0][250/616]	Loss 3.1875e+01 (3.1773e+01)	Acc 0.203125 (0.202378)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 0,  ..., 2, 1, 2], device='cuda:0')
Epoch: [0][300/616]	Loss 3.2305e+01 (3.1798e+01)	Acc 0.192383 (0.202314)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 0,  ..., 3, 2, 1], device='cuda:0')
Epoch: [0][350/616]	Loss 3.2344e+01 (3.1808e+01)	Acc 0.191406 (0.202446)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 2,  ..., 0, 0, 1], device='cuda:0')
Epoch: [0][400/616]	Loss 3.2305e+01 (3.1832e+01)	Acc 0.192383 (0.202136)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 2,  ..., 2, 3, 1], device='cuda:0')
Epoch: [0][450/616]	Loss 3.2930e+01 (3.1832e+01)	Acc 0.176758 (0.202363)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 3,  ..., 2, 1, 1], device='cuda:0')
Epoch: [0][500/616]	Loss 3.2539e+01 (3.1831e+01)	Acc 0.186523 (0.202566)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 3,  ..., 2, 0, 3], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1914e+01 (3.1837e+01)	Acc 0.202148 (0.202574)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 1,  ..., 3, 4, 3], device='cuda:0')
Epoch: [0][600/616]	Loss 3.0938e+01 (3.1846e+01)	Acc 0.226562 (0.202472)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 1,  ..., 2, 1, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 0: 31.849397458196655
Training Acc of Epoch 0: 0.2024215574186992
Testing Acc of Epoch 0: 0.20167826086956522
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.2500e+01 (3.2500e+01)	Acc 0.187500 (0.187500)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 3,  ..., 0, 0, 1], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.1719e+01 (3.1975e+01)	Acc 0.207031 (0.200617)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 3,  ..., 1, 2, 1], device='cuda:0')
Epoch: [1][100/616]	Loss 3.1914e+01 (3.1968e+01)	Acc 0.202148 (0.200804)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 4,  ..., 2, 0, 3], device='cuda:0')
Epoch: [1][150/616]	Loss 3.1797e+01 (3.1980e+01)	Acc 0.205078 (0.200512)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 3,  ..., 1, 1, 3], device='cuda:0')
Epoch: [1][200/616]	Loss 3.1641e+01 (3.1936e+01)	Acc 0.208984 (0.201599)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 3,  ..., 0, 1, 4], device='cuda:0')
Epoch: [1][250/616]	Loss 3.1562e+01 (3.1938e+01)	Acc 0.210938 (0.201549)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 0,  ..., 0, 3, 4], device='cuda:0')
Epoch: [1][300/616]	Loss 3.2070e+01 (3.1936e+01)	Acc 0.198242 (0.201603)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 1,  ..., 3, 1, 0], device='cuda:0')
Epoch: [1][350/616]	Loss 3.1602e+01 (3.1937e+01)	Acc 0.209961 (0.201578)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 2,  ..., 4, 2, 3], device='cuda:0')
Epoch: [1][400/616]	Loss 3.1836e+01 (3.1938e+01)	Acc 0.204102 (0.201552)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 4,  ..., 3, 1, 4], device='cuda:0')
Epoch: [1][450/616]	Loss 3.1094e+01 (3.1933e+01)	Acc 0.222656 (0.201679)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 4,  ..., 3, 2, 3], device='cuda:0')
Epoch: [1][500/616]	Loss 3.2031e+01 (3.1928e+01)	Acc 0.199219 (0.201788)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 1,  ..., 0, 2, 3], device='cuda:0')
Epoch: [1][550/616]	Loss 3.1367e+01 (3.1918e+01)	Acc 0.215820 (0.202039)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 1,  ..., 4, 3, 2], device='cuda:0')
Epoch: [1][600/616]	Loss 3.2070e+01 (3.1910e+01)	Acc 0.198242 (0.202262)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 2,  ..., 4, 3, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 1: 31.904280995934958
Training Acc of Epoch 1: 0.20239297510162602
Testing Acc of Epoch 1: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 3.1641e+01 (3.1641e+01)	Acc 0.208984 (0.208984)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 3,  ..., 0, 4, 3], device='cuda:0')
Epoch: [2][ 50/616]	Loss 3.1328e+01 (3.1981e+01)	Acc 0.216797 (0.200483)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 0,  ..., 3, 4, 1], device='cuda:0')
Epoch: [2][100/616]	Loss 3.2227e+01 (3.1935e+01)	Acc 0.194336 (0.201617)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 0,  ..., 4, 0, 4], device='cuda:0')
Epoch: [2][150/616]	Loss 3.2266e+01 (3.1926e+01)	Acc 0.193359 (0.201857)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 0,  ..., 4, 4, 4], device='cuda:0')
Epoch: [2][200/616]	Loss 3.1836e+01 (3.1906e+01)	Acc 0.204102 (0.202348)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 2,  ..., 4, 1, 2], device='cuda:0')
Epoch: [2][250/616]	Loss 3.1797e+01 (3.1924e+01)	Acc 0.205078 (0.201899)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 1,  ..., 2, 3, 3], device='cuda:0')
Epoch: [2][300/616]	Loss 3.2656e+01 (3.1900e+01)	Acc 0.183594 (0.202499)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 1,  ..., 2, 3, 3], device='cuda:0')
Epoch: [2][350/616]	Loss 3.1992e+01 (3.1910e+01)	Acc 0.200195 (0.202246)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 3, 2,  ..., 2, 4, 0], device='cuda:0')
Epoch: [2][400/616]	Loss 3.1328e+01 (3.1914e+01)	Acc 0.216797 (0.202148)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 3,  ..., 2, 2, 2], device='cuda:0')
Epoch: [2][450/616]	Loss 3.2539e+01 (3.1918e+01)	Acc 0.186523 (0.202042)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 2,  ..., 0, 1, 1], device='cuda:0')
Epoch: [2][500/616]	Loss 3.1367e+01 (3.1907e+01)	Acc 0.215820 (0.202320)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 2,  ..., 3, 1, 4], device='cuda:0')
Epoch: [2][550/616]	Loss 3.1992e+01 (3.1899e+01)	Acc 0.200195 (0.202517)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 3,  ..., 4, 3, 1], device='cuda:0')
Epoch: [2][600/616]	Loss 3.1992e+01 (3.1908e+01)	Acc 0.200195 (0.202311)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 0,  ..., 3, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 2: 31.903645833333332
Training Acc of Epoch 2: 0.20240885416666668
Testing Acc of Epoch 2: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 3.1992e+01 (3.1992e+01)	Acc 0.200195 (0.200195)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 4,  ..., 4, 0, 4], device='cuda:0')
Epoch: [3][ 50/616]	Loss 3.2031e+01 (3.1955e+01)	Acc 0.199219 (0.201114)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 4,  ..., 4, 0, 0], device='cuda:0')
Epoch: [3][100/616]	Loss 3.1719e+01 (3.1884e+01)	Acc 0.207031 (0.202912)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 2,  ..., 3, 0, 0], device='cuda:0')
Epoch: [3][150/616]	Loss 3.2031e+01 (3.1871e+01)	Acc 0.199219 (0.203228)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 1,  ..., 4, 1, 2], device='cuda:0')
Epoch: [3][200/616]	Loss 3.1836e+01 (3.1920e+01)	Acc 0.204102 (0.202012)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 2,  ..., 4, 3, 3], device='cuda:0')
Epoch: [3][250/616]	Loss 3.1367e+01 (3.1927e+01)	Acc 0.215820 (0.201829)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 1,  ..., 1, 1, 3], device='cuda:0')
Epoch: [3][300/616]	Loss 3.2539e+01 (3.1910e+01)	Acc 0.186523 (0.202249)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 0,  ..., 3, 3, 2], device='cuda:0')
Epoch: [3][350/616]	Loss 3.2383e+01 (3.1901e+01)	Acc 0.190430 (0.202468)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 0,  ..., 4, 3, 0], device='cuda:0')
Epoch: [3][400/616]	Loss 3.2812e+01 (3.1907e+01)	Acc 0.179688 (0.202324)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 3,  ..., 3, 4, 2], device='cuda:0')
Epoch: [3][450/616]	Loss 3.2188e+01 (3.1909e+01)	Acc 0.195312 (0.202268)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 4,  ..., 0, 0, 4], device='cuda:0')
Epoch: [3][500/616]	Loss 3.0625e+01 (3.1907e+01)	Acc 0.234375 (0.202316)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 3, 2,  ..., 3, 4, 1], device='cuda:0')
Epoch: [3][550/616]	Loss 3.1133e+01 (3.1909e+01)	Acc 0.221680 (0.202285)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 4,  ..., 0, 4, 1], device='cuda:0')
Epoch: [3][600/616]	Loss 3.1680e+01 (3.1907e+01)	Acc 0.208008 (0.202314)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 3,  ..., 2, 3, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 3: 31.903455284552845
Training Acc of Epoch 3: 0.20241361788617887
Testing Acc of Epoch 3: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
Epoch: [4][  0/616]	Loss 3.2344e+01 (3.2344e+01)	Acc 0.191406 (0.191406)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 4,  ..., 0, 4, 4], device='cuda:0')
Epoch: [4][ 50/616]	Loss 3.1797e+01 (3.1869e+01)	Acc 0.205078 (0.203278)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 1,  ..., 4, 3, 4], device='cuda:0')
Epoch: [4][100/616]	Loss 3.2148e+01 (3.1856e+01)	Acc 0.196289 (0.203599)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 0,  ..., 4, 4, 3], device='cuda:0')
Epoch: [4][150/616]	Loss 3.1719e+01 (3.1900e+01)	Acc 0.207031 (0.202498)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 4, 4,  ..., 0, 2, 1], device='cuda:0')
Epoch: [4][200/616]	Loss 3.2695e+01 (3.1913e+01)	Acc 0.182617 (0.202168)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 0,  ..., 3, 2, 4], device='cuda:0')
Epoch: [4][250/616]	Loss 3.1719e+01 (3.1898e+01)	Acc 0.207031 (0.202538)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 4,  ..., 3, 0, 0], device='cuda:0')
Epoch: [4][300/616]	Loss 3.2305e+01 (3.1914e+01)	Acc 0.192383 (0.202152)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 3,  ..., 1, 2, 3], device='cuda:0')
Epoch: [4][350/616]	Loss 3.1562e+01 (3.1905e+01)	Acc 0.210938 (0.202365)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 3,  ..., 4, 1, 2], device='cuda:0')
Epoch: [4][400/616]	Loss 3.2891e+01 (3.1923e+01)	Acc 0.177734 (0.201929)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 0,  ..., 1, 1, 0], device='cuda:0')
Epoch: [4][450/616]	Loss 3.2930e+01 (3.1909e+01)	Acc 0.176758 (0.202287)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 0,  ..., 4, 1, 1], device='cuda:0')
Epoch: [4][500/616]	Loss 3.0664e+01 (3.1900e+01)	Acc 0.233398 (0.202497)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 1,  ..., 2, 3, 4], device='cuda:0')
Epoch: [4][550/616]	Loss 3.0859e+01 (3.1905e+01)	Acc 0.228516 (0.202377)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 3,  ..., 1, 0, 1], device='cuda:0')
Epoch: [4][600/616]	Loss 3.1250e+01 (3.1901e+01)	Acc 0.218750 (0.202472)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 3,  ..., 3, 3, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 4: 31.903645833333332
Training Acc of Epoch 4: 0.20240885416666668
Testing Acc of Epoch 4: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 5
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.4
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 4.9916e-01 (4.9916e-01)	Acc 0.200195 (0.200195)
tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
tensor([2, 1, 1,  ..., 3, 2, 1], device='cuda:0')
Epoch: [0][ 50/616]	Loss 3.1953e+01 (3.1302e+01)	Acc 0.201172 (0.198644)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 1,  ..., 0, 2, 1], device='cuda:0')
Epoch: [0][100/616]	Loss 3.0820e+01 (3.1604e+01)	Acc 0.229492 (0.200398)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [0][150/616]	Loss 3.0586e+01 (3.1693e+01)	Acc 0.235352 (0.201321)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 3,  ..., 2, 3, 2], device='cuda:0')
Epoch: [0][200/616]	Loss 3.1211e+01 (3.1748e+01)	Acc 0.219727 (0.201522)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 2,  ..., 0, 0, 4], device='cuda:0')
Epoch: [0][250/616]	Loss 3.1992e+01 (3.1782e+01)	Acc 0.200195 (0.201631)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 4,  ..., 2, 4, 3], device='cuda:0')
Epoch: [0][300/616]	Loss 3.1836e+01 (3.1793e+01)	Acc 0.204102 (0.201980)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 2,  ..., 4, 3, 1], device='cuda:0')
Epoch: [0][350/616]	Loss 3.1875e+01 (3.1777e+01)	Acc 0.203125 (0.202836)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 3,  ..., 2, 4, 0], device='cuda:0')
Epoch: [0][400/616]	Loss 3.2227e+01 (3.1797e+01)	Acc 0.194336 (0.202684)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 1,  ..., 3, 1, 2], device='cuda:0')
Epoch: [0][450/616]	Loss 3.1094e+01 (3.1816e+01)	Acc 0.222656 (0.202475)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 0,  ..., 3, 4, 0], device='cuda:0')
Epoch: [0][500/616]	Loss 3.2422e+01 (3.1829e+01)	Acc 0.189453 (0.202367)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 1,  ..., 0, 2, 0], device='cuda:0')
Epoch: [0][550/616]	Loss 3.1680e+01 (3.1838e+01)	Acc 0.208008 (0.202306)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 0,  ..., 0, 2, 1], device='cuda:0')
Epoch: [0][600/616]	Loss 3.2539e+01 (3.1842e+01)	Acc 0.186523 (0.202363)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 2,  ..., 2, 0, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 0: 31.841925794419236
Training Acc of Epoch 0: 0.20239138719512195
Testing Acc of Epoch 0: 0.20167826086956522
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 3.1562e+01 (3.1562e+01)	Acc 0.210938 (0.210938)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 2,  ..., 4, 1, 4], device='cuda:0')
Epoch: [1][ 50/616]	Loss 3.2383e+01 (3.1964e+01)	Acc 0.190430 (0.200904)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 4,  ..., 2, 1, 2], device='cuda:0')
Epoch: [1][100/616]	Loss 3.1836e+01 (3.1885e+01)	Acc 0.204102 (0.202874)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 0,  ..., 4, 3, 4], device='cuda:0')
Epoch: [1][150/616]	Loss 3.0977e+01 (3.1888e+01)	Acc 0.225586 (0.202802)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 4,  ..., 4, 0, 3], device='cuda:0')
Epoch: [1][200/616]	Loss 3.1484e+01 (3.1878e+01)	Acc 0.212891 (0.203052)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 0,  ..., 0, 1, 1], device='cuda:0')
Epoch: [1][250/616]	Loss 3.2109e+01 (3.1904e+01)	Acc 0.197266 (0.202394)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 0,  ..., 0, 0, 0], device='cuda:0')
Epoch: [1][300/616]	Loss 3.1289e+01 (3.1915e+01)	Acc 0.217773 (0.202135)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 2,  ..., 1, 3, 4], device='cuda:0')
Epoch: [1][350/616]	Loss 3.2383e+01 (3.1930e+01)	Acc 0.190430 (0.201759)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 1,  ..., 0, 4, 1], device='cuda:0')
Epoch: [1][400/616]	Loss 3.2461e+01 (3.1922e+01)	Acc 0.188477 (0.201949)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 3,  ..., 3, 2, 2], device='cuda:0')
Epoch: [1][450/616]	Loss 3.2227e+01 (3.1913e+01)	Acc 0.194336 (0.202179)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 3,  ..., 2, 2, 4], device='cuda:0')
Epoch: [1][500/616]	Loss 3.1758e+01 (3.1905e+01)	Acc 0.206055 (0.202378)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 4,  ..., 0, 0, 2], device='cuda:0')
Epoch: [1][550/616]	Loss 3.2227e+01 (3.1894e+01)	Acc 0.194336 (0.202662)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 4,  ..., 3, 2, 2], device='cuda:0')
Epoch: [1][600/616]	Loss 3.1406e+01 (3.1902e+01)	Acc 0.214844 (0.202444)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 4,  ..., 4, 2, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 1: 31.904153963414632
Training Acc of Epoch 1: 0.20239615091463414
Testing Acc of Epoch 1: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 3.2227e+01 (3.2227e+01)	Acc 0.194336 (0.194336)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 2,  ..., 3, 2, 2], device='cuda:0')
Epoch: [2][ 50/616]	Loss 3.2539e+01 (3.1895e+01)	Acc 0.186523 (0.202627)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 1,  ..., 4, 3, 0], device='cuda:0')
Epoch: [2][100/616]	Loss 3.1953e+01 (3.2004e+01)	Acc 0.201172 (0.199896)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 2,  ..., 2, 0, 4], device='cuda:0')
Epoch: [2][150/616]	Loss 3.2031e+01 (3.1951e+01)	Acc 0.199219 (0.201217)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 4,  ..., 1, 3, 0], device='cuda:0')
Epoch: [2][200/616]	Loss 3.2148e+01 (3.1937e+01)	Acc 0.196289 (0.201575)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 3,  ..., 2, 4, 1], device='cuda:0')
Epoch: [2][250/616]	Loss 3.1562e+01 (3.1929e+01)	Acc 0.210938 (0.201779)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 4,  ..., 4, 2, 3], device='cuda:0')
Epoch: [2][300/616]	Loss 3.2031e+01 (3.1928e+01)	Acc 0.199219 (0.201801)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 4,  ..., 2, 2, 3], device='cuda:0')
Epoch: [2][350/616]	Loss 3.1562e+01 (3.1911e+01)	Acc 0.210938 (0.202226)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 0,  ..., 3, 3, 3], device='cuda:0')
Epoch: [2][400/616]	Loss 3.2031e+01 (3.1900e+01)	Acc 0.199219 (0.202509)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 1,  ..., 3, 3, 0], device='cuda:0')
Epoch: [2][450/616]	Loss 3.1406e+01 (3.1900e+01)	Acc 0.214844 (0.202499)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 4, 2,  ..., 0, 0, 3], device='cuda:0')
Epoch: [2][500/616]	Loss 3.2539e+01 (3.1907e+01)	Acc 0.186523 (0.202336)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 1, 2,  ..., 3, 2, 3], device='cuda:0')
Epoch: [2][550/616]	Loss 3.2383e+01 (3.1912e+01)	Acc 0.190430 (0.202207)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 4, 1,  ..., 1, 0, 4], device='cuda:0')
Epoch: [2][600/616]	Loss 3.2422e+01 (3.1905e+01)	Acc 0.189453 (0.202369)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 0,  ..., 2, 1, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 2: 31.90383638211382
Training Acc of Epoch 2: 0.20240409044715446
Testing Acc of Epoch 2: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 3.1680e+01 (3.1680e+01)	Acc 0.208008 (0.208008)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 1,  ..., 2, 2, 0], device='cuda:0')
Epoch: [3][ 50/616]	Loss 3.1680e+01 (3.1864e+01)	Acc 0.208008 (0.203412)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 0,  ..., 4, 2, 4], device='cuda:0')
Epoch: [3][100/616]	Loss 3.1406e+01 (3.1879e+01)	Acc 0.214844 (0.203019)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 3,  ..., 0, 3, 1], device='cuda:0')
Epoch: [3][150/616]	Loss 3.1406e+01 (3.1848e+01)	Acc 0.214844 (0.203804)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 1,  ..., 3, 2, 3], device='cuda:0')
Epoch: [3][200/616]	Loss 3.1406e+01 (3.1876e+01)	Acc 0.214844 (0.203106)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 3, 0,  ..., 3, 2, 1], device='cuda:0')
Epoch: [3][250/616]	Loss 3.2344e+01 (3.1895e+01)	Acc 0.191406 (0.202627)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 2,  ..., 1, 1, 0], device='cuda:0')
Epoch: [3][300/616]	Loss 3.1680e+01 (3.1894e+01)	Acc 0.208008 (0.202638)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 3, 4,  ..., 3, 2, 2], device='cuda:0')
Epoch: [3][350/616]	Loss 3.2383e+01 (3.1907e+01)	Acc 0.190430 (0.202315)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 2,  ..., 2, 3, 0], device='cuda:0')
Epoch: [3][400/616]	Loss 3.1641e+01 (3.1912e+01)	Acc 0.208984 (0.202200)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 0,  ..., 4, 2, 0], device='cuda:0')
Epoch: [3][450/616]	Loss 3.2109e+01 (3.1903e+01)	Acc 0.197266 (0.202426)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 1,  ..., 0, 0, 2], device='cuda:0')
Epoch: [3][500/616]	Loss 3.1211e+01 (3.1899e+01)	Acc 0.219727 (0.202529)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 0, 4,  ..., 4, 2, 0], device='cuda:0')
Epoch: [3][550/616]	Loss 3.2695e+01 (3.1890e+01)	Acc 0.182617 (0.202747)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 4,  ..., 0, 1, 3], device='cuda:0')
Epoch: [3][600/616]	Loss 3.1680e+01 (3.1900e+01)	Acc 0.208008 (0.202498)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 2,  ..., 0, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 3: 31.904026930894307
Training Acc of Epoch 3: 0.20239932672764227
Testing Acc of Epoch 3: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
Epoch: [4][  0/616]	Loss 3.1836e+01 (3.1836e+01)	Acc 0.204102 (0.204102)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 4, 1,  ..., 3, 2, 3], device='cuda:0')
Epoch: [4][ 50/616]	Loss 3.2656e+01 (3.1825e+01)	Acc 0.183594 (0.204370)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 0,  ..., 3, 2, 1], device='cuda:0')
Epoch: [4][100/616]	Loss 3.2539e+01 (3.1824e+01)	Acc 0.186523 (0.204392)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 1,  ..., 3, 4, 0], device='cuda:0')
Epoch: [4][150/616]	Loss 3.1953e+01 (3.1819e+01)	Acc 0.201172 (0.204515)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 0,  ..., 0, 2, 3], device='cuda:0')
Epoch: [4][200/616]	Loss 3.1445e+01 (3.1832e+01)	Acc 0.213867 (0.204208)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 2, 3,  ..., 2, 3, 3], device='cuda:0')
Epoch: [4][250/616]	Loss 3.1797e+01 (3.1854e+01)	Acc 0.205078 (0.203646)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 4,  ..., 4, 2, 0], device='cuda:0')
Epoch: [4][300/616]	Loss 3.1367e+01 (3.1874e+01)	Acc 0.215820 (0.203141)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 3,  ..., 1, 1, 1], device='cuda:0')
Epoch: [4][350/616]	Loss 3.1875e+01 (3.1878e+01)	Acc 0.203125 (0.203047)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 1, 1,  ..., 3, 1, 1], device='cuda:0')
Epoch: [4][400/616]	Loss 3.2070e+01 (3.1876e+01)	Acc 0.198242 (0.203096)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 1, 0,  ..., 3, 0, 4], device='cuda:0')
Epoch: [4][450/616]	Loss 3.1836e+01 (3.1876e+01)	Acc 0.204102 (0.203110)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([0, 0, 2,  ..., 1, 1, 4], device='cuda:0')
Epoch: [4][500/616]	Loss 3.1875e+01 (3.1893e+01)	Acc 0.203125 (0.202669)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 1,  ..., 1, 1, 2], device='cuda:0')
Epoch: [4][550/616]	Loss 3.2305e+01 (3.1899e+01)	Acc 0.192383 (0.202535)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 2, 2,  ..., 0, 4, 1], device='cuda:0')
Epoch: [4][600/616]	Loss 3.1953e+01 (3.1905e+01)	Acc 0.201172 (0.202373)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 3, 3,  ..., 4, 3, 3], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 4: 31.903772865853657
Training Acc of Epoch 4: 0.20240567835365852
Testing Acc of Epoch 4: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 5
---------------------
Epoch: [5][  0/616]	Loss 3.2188e+01 (3.2188e+01)	Acc 0.195312 (0.195312)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 2,  ..., 2, 0, 0], device='cuda:0')
Epoch: [5][ 50/616]	Loss 3.2695e+01 (3.2013e+01)	Acc 0.182617 (0.199678)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 4, 1,  ..., 3, 2, 0], device='cuda:0')
Epoch: [5][100/616]	Loss 3.1914e+01 (3.1956e+01)	Acc 0.202148 (0.201104)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 2, 3,  ..., 2, 3, 0], device='cuda:0')
Epoch: [5][150/616]	Loss 3.2969e+01 (3.1971e+01)	Acc 0.175781 (0.200726)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 1, 1,  ..., 0, 0, 2], device='cuda:0')
Epoch: [5][200/616]	Loss 3.1289e+01 (3.1962e+01)	Acc 0.217773 (0.200958)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 2, 3,  ..., 4, 3, 1], device='cuda:0')
Epoch: [5][250/616]	Loss 3.1914e+01 (3.1956e+01)	Acc 0.202148 (0.201102)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 2,  ..., 4, 3, 0], device='cuda:0')
Epoch: [5][300/616]	Loss 3.1797e+01 (3.1938e+01)	Acc 0.205078 (0.201558)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([1, 0, 3,  ..., 1, 0, 2], device='cuda:0')
Epoch: [5][350/616]	Loss 3.2031e+01 (3.1908e+01)	Acc 0.199219 (0.202293)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 4,  ..., 2, 3, 4], device='cuda:0')
Epoch: [5][400/616]	Loss 3.2148e+01 (3.1895e+01)	Acc 0.196289 (0.202626)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([2, 0, 4,  ..., 4, 2, 4], device='cuda:0')
Epoch: [5][450/616]	Loss 3.1992e+01 (3.1889e+01)	Acc 0.200195 (0.202772)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 2, 1,  ..., 1, 3, 0], device='cuda:0')
Epoch: [5][500/616]	Loss 3.2266e+01 (3.1898e+01)	Acc 0.193359 (0.202542)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([4, 3, 1,  ..., 0, 3, 1], device='cuda:0')
Epoch: [5][550/616]	Loss 3.2422e+01 (3.1900e+01)	Acc 0.189453 (0.202501)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 1, 2,  ..., 3, 4, 3], device='cuda:0')
Epoch: [5][600/616]	Loss 3.2031e+01 (3.1902e+01)	Acc 0.199219 (0.202444)
tensor([4, 4, 4,  ..., 4, 4, 4], device='cuda:0')
tensor([3, 0, 4,  ..., 3, 0, 3], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.193910 (0.201678)
Training Loss of Epoch 5: 31.903201219512194
Training Acc of Epoch 5: 0.20241996951219512
Testing Acc of Epoch 5: 0.20167826086956522
Early stopping not satisfied.
---------------------
Start epoch 6
---------------------
train_bs 1024
test_bs 1024
training_type lr_decay
presplit_train False
train_data_path ../../data/jet_data/train.h5
val_data_bath ../../data/jet_data/val.h5
test_data_bath ../../data/jet_data/test.h5
random_labels False
shuffle_random_data False
num_classes 10
label_corrupt_prob 1.0
random_label_path ../../data/random_labels/random_label.pkl
random_label_path_test ../../data/random_labels/random_label_test.pkl
test_on_noise False
data_subset True
subset 1.0
subset_noisy False
arch JT_32b
different_width False
resnet18_width 64
weight_precision 32
bias_precision 32
act_precision 35
batch_norm False
dropout False
exp_num 5
lr 0.4
epochs 100
weight_decay 0.0005
no_lr_decay False
one_lr_decay True
stop_epoch 100
resume None
lr_decay_epoch [100, 150]
save_early_stop False
min_delta 0
patience 0
l1-enable False
l2-enable False
ignore_incomplete_batch True
only_exploration False
save_final False
save_middle False
save_best True
save_frequency 10
saving_folder ../checkpoint/different_knobs_subset_10/lr_0.4/lr_decay/JT_32b/
file_prefix exp_0
mixup_alpha 16.0
------------------------------------------------------
Experiement: lr_decay training for JT_32b
------------------------------------------------------
using FP32 model
---------------------- Model -------------------------
ThreeLayerMLP(
  (dense_1): Linear(in_features=16, out_features=64, bias=True)
  (dense_2): Linear(in_features=64, out_features=32, bias=True)
  (dense_3): Linear(in_features=32, out_features=32, bias=True)
  (dense_4): Linear(in_features=32, out_features=5, bias=True)
  (act): ReLU()
  (softmax): Softmax(dim=1)
)
------------------------------------------------------
Loading Datasets
Could not load file: ../../data/train/jetImage_7_100p_0_10000.h5
Could not load file: ../../data/test/jetImage_7_100p_50000_60000.h5

Dataset loading complete!
The base learning rate is 0.001
---------------------
Start epoch 0
---------------------
Epoch: [0][  0/616]	Loss 5.0088e-01 (5.0088e-01)	Acc 0.254883 (0.254883)
tensor([2, 0, 0,  ..., 2, 2, 2], device='cuda:0')
tensor([0, 1, 3,  ..., 3, 1, 1], device='cuda:0')
Epoch: [0][ 50/616]	Loss 4.0526e-01 (4.5982e-01)	Acc 0.506836 (0.462163)
tensor([0, 0, 0,  ..., 2, 1, 4], device='cuda:0')
tensor([3, 2, 0,  ..., 2, 1, 4], device='cuda:0')
Epoch: [0][100/616]	Loss 3.4033e-01 (4.1244e-01)	Acc 0.630859 (0.523612)
tensor([0, 4, 0,  ..., 0, 1, 3], device='cuda:0')
tensor([1, 0, 0,  ..., 0, 0, 2], device='cuda:0')
Epoch: [0][150/616]	Loss 3.2223e-01 (3.8497e-01)	Acc 0.671875 (0.568055)
tensor([3, 0, 1,  ..., 1, 3, 4], device='cuda:0')
tensor([3, 0, 1,  ..., 0, 3, 4], device='cuda:0')
Epoch: [0][200/616]	Loss 2.9537e-01 (3.6450e-01)	Acc 0.700195 (0.600042)
tensor([1, 0, 1,  ..., 3, 4, 3], device='cuda:0')
tensor([1, 4, 0,  ..., 4, 4, 3], device='cuda:0')
Epoch: [0][250/616]	Loss 2.8062e-01 (3.4794e-01)	Acc 0.706055 (0.623308)
tensor([1, 4, 4,  ..., 2, 4, 2], device='cuda:0')
tensor([1, 4, 0,  ..., 2, 4, 1], device='cuda:0')
Epoch: [0][300/616]	Loss 2.6532e-01 (3.3525e-01)	Acc 0.731445 (0.639850)
tensor([4, 1, 3,  ..., 1, 4, 3], device='cuda:0')
tensor([0, 1, 3,  ..., 0, 4, 3], device='cuda:0')
Epoch: [0][350/616]	Loss 2.6756e-01 (3.2570e-01)	Acc 0.728516 (0.651846)
tensor([3, 2, 0,  ..., 2, 4, 4], device='cuda:0')
tensor([3, 2, 0,  ..., 2, 4, 4], device='cuda:0')
Epoch: [0][400/616]	Loss 2.6010e-01 (3.1801e-01)	Acc 0.731445 (0.661311)
tensor([2, 2, 3,  ..., 4, 4, 3], device='cuda:0')
tensor([2, 2, 3,  ..., 4, 4, 3], device='cuda:0')
Epoch: [0][450/616]	Loss 2.6497e-01 (3.1173e-01)	Acc 0.730469 (0.668551)
tensor([4, 3, 4,  ..., 0, 1, 3], device='cuda:0')
tensor([4, 3, 0,  ..., 1, 1, 3], device='cuda:0')
Epoch: [0][500/616]	Loss 2.5089e-01 (3.0650e-01)	Acc 0.744141 (0.674618)
tensor([0, 1, 2,  ..., 3, 2, 3], device='cuda:0')
tensor([0, 2, 2,  ..., 3, 2, 3], device='cuda:0')
Epoch: [0][550/616]	Loss 2.5457e-01 (3.0206e-01)	Acc 0.748047 (0.679617)
tensor([2, 1, 2,  ..., 2, 1, 1], device='cuda:0')
tensor([2, 2, 2,  ..., 2, 1, 1], device='cuda:0')
Epoch: [0][600/616]	Loss 2.5781e-01 (2.9839e-01)	Acc 0.726562 (0.683766)
tensor([0, 4, 1,  ..., 4, 2, 2], device='cuda:0')
tensor([3, 4, 3,  ..., 4, 2, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.716346 (0.734539)
Training Loss of Epoch 0: 0.29740806755011645
Training Acc of Epoch 0: 0.6848466082317073
Testing Acc of Epoch 0: 0.7345391304347826
Model with the best training loss saved! The loss is 0.0
Early stopping not satisfied.
---------------------
Start epoch 1
---------------------
Epoch: [1][  0/616]	Loss 2.5884e-01 (2.5884e-01)	Acc 0.724609 (0.724609)
tensor([4, 1, 2,  ..., 1, 4, 0], device='cuda:0')
tensor([4, 1, 2,  ..., 1, 0, 0], device='cuda:0')
Epoch: [1][ 50/616]	Loss 2.4191e-01 (2.5372e-01)	Acc 0.753906 (0.731828)
tensor([1, 0, 3,  ..., 3, 3, 3], device='cuda:0')
tensor([2, 4, 3,  ..., 3, 3, 3], device='cuda:0')
Epoch: [1][100/616]	Loss 2.5570e-01 (2.5283e-01)	Acc 0.732422 (0.733418)
tensor([0, 1, 1,  ..., 0, 0, 0], device='cuda:0')
tensor([1, 2, 2,  ..., 0, 0, 0], device='cuda:0')
Epoch: [1][150/616]	Loss 2.5306e-01 (2.5221e-01)	Acc 0.737305 (0.734381)
tensor([1, 4, 3,  ..., 0, 0, 2], device='cuda:0')
tensor([1, 4, 3,  ..., 0, 1, 2], device='cuda:0')
Epoch: [1][200/616]	Loss 2.4677e-01 (2.5143e-01)	Acc 0.753906 (0.735731)
tensor([0, 3, 2,  ..., 4, 3, 0], device='cuda:0')
tensor([0, 3, 2,  ..., 4, 3, 0], device='cuda:0')
Epoch: [1][250/616]	Loss 2.3895e-01 (2.5069e-01)	Acc 0.737305 (0.736258)
tensor([1, 4, 0,  ..., 1, 0, 1], device='cuda:0')
tensor([1, 4, 0,  ..., 3, 0, 2], device='cuda:0')
Epoch: [1][300/616]	Loss 2.4677e-01 (2.5022e-01)	Acc 0.742188 (0.736623)
tensor([2, 3, 0,  ..., 4, 1, 2], device='cuda:0')
tensor([1, 3, 3,  ..., 4, 2, 2], device='cuda:0')
Epoch: [1][350/616]	Loss 2.3538e-01 (2.4900e-01)	Acc 0.743164 (0.738100)
tensor([1, 0, 2,  ..., 1, 4, 0], device='cuda:0')
tensor([1, 1, 2,  ..., 1, 0, 1], device='cuda:0')
Epoch: [1][400/616]	Loss 2.5690e-01 (2.4828e-01)	Acc 0.723633 (0.738656)
tensor([3, 0, 2,  ..., 4, 3, 1], device='cuda:0')
tensor([3, 1, 2,  ..., 4, 3, 1], device='cuda:0')
Epoch: [1][450/616]	Loss 2.4498e-01 (2.4771e-01)	Acc 0.732422 (0.739297)
tensor([4, 0, 0,  ..., 2, 2, 2], device='cuda:0')
tensor([4, 0, 0,  ..., 2, 2, 2], device='cuda:0')
Epoch: [1][500/616]	Loss 2.4226e-01 (2.4740e-01)	Acc 0.747070 (0.739626)
tensor([3, 3, 1,  ..., 0, 3, 0], device='cuda:0')
tensor([3, 3, 1,  ..., 0, 3, 0], device='cuda:0')
Epoch: [1][550/616]	Loss 2.4515e-01 (2.4690e-01)	Acc 0.727539 (0.740171)
tensor([0, 2, 0,  ..., 2, 4, 0], device='cuda:0')
tensor([0, 2, 0,  ..., 2, 4, 1], device='cuda:0')
Epoch: [1][600/616]	Loss 2.4683e-01 (2.4651e-01)	Acc 0.730469 (0.740572)
tensor([3, 0, 3,  ..., 0, 4, 4], device='cuda:0')
tensor([3, 0, 3,  ..., 0, 0, 4], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.732372 (0.746252)
Training Loss of Epoch 1: 0.24636899637497536
Training Acc of Epoch 1: 0.7407409171747967
Testing Acc of Epoch 1: 0.7462521739130434
Early stopping not satisfied.
---------------------
Start epoch 2
---------------------
Epoch: [2][  0/616]	Loss 2.4095e-01 (2.4095e-01)	Acc 0.744141 (0.744141)
tensor([2, 1, 2,  ..., 3, 1, 3], device='cuda:0')
tensor([2, 1, 2,  ..., 3, 1, 3], device='cuda:0')
Epoch: [2][ 50/616]	Loss 2.4152e-01 (2.3876e-01)	Acc 0.750000 (0.748985)
tensor([0, 0, 1,  ..., 2, 1, 1], device='cuda:0')
tensor([0, 1, 3,  ..., 2, 1, 1], device='cuda:0')
Epoch: [2][100/616]	Loss 2.5016e-01 (2.3888e-01)	Acc 0.732422 (0.748173)
tensor([3, 4, 0,  ..., 4, 3, 0], device='cuda:0')
tensor([3, 4, 0,  ..., 4, 3, 0], device='cuda:0')
Epoch: [2][150/616]	Loss 2.3336e-01 (2.3849e-01)	Acc 0.777344 (0.748894)
tensor([2, 1, 0,  ..., 1, 4, 1], device='cuda:0')
tensor([1, 2, 0,  ..., 1, 1, 1], device='cuda:0')
Epoch: [2][200/616]	Loss 2.4334e-01 (2.3883e-01)	Acc 0.734375 (0.748270)
tensor([1, 4, 0,  ..., 4, 3, 4], device='cuda:0')
tensor([0, 4, 0,  ..., 4, 3, 4], device='cuda:0')
Epoch: [2][250/616]	Loss 2.2363e-01 (2.3856e-01)	Acc 0.768555 (0.748304)
tensor([2, 1, 0,  ..., 2, 3, 2], device='cuda:0')
tensor([2, 2, 0,  ..., 2, 3, 2], device='cuda:0')
Epoch: [2][300/616]	Loss 2.3607e-01 (2.3855e-01)	Acc 0.753906 (0.748306)
tensor([2, 0, 3,  ..., 0, 4, 2], device='cuda:0')
tensor([2, 1, 1,  ..., 0, 0, 2], device='cuda:0')
Epoch: [2][350/616]	Loss 2.4640e-01 (2.3859e-01)	Acc 0.733398 (0.748161)
tensor([1, 3, 0,  ..., 1, 2, 0], device='cuda:0')
tensor([0, 3, 0,  ..., 0, 4, 0], device='cuda:0')
Epoch: [2][400/616]	Loss 2.3720e-01 (2.3857e-01)	Acc 0.761719 (0.748142)
tensor([1, 2, 0,  ..., 1, 1, 4], device='cuda:0')
tensor([1, 2, 0,  ..., 3, 1, 4], device='cuda:0')
Epoch: [2][450/616]	Loss 2.2992e-01 (2.3848e-01)	Acc 0.753906 (0.747919)
tensor([0, 1, 1,  ..., 2, 1, 2], device='cuda:0')
tensor([0, 4, 3,  ..., 2, 1, 2], device='cuda:0')
Epoch: [2][500/616]	Loss 2.6429e-01 (2.3833e-01)	Acc 0.721680 (0.748183)
tensor([2, 1, 1,  ..., 3, 1, 2], device='cuda:0')
tensor([2, 0, 1,  ..., 3, 0, 4], device='cuda:0')
Epoch: [2][550/616]	Loss 2.4048e-01 (2.3799e-01)	Acc 0.737305 (0.748614)
tensor([4, 4, 0,  ..., 1, 1, 4], device='cuda:0')
tensor([4, 4, 0,  ..., 1, 3, 4], device='cuda:0')
Epoch: [2][600/616]	Loss 2.2800e-01 (2.3796e-01)	Acc 0.754883 (0.748559)
tensor([1, 0, 4,  ..., 4, 4, 2], device='cuda:0')
tensor([1, 4, 4,  ..., 1, 4, 1], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.740385 (0.751209)
Training Loss of Epoch 2: 0.23791746935708735
Training Acc of Epoch 2: 0.7485899390243902
Testing Acc of Epoch 2: 0.751208695652174
Early stopping not satisfied.
---------------------
Start epoch 3
---------------------
Epoch: [3][  0/616]	Loss 2.4011e-01 (2.4011e-01)	Acc 0.737305 (0.737305)
tensor([4, 4, 1,  ..., 0, 2, 2], device='cuda:0')
tensor([4, 4, 1,  ..., 0, 2, 2], device='cuda:0')
Epoch: [3][ 50/616]	Loss 2.3421e-01 (2.3478e-01)	Acc 0.737305 (0.750613)
tensor([1, 1, 2,  ..., 2, 0, 1], device='cuda:0')
tensor([1, 2, 2,  ..., 2, 0, 1], device='cuda:0')
Epoch: [3][100/616]	Loss 2.2675e-01 (2.3537e-01)	Acc 0.760742 (0.751180)
tensor([1, 2, 0,  ..., 4, 3, 1], device='cuda:0')
tensor([2, 2, 0,  ..., 4, 3, 3], device='cuda:0')
Epoch: [3][150/616]	Loss 2.3863e-01 (2.3476e-01)	Acc 0.764648 (0.751901)
tensor([1, 2, 0,  ..., 1, 2, 4], device='cuda:0')
tensor([3, 2, 0,  ..., 0, 2, 4], device='cuda:0')
Epoch: [3][200/616]	Loss 2.2627e-01 (2.3456e-01)	Acc 0.771484 (0.751973)
tensor([0, 1, 1,  ..., 4, 0, 1], device='cuda:0')
tensor([0, 3, 2,  ..., 4, 0, 1], device='cuda:0')
Epoch: [3][250/616]	Loss 2.2030e-01 (2.3477e-01)	Acc 0.751953 (0.751774)
tensor([4, 2, 3,  ..., 1, 4, 3], device='cuda:0')
tensor([4, 2, 3,  ..., 1, 0, 3], device='cuda:0')
Epoch: [3][300/616]	Loss 2.2822e-01 (2.3514e-01)	Acc 0.759766 (0.751486)
tensor([3, 0, 1,  ..., 2, 1, 3], device='cuda:0')
tensor([3, 0, 2,  ..., 2, 3, 3], device='cuda:0')
Epoch: [3][350/616]	Loss 2.3195e-01 (2.3515e-01)	Acc 0.750977 (0.751477)
tensor([2, 4, 2,  ..., 3, 0, 0], device='cuda:0')
tensor([2, 4, 2,  ..., 3, 1, 0], device='cuda:0')
Epoch: [3][400/616]	Loss 2.2180e-01 (2.3520e-01)	Acc 0.776367 (0.751123)
tensor([0, 4, 0,  ..., 0, 2, 2], device='cuda:0')
tensor([0, 4, 0,  ..., 0, 0, 2], device='cuda:0')
Epoch: [3][450/616]	Loss 2.4088e-01 (2.3506e-01)	Acc 0.750000 (0.751232)
tensor([0, 4, 3,  ..., 4, 1, 2], device='cuda:0')
tensor([0, 4, 3,  ..., 4, 0, 2], device='cuda:0')
Epoch: [3][500/616]	Loss 2.3933e-01 (2.3490e-01)	Acc 0.748047 (0.751454)
tensor([4, 4, 0,  ..., 1, 4, 1], device='cuda:0')
tensor([4, 0, 0,  ..., 0, 4, 1], device='cuda:0')
Epoch: [3][550/616]	Loss 2.2891e-01 (2.3470e-01)	Acc 0.762695 (0.751643)
tensor([2, 3, 2,  ..., 2, 1, 3], device='cuda:0')
tensor([2, 3, 2,  ..., 2, 1, 3], device='cuda:0')
Epoch: [3][600/616]	Loss 2.3744e-01 (2.3451e-01)	Acc 0.748047 (0.751848)
tensor([0, 2, 4,  ..., 1, 4, 0], device='cuda:0')
tensor([0, 2, 4,  ..., 1, 0, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.738782 (0.751243)
Training Loss of Epoch 3: 0.23449140317071743
Training Acc of Epoch 3: 0.7518451473577236
Testing Acc of Epoch 3: 0.7512434782608696
Early stopping not satisfied.
---------------------
Start epoch 4
---------------------
Epoch: [4][  0/616]	Loss 2.3349e-01 (2.3349e-01)	Acc 0.759766 (0.759766)
tensor([4, 2, 1,  ..., 1, 1, 4], device='cuda:0')
tensor([4, 2, 1,  ..., 1, 1, 4], device='cuda:0')
Epoch: [4][ 50/616]	Loss 2.2962e-01 (2.3459e-01)	Acc 0.755859 (0.751015)
tensor([1, 1, 0,  ..., 2, 0, 3], device='cuda:0')
tensor([0, 1, 0,  ..., 2, 1, 3], device='cuda:0')
Epoch: [4][100/616]	Loss 2.4096e-01 (2.3435e-01)	Acc 0.739258 (0.751769)
tensor([2, 2, 1,  ..., 0, 1, 1], device='cuda:0')
tensor([2, 2, 3,  ..., 0, 1, 1], device='cuda:0')
Epoch: [4][150/616]	Loss 2.2428e-01 (2.3425e-01)	Acc 0.759766 (0.751901)
tensor([1, 0, 1,  ..., 1, 1, 3], device='cuda:0')
tensor([1, 4, 3,  ..., 4, 1, 3], device='cuda:0')
Epoch: [4][200/616]	Loss 2.3447e-01 (2.3402e-01)	Acc 0.751953 (0.752147)
tensor([3, 1, 1,  ..., 0, 1, 4], device='cuda:0')
tensor([3, 1, 0,  ..., 0, 1, 4], device='cuda:0')
Epoch: [4][250/616]	Loss 2.3061e-01 (2.3381e-01)	Acc 0.763672 (0.752455)
tensor([4, 0, 3,  ..., 0, 3, 2], device='cuda:0')
tensor([4, 0, 3,  ..., 0, 3, 2], device='cuda:0')
Epoch: [4][300/616]	Loss 2.5178e-01 (2.3394e-01)	Acc 0.732422 (0.751885)
tensor([3, 3, 1,  ..., 0, 4, 4], device='cuda:0')
tensor([3, 0, 1,  ..., 1, 0, 4], device='cuda:0')
Epoch: [4][350/616]	Loss 2.3401e-01 (2.3369e-01)	Acc 0.742188 (0.752148)
tensor([3, 0, 0,  ..., 4, 4, 2], device='cuda:0')
tensor([3, 0, 0,  ..., 0, 4, 4], device='cuda:0')
Epoch: [4][400/616]	Loss 2.3432e-01 (2.3352e-01)	Acc 0.736328 (0.752360)
tensor([1, 2, 2,  ..., 0, 3, 3], device='cuda:0')
tensor([1, 2, 2,  ..., 4, 3, 3], device='cuda:0')
Epoch: [4][450/616]	Loss 2.5223e-01 (2.3338e-01)	Acc 0.738281 (0.752527)
tensor([4, 4, 0,  ..., 2, 3, 2], device='cuda:0')
tensor([4, 4, 0,  ..., 2, 3, 2], device='cuda:0')
Epoch: [4][500/616]	Loss 2.1873e-01 (2.3317e-01)	Acc 0.766602 (0.752815)
tensor([1, 2, 2,  ..., 2, 2, 4], device='cuda:0')
tensor([1, 2, 2,  ..., 2, 2, 4], device='cuda:0')
Epoch: [4][550/616]	Loss 2.4195e-01 (2.3283e-01)	Acc 0.747070 (0.753281)
tensor([1, 0, 4,  ..., 0, 2, 3], device='cuda:0')
tensor([1, 1, 4,  ..., 0, 2, 3], device='cuda:0')
Epoch: [4][600/616]	Loss 2.3507e-01 (2.3272e-01)	Acc 0.753906 (0.753425)
tensor([1, 0, 4,  ..., 2, 4, 2], device='cuda:0')
tensor([1, 0, 0,  ..., 2, 4, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.738782 (0.754487)
Training Loss of Epoch 4: 0.23267524920827976
Training Acc of Epoch 4: 0.7534775152439024
Testing Acc of Epoch 4: 0.7544869565217391
Early stopping not satisfied.
---------------------
Start epoch 5
---------------------
Epoch: [5][  0/616]	Loss 2.3663e-01 (2.3663e-01)	Acc 0.755859 (0.755859)
tensor([2, 4, 1,  ..., 3, 4, 0], device='cuda:0')
tensor([2, 0, 1,  ..., 1, 4, 4], device='cuda:0')
Epoch: [5][ 50/616]	Loss 2.2564e-01 (2.3253e-01)	Acc 0.774414 (0.754481)
tensor([1, 1, 1,  ..., 3, 2, 3], device='cuda:0')
tensor([1, 2, 1,  ..., 3, 2, 3], device='cuda:0')
Epoch: [5][100/616]	Loss 2.2973e-01 (2.3092e-01)	Acc 0.757812 (0.755956)
tensor([3, 4, 2,  ..., 1, 0, 2], device='cuda:0')
tensor([3, 4, 4,  ..., 4, 0, 4], device='cuda:0')
Epoch: [5][150/616]	Loss 2.3966e-01 (2.3157e-01)	Acc 0.752930 (0.754883)
tensor([0, 1, 3,  ..., 1, 1, 3], device='cuda:0')
tensor([4, 1, 3,  ..., 1, 1, 3], device='cuda:0')
Epoch: [5][200/616]	Loss 2.2211e-01 (2.3170e-01)	Acc 0.767578 (0.754339)
tensor([0, 2, 4,  ..., 3, 4, 0], device='cuda:0')
tensor([1, 4, 0,  ..., 1, 4, 0], device='cuda:0')
Epoch: [5][250/616]	Loss 2.2622e-01 (2.3154e-01)	Acc 0.758789 (0.754533)
tensor([1, 1, 1,  ..., 2, 0, 2], device='cuda:0')
tensor([1, 1, 1,  ..., 2, 0, 1], device='cuda:0')
Epoch: [5][300/616]	Loss 2.3166e-01 (2.3166e-01)	Acc 0.753906 (0.754377)
tensor([1, 4, 3,  ..., 1, 0, 2], device='cuda:0')
tensor([1, 4, 3,  ..., 1, 3, 3], device='cuda:0')
Epoch: [5][350/616]	Loss 2.2962e-01 (2.3140e-01)	Acc 0.751953 (0.754755)
tensor([4, 4, 3,  ..., 0, 0, 4], device='cuda:0')
tensor([4, 4, 3,  ..., 2, 3, 4], device='cuda:0')
Epoch: [5][400/616]	Loss 2.3294e-01 (2.3143e-01)	Acc 0.751953 (0.754593)
tensor([2, 0, 1,  ..., 4, 4, 1], device='cuda:0')
tensor([3, 0, 1,  ..., 4, 4, 1], device='cuda:0')
Epoch: [5][450/616]	Loss 2.3697e-01 (2.3141e-01)	Acc 0.739258 (0.754723)
tensor([4, 2, 4,  ..., 0, 2, 0], device='cuda:0')
tensor([4, 3, 4,  ..., 0, 2, 0], device='cuda:0')
Epoch: [5][500/616]	Loss 2.2663e-01 (2.3141e-01)	Acc 0.760742 (0.754629)
tensor([0, 2, 3,  ..., 3, 0, 2], device='cuda:0')
tensor([1, 2, 3,  ..., 3, 0, 2], device='cuda:0')
Epoch: [5][550/616]	Loss 2.3624e-01 (2.3134e-01)	Acc 0.755859 (0.754819)
tensor([1, 0, 4,  ..., 1, 2, 3], device='cuda:0')
tensor([1, 0, 4,  ..., 1, 2, 3], device='cuda:0')
Epoch: [5][600/616]	Loss 2.3406e-01 (2.3122e-01)	Acc 0.732422 (0.754855)
tensor([0, 1, 2,  ..., 2, 0, 2], device='cuda:0')
tensor([1, 1, 2,  ..., 2, 0, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.745192 (0.754996)
Training Loss of Epoch 5: 0.23122429695071245
Training Acc of Epoch 5: 0.7548399390243903
Testing Acc of Epoch 5: 0.7549956521739131
Early stopping not satisfied.
---------------------
Start epoch 6
---------------------
Epoch: [6][  0/616]	Loss 2.4283e-01 (2.4283e-01)	Acc 0.738281 (0.738281)
tensor([0, 2, 0,  ..., 0, 1, 0], device='cuda:0')
tensor([1, 2, 0,  ..., 0, 3, 0], device='cuda:0')
Epoch: [6][ 50/616]	Loss 2.1362e-01 (2.3112e-01)	Acc 0.773438 (0.753523)
tensor([1, 0, 2,  ..., 1, 3, 1], device='cuda:0')
tensor([1, 0, 2,  ..., 1, 3, 1], device='cuda:0')
Epoch: [6][100/616]	Loss 2.3224e-01 (2.3059e-01)	Acc 0.758789 (0.755086)
tensor([0, 4, 0,  ..., 4, 2, 3], device='cuda:0')
tensor([0, 4, 3,  ..., 4, 2, 3], device='cuda:0')
Epoch: [6][150/616]	Loss 2.2527e-01 (2.2971e-01)	Acc 0.770508 (0.756597)
tensor([1, 3, 0,  ..., 2, 2, 4], device='cuda:0')
tensor([2, 3, 0,  ..., 2, 2, 4], device='cuda:0')
Epoch: [6][200/616]	Loss 2.2144e-01 (2.3041e-01)	Acc 0.768555 (0.755801)
tensor([0, 4, 3,  ..., 1, 1, 2], device='cuda:0')
tensor([0, 2, 3,  ..., 2, 0, 2], device='cuda:0')
Epoch: [6][250/616]	Loss 2.2329e-01 (2.3037e-01)	Acc 0.759766 (0.755424)
tensor([0, 4, 0,  ..., 4, 2, 4], device='cuda:0')
tensor([0, 4, 0,  ..., 4, 2, 0], device='cuda:0')
Epoch: [6][300/616]	Loss 2.3027e-01 (2.3027e-01)	Acc 0.761719 (0.755574)
tensor([0, 4, 0,  ..., 0, 2, 0], device='cuda:0')
tensor([0, 4, 0,  ..., 1, 2, 0], device='cuda:0')
Epoch: [6][350/616]	Loss 2.2098e-01 (2.3022e-01)	Acc 0.764648 (0.755670)
tensor([1, 1, 1,  ..., 4, 0, 2], device='cuda:0')
tensor([1, 3, 1,  ..., 0, 1, 2], device='cuda:0')
Epoch: [6][400/616]	Loss 2.3254e-01 (2.3008e-01)	Acc 0.741211 (0.755811)
tensor([4, 0, 4,  ..., 1, 1, 4], device='cuda:0')
tensor([4, 3, 4,  ..., 1, 2, 4], device='cuda:0')
Epoch: [6][450/616]	Loss 2.3408e-01 (2.3015e-01)	Acc 0.752930 (0.755838)
tensor([1, 3, 3,  ..., 2, 1, 2], device='cuda:0')
tensor([4, 3, 2,  ..., 2, 3, 2], device='cuda:0')
Epoch: [6][500/616]	Loss 2.3606e-01 (2.3012e-01)	Acc 0.751953 (0.755937)
tensor([2, 1, 1,  ..., 2, 1, 4], device='cuda:0')
tensor([3, 1, 1,  ..., 2, 0, 4], device='cuda:0')
Epoch: [6][550/616]	Loss 2.3734e-01 (2.3018e-01)	Acc 0.742188 (0.755875)
tensor([1, 1, 0,  ..., 2, 3, 3], device='cuda:0')
tensor([1, 1, 0,  ..., 2, 3, 4], device='cuda:0')
Epoch: [6][600/616]	Loss 2.1729e-01 (2.3021e-01)	Acc 0.767578 (0.755863)
tensor([1, 3, 4,  ..., 1, 1, 1], device='cuda:0')
tensor([1, 3, 4,  ..., 2, 2, 0], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.741987 (0.758174)
Training Loss of Epoch 6: 0.23016467843113875
Training Acc of Epoch 6: 0.7559181275406504
Testing Acc of Epoch 6: 0.7581739130434783
Early stopping not satisfied.
---------------------
Start epoch 7
---------------------
Epoch: [7][  0/616]	Loss 2.2814e-01 (2.2814e-01)	Acc 0.763672 (0.763672)
tensor([0, 3, 2,  ..., 1, 1, 3], device='cuda:0')
tensor([1, 3, 2,  ..., 1, 3, 1], device='cuda:0')
Epoch: [7][ 50/616]	Loss 2.3390e-01 (2.2771e-01)	Acc 0.753906 (0.757851)
tensor([1, 4, 2,  ..., 4, 0, 3], device='cuda:0')
tensor([1, 3, 2,  ..., 1, 0, 3], device='cuda:0')
Epoch: [7][100/616]	Loss 2.2156e-01 (2.2863e-01)	Acc 0.773438 (0.756788)
tensor([0, 0, 1,  ..., 1, 4, 1], device='cuda:0')
tensor([1, 1, 0,  ..., 0, 1, 1], device='cuda:0')
Epoch: [7][150/616]	Loss 2.3677e-01 (2.2922e-01)	Acc 0.750000 (0.757095)
tensor([4, 4, 2,  ..., 3, 2, 1], device='cuda:0')
tensor([4, 4, 0,  ..., 3, 4, 1], device='cuda:0')
Epoch: [7][200/616]	Loss 2.1701e-01 (2.2898e-01)	Acc 0.764648 (0.757263)
tensor([2, 2, 2,  ..., 4, 3, 3], device='cuda:0')
tensor([1, 2, 1,  ..., 4, 3, 3], device='cuda:0')
Epoch: [7][250/616]	Loss 2.2649e-01 (2.2939e-01)	Acc 0.766602 (0.756871)
tensor([2, 0, 4,  ..., 1, 3, 0], device='cuda:0')
tensor([2, 1, 1,  ..., 1, 3, 1], device='cuda:0')
Epoch: [7][300/616]	Loss 2.2903e-01 (2.2928e-01)	Acc 0.757812 (0.756706)
tensor([0, 2, 2,  ..., 2, 3, 4], device='cuda:0')
tensor([3, 2, 2,  ..., 2, 3, 4], device='cuda:0')
Epoch: [7][350/616]	Loss 2.3867e-01 (2.2914e-01)	Acc 0.740234 (0.757017)
tensor([3, 3, 1,  ..., 3, 4, 1], device='cuda:0')
tensor([3, 3, 1,  ..., 3, 4, 3], device='cuda:0')
Epoch: [7][400/616]	Loss 2.3957e-01 (2.2909e-01)	Acc 0.746094 (0.756992)
tensor([3, 1, 0,  ..., 3, 4, 1], device='cuda:0')
tensor([3, 3, 3,  ..., 3, 0, 1], device='cuda:0')
Epoch: [7][450/616]	Loss 2.4223e-01 (2.2921e-01)	Acc 0.755859 (0.756905)
tensor([0, 3, 1,  ..., 0, 4, 1], device='cuda:0')
tensor([0, 3, 1,  ..., 0, 4, 1], device='cuda:0')
Epoch: [7][500/616]	Loss 2.2041e-01 (2.2917e-01)	Acc 0.779297 (0.757124)
tensor([2, 2, 1,  ..., 4, 0, 1], device='cuda:0')
tensor([2, 2, 1,  ..., 4, 0, 0], device='cuda:0')
Epoch: [7][550/616]	Loss 2.0975e-01 (2.2922e-01)	Acc 0.773438 (0.756967)
tensor([0, 1, 0,  ..., 3, 4, 1], device='cuda:0')
tensor([0, 1, 0,  ..., 3, 4, 1], device='cuda:0')
Epoch: [7][600/616]	Loss 2.2670e-01 (2.2926e-01)	Acc 0.764648 (0.756912)
tensor([4, 3, 2,  ..., 0, 0, 1], device='cuda:0')
tensor([4, 3, 2,  ..., 0, 1, 2], device='cuda:0')
Neglect the last epoch so that num samples/batch size = int
Testing
Acc 0.745192 (0.758800)
Training Loss of Epoch 7: 0.22920884284062115
Training Acc of Epoch 7: 0.7569947281504065
Testing Acc of Epoch 7: 0.7588
Early stopping not satisfied.
---------------------
Start epoch 8
---------------------
